{"version":3,"sources":["components/partials/header/header.js","components/partials/page-header/pageHeader.js","components/partials/footer/footer.js","components/partials/sidebar/sidebar.js","components/partials/alert/index.js","components/partials/firebase/index.js","components/hooks/upload/index.js","components/partials/progressBar/index.js","components/partials/infowindow/index.js","components/partials/HomeCellPin/index.js","components/partials/map/index.js","components/partials/breadcrumb/Breadcrumb.js","components/partials/thumb.js","components/util/index.js","components/pages/login/login.js","components/pages/dashboard/Card.js","components/pages/dashboard/dashboard.js","components/pages/contact/contact.js","components/pages/notfound/notfound.js","components/pages/gpa/formError.js","components/pages/gpa/createCourse.js","components/pages/Helpers/infoCard.js","components/pages/Helpers/loaderCard.js","components/pages/gpa/lesson/createLesson.js","components/pages/gpa/assigment/dialog/index.js","components/pages/gpa/modal/editCourse.js","components/pages/gpa/candidate/CandidateTables/CandidateTables.js","components/pages/gpa/cards/courseCard.js","components/pages/livestream/livestream.js","components/pages/profile/profile.js","components/pages/gpa/viewCourses.js","components/pages/members/formError.js","components/pages/members/firstTimers.js","components/pages/members/newUser.js","components/pages/members/MVP_MemberLists.js","components/pages/members/users.js","components/pages/event/DatePicker.js","components/pages/event/formError.js","components/pages/event/thumb.js","components/pages/event/createEvent.js","components/pages/event/eventCard.js","components/pages/event/listEvent.js","components/pages/branches/formError.js","components/pages/branches/createBranch.js","components/pages/branches/viewBranches.js","components/pages/gallery/formError.js","components/pages/gallery/createGallery.js","components/pages/gallery/eventCard.js","components/pages/gallery/listGallery.js","components/pages/Cell/formError.js","components/pages/Cell/CreateCell.js","components/pages/Cell/ViewCell.js","components/pages/Sermon/formError.js","components/pages/Sermon/createSermon.js","components/pages/Sermon/sermonCard.js","components/pages/tithe/createTithe.js","components/pages/Sermon/sermonList.js","components/pages/tithe/TithersList.js","components/pages/tithe/viewTithes.js","routes.js","redux/reducers/viewCourseReducer.js","redux/reducers/viewEventReducer.js","redux/reducers/user.js","redux/reducers/rootReducer.js","redux/actions/types.js","redux/store.js","index.js"],"names":["Header","className","id","action","role","type","placeholder","href","rel","data-target","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","src","alt","pageHeader","title","currpg","footer","style","color","Date","getFullYear","SideBar","user","useSelector","state","countries","states","cities","useStyles","makeStyles","theme","root","margin","CustomAlert","message","variant","severity","classes","Alert","console","log","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","storage","useStorage","file","path","useState","url","setUrl","progress","setProgress","error","setError","useEffect","storageRef","ref","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","filePath","ProgressBar","directory","name","width","Math","ceil","InfoWindow","props","place","position","bottom","left","backgroundColor","boxShadow","padding","fontSize","zIndex","coordinator","address","String","fromCharCode","repeat","floor","phone","HomeCellPin","setHomeCell","cell_id","show","setVisibilty","height","onClick","onMouseEnter","onMouseLeave","UserPin","text","Map","locations","zoomLevel","currentLocation","marginBottom","lodash","isEmpty","bootstrapURLKeys","key","process","libraries","center","defaultZoom","yesIWantToUseGoogleMapApiInternals","lat","lng","map","location","index","breadcrumb","crumb","crumbItem","aria-label","Thumb","loading","thumb","undefined","nextProps","this","setState","reader","FileReader","onloadend","result","readAsDataURL","React","Component","Geocode","setApiKey","setLanguage","geocode","handleError","fetchCells","dispatch","collection","onSnapshot","querySnapshot","cells","forEach","doc","push","data","_","orderBy","fetchCountry","fetchStates","where","get","query","empty","docs","snapshot","fetchCities","Login","useDispatch","history","useHistory","errorMessage","callFetchCountry","callFetchCells","handleLogin","e","preventDefault","loginValues","serializeForm","target","hash","email","password","signInWithEmailAndPassword","res","uid","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","maxWidth","onSubmit","autocomplete","required","data-msg","value","backgroundImage","GrowthCard","icon","Fragment","RecentUsers","Reports","report","dashboard","bar","labels","datasets","label","borderColor","borderWidth","pie","hoverBackgroundColor","attendance","fill","lineTension","document","getElementById","classList","add","Helmet","options","display","legend","borderLeftColor","borderLeftWidth","borderLeftStyle","contact","to","method","autofocus","rows","Notfound","FormError","touched","validationSchema","Yup","shape","coursetitle","CreateCourse","match","setFile","initialValues","values","setSubmitting","resetForm","courseObj","uuidv4","img","created","now","success","handleSubmit","isSubmitting","setFieldValue","handleChange","errors","handleBlur","encType","onChange","onBlur","htmlFor","event","currentTarget","files","disabled","InfoCard","info","LoaderCard","REACT_APP_BASEURL","API_URL","withStyles","content","inner","minWidth","nameContainer","alignItems","avatar","marginRight","spacing","actions","justifyContent","candidates","selectedCandidates","setselectedCandidates","rowsPerPage","setRowsPerPage","page","setPage","CardContent","Table","TableHead","TableRow","TableCell","Checkbox","checked","length","indeterminate","candidate","TableBody","slice","tableRow","hover","selected","indexOf","selectedIndex","newselectedCandidates","concat","handleSelectOne","Avatar","avatarUrl","Typography","format","withTitle","gpaDate","Button","button","startIcon","CardActions","TablePagination","component","count","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","EditCourse","open","setOpen","handleClose","size","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","lessonNum","instruction","axios","then","response","catch","nullable","DialogContent","DialogContentText","Grid","item","xs","sm","md","lg","TextField","fullWidth","defaultValue","helperText","DialogActions","Card","image","ButtonGroup","textDecoration","fromNow","aria-hidden","Livestream","playerSource","setplaysource","setChecked","setDisabled","handleSchedule","scheduleObj","streamData","programTitle","scheduleMonth","scheduleDate","scheduleTime","time","live","update","handleStreaming","streamObj","streamid","streamURL","data-on","data-off","data-onstyle","data-offstyle","scrolling","allowtransparency","allow","allowFullScreen","class","number","ViewCourses","courses","setCourses","isLoading","setLoading","fetchCourseLists","results","course","btnTitle","surname","min","max","firstname","gender","bustop","city","country","age","homecell","FirstTimers","userStore","cell","setCell","setLocations","setLocation","restructured","coordinates","convertAddressToLatLng","coords","geometry","comment","onselectCountry","onselectState","NewUser","roles","createUserWithEmailAndPassword","reg","set","Members","members","setMember","fetchUsers","DatePickerField","useFormikContext","useField","field","val","date","details","CreateEvent","setImage","types","month","moment","year","toLocaleTimeString","status","actualDate","DatePicker","showTimeSelect","dateFormat","selectedFile","includes","storeImage","EventCard","ListEvents","events","setEvents","fetchEvents","CreateBranch","navigation","navigate","setTimeout","marginTop","ViewBranch","branches","setBranches","fetchBranches","branch","CreateGallery","galleries","setGallery","fetchGallery","gallery","CreateCell","setCoordinates","fromAddress","Breadcrumb","multiline","ViewCell","setCells","data-placement","data-title","tabindex","data-dismiss","formControl","selectEmpty","CreateSermon","sermonUrl","setSermonUrl","sermonImage","setSermonImage","setCoverType","SUPPORTED_FILE_FORMATS","coverimg","sermonfile","test","sermonType","sermonCoverType","preacher","amount","goBack","sermonImg","artist","preview","parseInt","quantity","FormControl","InputLabel","Select","native","SermonCard","sermontype","controls","poster","connect","sermonData","sermon","fetchSermonList","sermonItems","sermontitle","CreateTithe","months","years","lastname","othername","m","yr","styles","SetCandidates","fetchTithers","ViewTithes","Routes","exact","render","initialState","coursesItems","courseItem","eventItems","eventItem","isAuthenticated","rootReducer","combineReducers","payload","persistConfig","whitelist","middlewares","thunk","enhancers","applyMiddleware","persistedReducer","persistReducer","store","createStore","compose","persistor","persistStore","ReactDOM","StrictMode","forceRefresh"],"mappings":"sgBAuQeA,EArQA,WACb,OAEE,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,UAEb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,WAChB,uBAAGA,UAAU,gBAEf,0BAAMC,GAAG,aAAaC,OAAO,KAAKC,KAAK,UACrC,2BACEC,KAAK,SACLC,YAAY,8BACZL,UAAU,mBAIhB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,mEAEb,yBAAKA,UAAU,iBAEb,uBACEM,KAAK,aACLN,UAAU,yCAEV,yBAAKA,UAAU,uCACb,0DAEF,yBAAKA,UAAU,iDACb,wCAIJ,uBAAGC,GAAG,aAAaK,KAAK,MAAMN,UAAU,mBACtC,+BACA,+BACA,iCAIJ,wBAAIA,UAAU,mEAEZ,wBAAIA,UAAU,sCACZ,uBAAGC,GAAG,SAASK,KAAK,OAClB,uBAAGN,UAAU,kBAIjB,wBAAIA,UAAU,qBACZ,uBACEC,GAAG,gBACHM,IAAI,WACJC,cAAY,KACZF,KAAK,MACLG,cAAY,WACZC,gBAAc,OACdC,gBAAc,QACdX,UAAU,YAEV,uBAAGA,UAAU,iBACb,0BAAMA,UAAU,6BAAhB,OAEF,wBAAIY,kBAAgB,gBAAgBZ,UAAU,iBAC5C,4BACE,uBAAGO,IAAI,WAAWD,KAAK,KAAKN,UAAU,iBACpC,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,wBACb,uBAAGA,UAAU,4BADf,2BAIA,yBAAKA,UAAU,qBACb,oDAKR,4BACE,uBAAGO,IAAI,WAAWD,KAAK,KAAKN,UAAU,iBACpC,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,wBACb,uBAAGA,UAAU,0BADf,wBAIA,yBAAKA,UAAU,qBACb,oDAKR,4BACE,uBAAGO,IAAI,WAAWD,KAAK,KAAKN,UAAU,iBACpC,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,wBACb,uBAAGA,UAAU,2BADf,mBAIA,yBAAKA,UAAU,qBACb,oDAKR,4BACE,uBAAGO,IAAI,WAAWD,KAAK,KAAKN,UAAU,iBACpC,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,wBACb,uBAAGA,UAAU,0BADf,wBAIA,yBAAKA,UAAU,qBACb,qDAKR,4BACE,uBACEO,IAAI,WACJD,KAAK,KACLN,UAAU,+CAEV,+DAMR,wBAAIA,UAAU,qBACZ,uBACEC,GAAG,WACHM,IAAI,WACJC,cAAY,KACZF,KAAK,KACLG,cAAY,WACZC,gBAAc,OACdC,gBAAc,QACdX,UAAU,YAEV,uBAAGA,UAAU,qBACb,0BAAMA,UAAU,gCAAhB,OAEF,wBAAIY,kBAAgB,gBAAgBZ,UAAU,iBAC5C,4BACE,uBACEO,IAAI,WACJD,KAAK,KACLN,UAAU,wBAEV,yBAAKA,UAAU,eACb,yBACEa,IAAI,mBACJC,IAAI,MACJd,UAAU,8BAGd,yBAAKA,UAAU,YACb,wBAAIA,UAAU,MAAd,aACA,qDAIN,4BACE,uBACEO,IAAI,WACJD,KAAK,KACLN,UAAU,wBAEV,yBAAKA,UAAU,eACb,yBACEa,IAAI,mBACJC,IAAI,MACJd,UAAU,8BAGd,yBAAKA,UAAU,YACb,wBAAIA,UAAU,MAAd,kBACA,qDAIN,4BACE,uBACEO,IAAI,WACJD,KAAK,KACLN,UAAU,wBAEV,yBAAKA,UAAU,eACb,yBACEa,IAAI,mBACJC,IAAI,MACJd,UAAU,8BAGd,yBAAKA,UAAU,YACb,wBAAIA,UAAU,MAAd,eACA,qDAIN,4BACE,uBACEO,IAAI,WACJD,KAAK,KACLN,UAAU,+CAEV,0DAMR,wBAAIA,UAAU,qBACZ,uBACEC,GAAG,YACHM,IAAI,WACJC,cAAY,KACZF,KAAK,KACLG,cAAY,WACZC,gBAAc,OACdC,gBAAc,QACdX,UAAU,qCAEV,uBAAGA,UAAU,gBACb,0BAAMA,UAAU,4BAAhB,YAEF,wBAAIY,kBAAgB,YAAYZ,UAAU,iBACxC,4BACE,uBACEO,IAAI,WACJD,KAAK,oBACLN,UAAU,iBAEV,uBAAGA,UAAU,gBALf,iBASF,4BACE,uBAAGO,IAAI,WAAWD,KAAK,IAAIN,UAAU,iBACnC,uBAAGA,UAAU,mBADf,mBC3NLe,EApBI,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAC3B,OACE,kBAAC,WAAD,KACE,4BAAQjB,UAAU,eAChB,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,oBAAoBgB,KAGtC,yBAAKhB,UAAU,qCACb,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,mBACZ,uBAAGM,KAAK,cAAR,SAEF,wBAAIN,UAAU,0BAA0BiB,OCKnCC,EAlBA,WACb,OACE,4BAAQlB,UAAU,eAChB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,uBAAGmB,MAAO,CAAEC,MAAO,YAAnB,mBACoB,IAAIC,MAAOC,cAAe,MAGhD,yBAAKtB,UAAU,uBACb,uBAAGmB,MAAO,CAAEC,MAAO,YAAnB,oBCqMGG,EA/MC,WAEd,IAAMC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QACFA,EAA9BG,UAA8BH,EAAnBI,OAAmBJ,EAAXK,OAC3B,OAEE,yBAAK7B,UAAU,eAEb,yBAAKA,UAAU,4CACb,uBAAGM,KAAK,qBACN,yBAAKN,UAAU,UACb,yBACEa,IAAI,kBACJC,IAAI,MACJd,UAAU,+BAIhB,yBAAKA,UAAU,SACb,wBAAIA,UAAU,KAAKmB,MAAO,CAAEC,MAAO,UAGnC,4CAIJ,wBAAIpB,UAAU,iBACZ,wBAAIC,GAAG,QACL,uBAAGK,KAAK,cACL,IACD,uBAAGN,UAAU,eAFf,aAE2C,MAG7C,wBAAIC,GAAG,UACL,uBAAGK,KAAK,kBAAkBK,gBAAc,QAAQF,cAAY,YAC1D,uBAAGT,UAAU,iBADf,YAGA,wBAAIC,GAAG,iBAAiBD,UAAU,0BAChC,4BACE,uBAAGM,KAAK,4BAAR,sBAEF,4BACE,uBAAGA,KAAK,uBAAR,uBAKN,wBAAIL,GAAG,QACL,uBAAGK,KAAK,gBAAgBK,gBAAc,QAAQF,cAAY,YACxD,uBAAGT,UAAU,eADf,UAGA,wBAAIC,GAAG,eAAeD,UAAU,0BAC9B,4BACE,uBAAGM,KAAK,0BAAR,gBAEF,4BACE,uBAAGA,KAAK,oBAAR,oBAMN,wBAAIL,GAAG,cACL,uBACEK,KAAK,kBACLK,gBAAc,QACdF,cAAY,YAEZ,uBAAGT,UAAU,uBALf,gBAOA,wBAAIC,GAAG,iBAAiBD,UAAU,0BAChC,4BACE,uBAAGM,KAAK,yBAAR,wBAIN,wBAAIL,GAAG,OACL,uBACEK,KAAK,kBACLK,gBAAc,QACdF,cAAY,YAEZ,uBAAGT,UAAU,sBALf,QAOA,wBAAIC,GAAG,iBAAiBD,UAAU,0BAChC,4BACE,uBAAGM,KAAK,yBAAR,kBAEF,4BACE,uBAAGA,KAAK,uBAAR,kBAIN,wBAAIL,GAAG,WACL,uBAAGK,KAAK,iBAAiBK,gBAAc,QAAQF,cAAY,YACzD,uBAAGT,UAAU,iBADf,WAGA,wBAAIC,GAAG,gBAAgBD,UAAU,0BAC/B,4BACE,uBAAGM,KAAK,6BAAR,4BAGF,4BACE,uBAAGA,KAAK,2BAAR,eADF,KAIA,4BACE,uBAAGA,KAAK,sBAAR,sBAIN,wBAAIL,GAAG,WACL,uBACEK,KAAK,sBACLK,gBAAc,QACdF,cAAY,YAEZ,uBAAGT,UAAU,cALf,WAOA,wBAAIC,GAAG,qBAAqBD,UAAU,0BACpC,4BACE,uBAAGM,KAAK,6BAAR,mBAEF,4BACE,uBAAGA,KAAK,2BAAR,mBAIN,wBAAIL,GAAG,SACL,uBAAGK,KAAK,iBAAiBK,gBAAc,QAAQF,cAAY,YACzD,uBAAGT,UAAU,2BADf,SAGA,wBAAIC,GAAG,gBAAgBD,UAAU,0BAC/B,4BACE,uBAAGM,KAAK,2BAAR,iBAEF,4BACE,uBAAGA,KAAK,yBAAR,kBAIN,wBAAIL,GAAG,SACL,uBAAGK,KAAK,iBAAiBK,gBAAc,QAAQF,cAAY,YACzD,uBAAGT,UAAU,2BADf,SAGA,wBAAIC,GAAG,gBAAgBD,UAAU,0BAC/B,4BACE,uBAAGM,KAAK,kCAAR,kBAEF,4BACE,uBAAGA,KAAK,yBAAR,mBAIN,wBAAIL,GAAG,SACL,uBAAGK,KAAK,iBAAiBK,gBAAc,QAAQF,cAAY,YACzD,uBAAGT,UAAU,2BADf,iBAGA,wBAAIC,GAAG,gBAAgBD,UAAU,0BAC/B,4BACE,uBAAGM,KAAK,2BAAR,wBAEF,4BACE,uBAAGA,KAAK,0BAAR,yBAIN,4BACE,uBACEA,KAAK,uBACLK,gBAAc,QACdF,cAAY,YAEZ,uBAAGT,UAAU,2BALf,aAOA,wBAAIC,GAAG,sBAAsBD,UAAU,0BACrC,4BACE,uBAAGM,KAAK,MAAR,sBAKR,0BAAMN,UAAU,WAAhB,UACA,wBAAIA,UAAU,iBACZ,4BACE,uBAAGM,KAAK,KACL,IACD,uBAAGN,UAAU,eAFf,kBAEgD,MAGlD,4BACE,uBAAGM,KAAK,KACL,IACD,uBAAGN,UAAU,gBAFf,QAEuC,MAGzC,4BACE,uBAAGM,KAAK,KACL,IACD,uBAAGN,UAAU,cAFf,eAE4C,S,2BCrMhD8B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACLC,OAAQ,QAsBEC,EAXK,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC/BC,EAAUT,IAChB,OACI,kBAAC,IAAD,CAAM9B,UAAWuC,EAAQN,MACrB,kBAACO,EAAA,EAAD,CAAOH,QAASA,EAASC,SAAUA,GAC/BF,K,uBCPdK,QAAQC,IAAIC,GAEZA,gBAbqB,CACrBC,OAAQ,0CACNC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMjB,IAAMC,EAAOT,SACPU,EAAYV,cACZW,EAAUX,YCKHY,EAvBI,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KAAU,EACXC,mBAAS,MADE,mBAC1BC,EAD0B,KACrBC,EADqB,OAEDF,mBAAS,GAFR,mBAE1BG,EAF0B,KAEhBC,EAFgB,OAGPJ,mBAAS,MAHF,mBAG1BK,EAH0B,KAGnBC,EAHmB,KAkBlC,OAbCC,qBAAU,WACN,IAAMC,EAAaZ,EAAQa,IAAIV,GAE/BS,EAAWE,IAAIZ,GAAMa,GAAG,iBAAiB,SAACC,GACxC,IAAIC,EAAcD,EAAKE,iBAAmBF,EAAKG,WAAc,IAC7DX,EAAYS,MACX,SAACG,GACFV,EAASU,KAJX,sBAKG,4BAAAC,EAAA,sEACwBT,EAAWU,iBADnC,OACOC,EADP,OAECjB,EAAOiB,GAFR,8CAIL,CAACrB,IACG,CAAEK,WAAUF,MAAKI,UCAZe,G,OAjBK,SAAC,GAA+B,IAA9BtB,EAA6B,EAA7BA,KAAMuB,EAAuB,EAAvBA,UAAWnB,EAAY,EAAZA,OAC7BH,EAAI,UAAMsB,EAAN,YAAmBvB,EAAKwB,MADa,EAEdzB,EAAW,CAACC,OAAMC,SAApCE,GAFgC,EAEvCI,MAFuC,EAEhCJ,KAAKE,EAF2B,EAE3BA,SAKpB,OAJAI,qBAAU,WACNL,EAAOD,KACT,CAACC,EAAQD,IAGP,yBAAK3D,UAAU,YACX,yBAAKA,UAAU,iBACX,0BAAMmB,MAAO,CAAC8D,MAAM,GAAD,OAAKpB,EAAL,OAAnB,IAAwCqB,KAAKC,KAAKtB,GAAlD,U,SC6BCuB,G,OAxCE,SAACC,GAAW,IACnBC,EAAUD,EAAVC,MAaR,OACE,yBAAKnE,MAbiB,CACtBoE,SAAU,WACVC,OAAQ,GACRC,KAAM,QACNR,MAAO,IACPS,gBAAiB,QACjBC,UAAW,mCACXC,QAAS,GACTC,SAAU,GACVC,OAAQ,MAKN,yBAAK3E,MAAO,CAAE0E,SAAU,KAAxB,gBACgBP,EAAMS,aAEtB,yBAAK5E,MAAO,CAAE0E,SAAU,KACtB,0BAAM1E,MAAO,CAAEC,MAAO,SAAtB,YACYkE,EAAMU,QACf,KAGH,0BAAM7E,MAAO,CAAEC,MAAO,cACnB6E,OAAOC,aAAa,MAAMC,OAAO,EAAIjB,KAAKkB,MAAM,MAGrD,yBAAKjF,MAAO,CAAE0E,SAAU,GAAIzE,MAAO,SAAnC,UACUkE,EAAMe,OAEhB,yBAAKlF,MAAO,CAAE0E,SAAU,GAAIzE,MAAO,UAAnC,WCpBOkF,EAXK,SAAC,GAAsC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,QAASlB,EAAY,EAAZA,MAAY,EACzB5B,oBAAS,GADgB,mBAC/C+C,EAD+C,KACzCC,EADyC,KAEtD,OACA,yBAAK1G,UAAU,MAAMmB,MAAO,CAAC2E,OAAQ,IAClCW,GAAQ,kBAAC,EAAD,CAAYnB,MAAOA,IAC5B,yBAAKzE,IAAI,eAAeM,MAAO,CAAE8D,MAAO,OAAQ0B,OAAQ,QAASC,QAAS,kBAAML,EAAYC,IAAUK,aAAc,kBAAMH,GAAa,IAAOI,aAAc,kBAAMJ,GAAa,QCA/KK,EAAU,SAAC,GAAD,EAAGC,KAAH,OACZ,yBAAKhH,UAAU,MAAMmB,MAAO,CAAC2E,OAAQ,IAEnC,yBAAKjF,IAAI,kBAAkBM,MAAO,CAAE8D,MAAO,OAAQ0B,OAAQ,YAqG9CM,EAzCH,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,UAAWC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,gBAAiBb,EAAkB,EAAlBA,YACtD,OACE,yBAAKvG,UAAU,MAAMmB,MAAO,CAACkG,aAAc,SACvC,wBAAIrH,UAAU,UAAd,mCAEA,yBAAKA,UAAU,eACbsH,IAAOC,QAAQL,IACjB,kBAAC,IAAD,CACIM,iBAAkB,CAAEC,IAAKC,0CAA8BC,UAAW,CAAC,kBACnEC,OAAQR,EACRS,YAAaV,EACZW,oCAAoC,GAGnC,kBAAC,EAAD,CACML,IAAI,OACRM,IAAKX,EAAgBW,IACrBC,IAAKZ,EAAgBY,MAGxBd,EAAUe,KAAI,SAACC,EAAUC,GAAX,OAEX,kBAAC,EAAD,CACAV,IAAKU,EACLJ,IAAKG,EAASH,IACdC,IAAKE,EAASF,IACdzB,YAAaA,EACbjB,MAAO4C,EACPzB,MAAM,EACND,QAAS0B,EAASjI,YCrFrBmI,EAdI,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UAC3B,OACE,yBAAKtI,UAAU,UACb,yBAAKuI,aAAW,cACd,wBAAIvI,UAAU,cACZ,wBAAIA,UAAU,mBAAkB,uBAAGM,KAAK,KAAKgI,IAC7C,wBAAItI,UAAU,mBAAkB,uBAAGM,KAAK,KAAK+H,Q,iDCwCxCG,E,2MA7Cb9G,MAAQ,CACN+G,SAAS,EACTC,WAAOC,G,yFAGiBC,GAAY,IAAD,OAC9BA,EAAUpF,MAIfqF,KAAKC,SAAS,CAAEL,SAAS,IAAQ,WAC/B,IAAIM,EAAS,IAAIC,WAEjBD,EAAOE,UAAY,WACjB,EAAKH,SAAS,CAAEL,SAAS,EAAOC,MAAOK,EAAOG,UAGhDH,EAAOI,cAAcP,EAAUpF,W,+BAIzB,IACAA,EAASqF,KAAKxD,MAAd7B,KADD,EAEoBqF,KAAKnH,MAAxB+G,EAFD,EAECA,QAASC,EAFV,EAEUA,MAEjB,OAAKlF,EAIDiF,EACK,yCAIP,yBACE5H,IAAK6H,EACL5H,IAAK0C,EAAKwB,KACVhF,UAAU,qBACV2G,OAAQ,IACR1B,MAAO,MAbF,S,GA3BOmE,IAAMC,W,0BCE1BC,IAAQC,UAAU7B,2CAElB4B,IAAQE,YAAY,MAEb,IAAMC,EAAUH,IA0EVI,EAAc,SAAC3F,GAC1BtB,QAAQC,IAAI,sBAAuBqB,IAGxB4F,EAAU,uCAAG,WAAOC,GAAP,SAAAjF,EAAA,sEAClBtB,EAAUwG,WAAW,SACpBC,YAAW,SAACC,GACX,IAAIC,EAAQ,GACZD,EAAcE,SAAQ,SAACC,GACrBF,EAAMG,KAAKD,EAAIE,WAEjBJ,EAAQK,IAAEC,QAAQN,EAAO,CAAC,QAAQ,CAAC,QACpCJ,EAAS,CAAExJ,KAAM,YAAa4J,YAC5BN,GATe,2CAAH,sDAYVa,GAAY,uCAAG,WAAOX,GAAP,SAAAjF,EAAA,sEACpBtB,EAAUwG,WAAW,aACpBC,YAAW,SAACC,GACX,IAAIpI,EAAY,GAChBoI,EAAcE,SAAQ,SAACC,GACrBvI,EAAUwI,KAAKD,EAAIE,WAErBzI,EAAY0I,IAAEC,QAAQ3I,EAAW,CAAC,QAAQ,CAAC,QAC5CiI,EAAS,CAAExJ,KAAM,kBAAmBuB,gBAClC+H,GATiB,2CAAH,sDAYZc,GAAW,uCAAG,WAAOZ,EAAS3J,GAAhB,iBAAA0E,EAAA,sEACLtB,EAAUwG,WAAW,UAAUY,MAAM,aAAa,KAAMxK,GAAIyK,MADvD,OACnBC,EADmB,OAErB/I,EAAS,GACT+I,EAAMC,QACRD,EAAME,KAAK5C,KAAI,SAAC6C,GAAD,OAAalJ,EAAOuI,KAAKW,EAASV,WACjDxI,EAASyI,IAAEC,QAAQ1I,EAAQ,CAAC,QAAQ,CAAC,QACrCgI,EAAS,CAAExJ,KAAM,eAAgBwB,YANV,2CAAH,wDAUXmJ,GAAW,uCAAG,WAAOnB,EAAU3J,GAAjB,iBAAA0E,EAAA,sEACLtB,EAAUwG,WAAW,UAAUY,MAAM,WAAW,KAAMxK,GAAIyK,MADrD,OACnBC,EADmB,OAErB9I,EAAS,GACT8I,EAAMC,QACRD,EAAME,KAAK5C,KAAI,SAAC6C,GAAD,OAAajJ,EAAOsI,KAAKW,EAASV,WACjDvI,EAASwI,IAAEC,QAAQzI,EAAQ,CAAC,QAAQ,CAAC,QACrC+H,EAAS,CAAExJ,KAAM,eAAgByB,YANV,2CAAH,wDCUTmJ,GAxHD,WACZ,IAAMpB,EAAWqB,cACXC,EAAUC,cAFE,EAGsBzH,mBAAS,IAH/B,mBAGX0H,EAHW,UAIlBnH,qBAAU,WACRoH,IACAC,MACA,IAEF,IAAMD,EAAgB,uCAAG,sBAAA1G,EAAA,sEACjB4F,GAAaX,GADI,2CAAH,qDAGhB0B,EAAc,uCAAG,sBAAA3G,EAAA,sEACfgF,EAAWC,GADI,2CAAH,qDAKZ2B,EAAW,uCAAG,WAAOC,GAAP,2BAAA7G,EAAA,6DACpB6G,EAAEC,iBADkB,SAGZC,EAAcC,IAAcH,EAAEI,OAAQ,CAAEC,MAAM,IAC5CC,EAAoBJ,EAApBI,MAAOC,EAAaL,EAAbK,SACftJ,QAAQC,IAAI,QAASoJ,GALH,SAOA1I,EAAK4I,2BAA2BF,EAAMC,GAPtC,cAOZE,EAPY,OAQFC,EAAUD,EAAlBzK,KAAQ0K,IARE,UASA7I,EAAUwG,WAAW,SAASK,IAAIgC,GAAKxB,MATvC,QASZR,EATY,OAUZ1I,EAAO0I,EAAIE,OACjBR,EAAS,CAACxJ,KAAM,iBAAkBoB,SAClC0J,EAAQf,KAAK,cAZK,kDAclB1H,QAAQC,IAAI,mBAAZ,MACAyJ,IAAMpI,MAAN,gBAAwB,CACtBwB,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IAtBM,0DAAH,sDA4BnB,OACE,yBAAK3I,UAAU,wBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,cAEb,yBAAKA,UAAU,eACb,yBACEa,IAAI,qBACJC,IAAI,MACJK,MAAO,CAAEsL,SAAU,QACnBzM,UAAU,mBAEZ,wBAAIA,UAAU,kBAAd,eACmB,KAAjBoL,EAAyB,kBAAC,EAAD,CAAa9I,SAAS,QAAQF,QAASgJ,EAAc/I,QAAQ,WAAe,MAEzG,0BAAMrC,UAAU,gBAAgB0M,SAAUnB,GACxC,yBAAKvL,UAAU,cACb,gDACA,2BACEgF,KAAK,QACL5E,KAAK,QACLuM,aAAa,MACbC,UAAQ,EACRC,WAAS,0BACT7M,UAAU,oBAGd,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,4CAEF,yBAAKA,UAAU,YACb,uBAAGM,KAAK,KAAKN,UAAU,8BAAvB,sBAKJ,2BACEgF,KAAK,WACL5E,KAAK,WACLwM,UAAQ,EACRC,WAAS,6BACT7M,UAAU,oBAId,2BACEA,UAAU,wCACVI,KAAK,SACL0M,MAAM,eAQd,yBAAK9M,UAAU,uDAEb,yBACEmB,MAAO,CACL4L,gBACE,6BAEJ/M,UAAU,2BAIhB,kBAAC,IAAD,Q,UC3HOgN,GAAa,SAAC,GAAqB,IAAnBhM,EAAkB,EAAlBA,MAAOiM,EAAW,EAAXA,KAChC,OACI,kBAAC,IAAMC,SAAP,KACI,yBAAKlN,UAAU,yCACX,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,UACA,yBAAKA,UAAU,kBACX,uCACA,0BAAMA,UAAU,oBAAoBgB,IAExC,yBAAKhB,UAAU,kBACX,uBAAGA,UAAU,kBAAkBiN,KAGvC,yBAAKhN,GAAG,wBAQfkN,GAAc,SAAC,GAAwB,IAAtBnI,EAAqB,EAArBA,KAAMkD,EAAe,EAAfA,SAChC,OACI,kBAAC,IAAMgF,SAAP,KACI,wBAAIlN,UAAU,eACV,0BAAMA,UAAU,gBAChB,uBAAGA,UAAU,gBAAyB,IAAKgF,EAC3C,0BAAMhF,UAAU,gBAAgB,IAAI,uBAAGA,UAAU,kBAAb,eAA8CkI,MAQrFkF,GAAU,SAAC,GAAuB,IAArBpM,EAAoB,EAApBA,MAAOqM,EAAa,EAAbA,OAC7B,OACI,kBAAC,IAAMH,SAAP,KAEI,wBAAIlN,UAAU,6BACV,yBAAKA,UAAU,eAAc,uBAAGA,UAAU,kBAAb,kBAC7B,yBAAKA,UAAU,eAAegB,EAC1B,8BAAOqM,IAEX,yBAAKrN,UAAU,iBAAf,aCmKDsN,G,2MA5MZ5L,MAAQ,CACN6L,IAAI,CACLC,OAAQ,CAAC,UAAW,WAAY,QACvB,QAAS,OAClBC,SAAU,CACR,CACEC,MAAO,aACPhI,gBAAiB,qBACjBiI,YAAa,gBACbC,YAAa,EACbxD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,OAI3ByD,IAAI,CACFL,OAAQ,CAAC,QAAS,WAAY,UAAU,UAAW,WACnDC,SAAU,CACR,CACEC,MAAO,WACPhI,gBAAiB,CACf,UACA,UACA,UACA,UACA,WAGFoI,qBAAsB,CACtB,UACA,UACA,UACA,UACA,WAEA1D,KAAM,CAAC,GAAI,GAAI,IAAK,GAAI,OAK9B2D,WAAY,CACVP,OAAQ,CAAC,UAAW,WAAY,QACvB,QAAS,OAClBC,SAAU,CACR,CACEC,MAAO,UACPM,MAAM,EACNC,YAAa,GACbvI,gBAAiB,qBACjBiI,YAAa,gBACbC,YAAa,EACbxD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,Q,mFAO7B8D,SAASC,eAAe,QAAQC,UAAUC,IAAI,Y,+BAG9C,OACE,yBAAKrO,UAAU,QACb,kBAACsO,EAAA,OAAD,KACE,6CAEF,kBAAC,EAAD,MAGA,yBAAKtO,UAAU,2CACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,iBAEb,kBAAC,EAAD,CAAiBgB,MAAM,cAE3B,yBAAKhB,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,iBAKlB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,OACb,kBAAC,GAAD,CAAYgB,MAAO,YAAaiM,KAAM,WACtC,kBAAC,GAAD,CAAYjM,MAAO,gBAAiBiM,KAAM,gBAC1C,kBAAC,GAAD,CAAYjM,MAAO,mBAAoBiM,KAAM,qBAKnD,yBAAKjN,UAAU,OACX,yBAAKA,UAAU,WAAWmB,MAAO,CAAEuE,gBAAiB,OAAQ2B,aAAc,SACxE,kBAAC,OAAD,CACE+C,KAAMvB,KAAKnH,MAAM6L,IACjBgB,QAAS,CACPvN,MAAM,CACJwN,SAAQ,EACRxH,KAAK,MACLnB,SAAS,IAEX4I,OAAO,CACLD,SAAQ,EACRjJ,SAAS,aAKjB,yBAAKvF,UAAU,WAAWmB,MAAO,CAAEuE,gBAAiB,OAAQ2B,aAAc,OAAOqH,gBAAiB,UAAWC,gBAAiB,QAASC,gBAAgB,WACrJ,kBAAC,OAAD,CACExE,KAAMvB,KAAKnH,MAAMmM,IACjBU,QAAS,CACPvN,MAAM,CACJwN,SAAQ,EACRxH,KAAK,sBACLnB,SAAS,IAEX4I,OAAO,CACLD,SAAQ,EACRjJ,SAAS,aAKjB,yBAAKvF,UAAU,WAAWmB,MAAO,CAAEuE,gBAAiB,OAAQ2B,aAAc,OAAQqH,gBAAiB,UAAWC,gBAAiB,QAASC,gBAAgB,WACtJ,kBAAC,QAAD,CACExE,KAAMvB,KAAKnH,MAAMqM,WACjBQ,QAAS,CACPvN,MAAM,CACJwN,SAAQ,EACRxH,KAAK,8BACLnB,SAAS,IAEX4I,OAAO,CACLD,SAAQ,EACRjJ,SAAS,cAMrB,yBAAKvF,UAAU,OACX,yBAAKA,UAAU,YACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,WACA,yBAAKA,UAAU,aACb,uBAAGM,KAAK,IAAIN,UAAU,4BAAtB,YAIF,wBAAIA,UAAU,6BACZ,kBAAC,GAAD,CACEgB,MAAO,wCACPqM,OACE,0DAGJ,kBAAC,GAAD,CACErM,MACE,sDAEFqM,OAAQ,uDAMlB,yBAAKrN,UAAU,YACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,gBACA,yBAAKA,UAAU,aACb,uBAAGM,KAAK,IAAIN,UAAU,4BACpB,uBAAGA,UAAU,kBAAb,aAGJ,wBAAIA,UAAU,8BACZ,kBAAC,GAAD,CAAakI,SAAU,QAASlD,KAAM,eACtC,kBAAC,GAAD,CAAakD,SAAU,QAASlD,KAAM,oBACtC,kBAAC,GAAD,CAAakD,SAAU,KAAMlD,KAAM,iBAErC,uBAAG1E,KAAK,IAAIN,UAAU,sCAAtB,iBASpB,kBAAC,EAAD,a,GAnMsBoJ,IAAMC,WCoGfwF,G,4LAnGXX,SAASC,eAAe,aAAaC,UAAUC,IAAI,iB,+BAGnD,OACE,yBAAKrO,UAAU,WACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAM8O,GAAG,KACP,iDAIJ,yBAAK9O,UAAU,QACb,yBAAKA,UAAU,QACb,0BAAMC,GAAG,kBAAkB8O,OAAO,QAChC,yBAAK/O,UAAU,OAAf,gFAKA,yBAAKA,UAAU,eACb,0BAAMA,UAAU,qBACd,uBAAGA,UAAU,kBAAb,WAEF,yBAAKA,UAAU,aACb,2BACEI,KAAK,OACLJ,UAAU,eACVgF,KAAK,OACL3E,YAAY,YACZuM,UAAQ,EACRoC,WAAS,MAKf,yBAAKhP,UAAU,eACb,0BAAMA,UAAU,qBACd,uBAAGA,UAAU,kBAAb,UAEF,yBAAKA,UAAU,aACb,2BACEI,KAAK,OACLJ,UAAU,eACVgF,KAAK,QACL3E,YAAY,eACZuM,UAAQ,EACRoC,WAAS,MAKf,yBAAKhP,UAAU,eACb,0BAAMA,UAAU,qBACd,uBAAGA,UAAU,kBAAb,UAEF,yBAAKA,UAAU,aACb,2BACEI,KAAK,QACLJ,UAAU,eACVgF,KAAK,QACL3E,YAAY,QACZuM,UAAQ,EACRoC,WAAS,MAKf,yBAAKhP,UAAU,cACb,yBAAKA,UAAU,aACb,8BACEiP,KAAK,IACLjP,UAAU,qCACVK,YAAY,4CAKlB,4BACEL,UAAU,gDACVI,KAAK,UAFP,UAOA,yBAAKJ,UAAU,kCACb,kBAAC,IAAD,CAAM8O,GAAG,KAAT,sB,GAzFI1F,IAAMC,WCyDb6F,I,OAvDE,WAKf,OACE,yBAAKlP,UAAU,iBACb,kBAACsO,EAAA,OAAD,KACE,uCAGF,kBAAC,EAAD,MAIA,yBAAKtO,UAAU,2CACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,iBAEb,kBAAC,EAAD,CAAiBgB,MAAM,YAAYC,OAAO,QAG1C,6BAASjB,UAAU,uCACjB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBACb,qCACA,6CACA,yBAAKA,UAAU,iBAAf,0DAGA,yBAAKA,UAAU,iBACb,uBAAGM,KAAK,aAAaN,UAAU,0BAC7B,0BAAMA,UAAU,eADlB,gBACoD,WAWhE,kBAAC,EAAD,W,oBCxCKmP,GAVG,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAAShN,EAAc,EAAdA,QAC5B,OAAKgN,EAGDhN,EACK,yBAAKpC,UAAU,+BAA+BoC,GAEhD,yBAAKpC,UAAU,2BAAf,YALE,yBAAKA,UAAU,6B,yCCWpBqP,GAAmBC,OAAaC,MAAM,CAC1C/L,KAAM8L,OAAY1C,SAAS,4BAC3B4C,YAAaF,OAAa1C,SAAS,8BA2KtB6C,GAvKM,SAAC,GAAc,EAAZC,MAAa,IAAD,EACZhM,mBAAS,MADG,mBAC3BC,EAD2B,KACtBC,EADsB,OAEVF,mBAAS,MAFC,mBAErBiM,GAFqB,WASlC,OALA1L,qBAAU,WACRiK,SAASC,eAAe,OAAOC,UAAUC,IAAI,aAK7C,yBAAKrO,UAAU,QACb,kBAACsO,EAAA,OAAD,KACE,iDAEF,kBAAC,EAAD,MAIA,yBAAKtO,UAAU,2CACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,iBAEb,kBAAC,EAAD,CAAiBgB,MAAM,kCAAkCC,OAAO,QAEhE,6BAASjB,UAAU,SACjB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,yCACb,wBAAIA,UAAU,MAAd,kBAEF,yBAAKA,UAAU,aACb,kBAAC,KAAD,CACE4P,cAAe,CAAEpM,KAAM,GAAIgM,YAAa,IACxCH,iBAAkBA,GAClB3C,SAAQ,uCAAE,WAAOmD,EAAP,sBAAAlL,EAAA,yDAAiBmL,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,UAC7B,OAARpM,EADK,iEAKJmM,GAAc,GACRE,EAAY,CAChB/P,GAAIgQ,eACJzM,KAAMqM,EAAOrM,KAAKwB,KAClBhE,MAAO6O,EAAOL,YACdU,IAAKvM,EACLwM,QAAS9O,KAAK+O,OAXZ,SAaE/M,EAAUwG,WAAW,WAAWwE,IAAI2B,GAbtC,OAcJD,IACAD,GAAc,GACd3D,IAAMkE,QAAQ,4BAA6B,CACzC9K,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IAvBR,kDA0BJwD,IAAMpI,MAAN,gBAAsB,CACpBwB,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IAjCR,kEAAF,0DAsCP,gBACCkH,EADD,EACCA,OACAS,EAFD,EAECA,aACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,cACAC,EALD,EAKCA,aACArB,EAND,EAMCA,QACAsB,EAPD,EAOCA,OACAC,EARD,EAQCA,WARD,OAUC,0BACEjE,SAAU4D,EACVM,QAAQ,uBAER,yBAAK5Q,UAAU,uBACb,kBAAC,KAAD,CACEA,UACEoP,EAAQI,aAAekB,EAAOlB,YAC1B,8BACA,iBAENxK,KAAK,cACL/E,GAAG,cACH4Q,SAAUJ,EACV3D,MAAO+C,EAAOL,YACdsB,OAAQH,IAEV,2BACEI,QAAQ,cACR/Q,UAAU,kBAFZ,eAMA,kBAAC,GAAD,CACEoP,QAASA,EAAQI,YACjBpN,QAASsO,EAAOlB,eAGpB,yBAAKxP,UAAU,cACb,2BAAOA,UAAU,sBAAjB,gBAGA,kBAAC,KAAD,CACEC,GAAG,OACH+E,KAAK,SACL5E,KAAK,OACLyQ,SAAU,SAACG,GACTR,EACE,OACAQ,EAAMC,cAAcC,MAAM,KAG9BlR,UACEoP,EAAQ5L,MAAQkN,EAAOlN,KACnB,kCACA,oBAENsN,OAAQH,IAEV,kBAAC,EAAD,CAAOnN,KAAMqM,EAAOrM,OACnBqM,EAAOrM,MAAQ,kBAAC,EAAD,CAAaA,KAAMqM,EAAOrM,KAAMmM,QAASA,EAAS/L,OAAQA,EAAQmB,UAAU,eAC5F,kBAAC,GAAD,CACEqK,QAASA,EAAQ5L,KACjBpB,QAASsO,EAAOlN,QAGpB,yBAAKxD,UAAU,cACb,kBAAC,KAAD,CACEI,KAAK,SACL0M,MAAM,gBACN9M,UAAU,kBACVmR,SAAUZ,cAW9B,kBAAC,IAAD,MACA,kBAAC,EAAD,W,8GClKGa,I,OAfE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMtN,EAAY,EAAZA,MACtB,OAEI,yBAAK/D,UAAU,WAAWmB,MAAO,CAAEe,OAAQ,WACvC,yBAAKlC,UAAW+D,EAAQ,4BAA8B,2BAClD,yBAAK/D,UAAU,uCAAuC+D,EAAQ,SAAW,gBACzE,yBAAK/D,UAAU,aACX,wBAAIA,UAAU,cAAa,uBAAGA,UAAW+D,EAAQ,6BAA+B,eAAhF,IAAoGA,EAAQ,SAAW,gBACvH,uBAAG/D,UAAU,aAAaqR,GAActN,QCmB7CuN,GA3BI,WACf,OACI,yBAAKtR,UAAU,WAAWmB,MAAO,CAAEe,OAAQ,cACvC,yBAAKlC,UAAU,aACX,yBAAKA,UAAU,iCAAf,YAEJ,yBAAKA,UAAU,aACH,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,yBACf,yBAAKA,UAAU,yBACf,yBAAKA,UAAU,8B,ICOvB0H,qSAAY6J,kBCRZ7J,qSAAY6J,kB,2LCHtBC,IC2MSC,cA9LA,SAAAzP,GAAK,MAAK,CACvBC,KAAM,CAEJoF,aAAc,QAEhBqK,QAAS,CACP9L,QAAS,GAEX+L,MAAO,CACLC,SAAU,MAEZC,cAAe,CACbrD,QAAS,OACTsD,WAAY,UAEdC,OAAQ,CACNC,YAAahQ,EAAMiQ,QAAQ,IAE7BC,QAAS,CACPC,eAAgB,eA2KLV,EAvKS,SAAC,GAA6B,IAA3BlP,EAA0B,EAA1BA,QAAS6P,EAAiB,EAAjBA,WAAiB,EAEC1O,mBAAS,IAFV,mBAE5C2O,EAF4C,KAExBC,EAFwB,OAGb5O,mBAAS,IAHI,mBAG5C6O,EAH4C,KAG/BC,EAH+B,OAI3B9O,mBAAS,GAJkB,mBAI5C+O,EAJ4C,KAItCC,EAJsC,KAgDnD,OACE,kBAAC,IAAD,CACE1S,UAAWuC,EAAQN,MAEnB,kBAAC0Q,GAAA,EAAD,CAAa3S,UAAWuC,EAAQmP,SAC9B,kBAAC,KAAD,KACE,yBAAK1R,UAAWuC,EAAQoP,OACtB,kBAACiB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWnN,QAAQ,YACjB,kBAACoN,GAAA,EAAD,CACEC,QAASZ,EAAmBa,SAAWd,EAAWc,OAClD9R,MAAM,UACN+R,cACEd,EAAmBa,OAAS,GAC5Bb,EAAmBa,OAASd,EAAWc,OAEzCrC,SA5DI,SAAAG,GAGtB,IAAIqB,EAGFA,EADErB,EAAMpF,OAAOqH,QACMb,EAAWnK,KAAI,SAAAmL,GAAS,OAAIA,EAAUnT,MAEtC,GAGvBqS,EAAsBD,OAoDR,kBAACU,GAAA,EAAD,aACA,kBAACA,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,iBACA,kBAACA,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,0BACA,kBAACA,GAAA,EAAD,aACA,kBAACA,GAAA,EAAD,iBAGJ,kBAACM,GAAA,EAAD,KAEGjB,EAAWkB,MAAM,EAAGf,GAAatK,KAAI,SAAAmL,GAAS,OAC7C,kBAACN,GAAA,EAAD,CACE9S,UAAWuC,EAAQgR,SACnBC,OAAK,EACL/L,IAAK2L,EAAUnT,GACfwT,UAAwD,IAA9CpB,EAAmBqB,QAAQN,EAAUnT,KAE/C,kBAAC8S,GAAA,EAAD,CAAWnN,QAAQ,YACjB,kBAACoN,GAAA,EAAD,CACEC,SAAuD,IAA9CZ,EAAmBqB,QAAQN,EAAUnT,IAC9CmB,MAAM,UACNyP,SAAU,SAAAG,GAAK,OAvEb,SAACA,EAAO/Q,GAC9B,IAAM0T,EAAgBtB,EAAmBqB,QAAQzT,GAC7C2T,EAAwB,IAEL,IAAnBD,EACFC,EAAwBA,EAAsBC,OAAOxB,EAAoBpS,GAC9C,IAAlB0T,EACTC,EAAwBA,EAAsBC,OAAOxB,EAAmBiB,MAAM,IACrEK,IAAkBtB,EAAmBa,OAAS,EACvDU,EAAwBA,EAAsBC,OAAOxB,EAAmBiB,MAAM,GAAI,IACzEK,EAAgB,IACzBC,EAAwBA,EAAsBC,OAC5CxB,EAAmBiB,MAAM,EAAGK,GAC5BtB,EAAmBiB,MAAMK,EAAgB,KAI7CrB,EAAsBsB,GAsDiBE,CAAgB9C,EAAOoC,EAAUnT,KACpD6M,MAAM,UAGV,kBAACiG,GAAA,EAAD,KACE,yBAAK/S,UAAWuC,EAAQsP,eACtB,kBAACkC,GAAA,EAAD,CACE/T,UAAWuC,EAAQwP,OACnBlR,IAAKuS,EAAUY,YAIjB,kBAACC,GAAA,EAAD,CAAY5R,QAAQ,SAAS+Q,EAAUpO,QAG3C,kBAAC+N,GAAA,EAAD,KAAYK,EAAUtH,OACtB,kBAACiH,GAAA,EAAD,MAIA,kBAACA,GAAA,EAAD,KAAYK,EAAU/M,OACtB,kBAAC0M,GAAA,EAAD,KACE,kBAAC,KAAD,CAAQmB,OAAO,aAAaC,WAAS,GAClCf,EAAUgB,UAGf,kBAACrB,GAAA,EAAD,KACE,kBAACsB,GAAA,EAAD,CACEhS,QAAQ,YACRjB,MAAM,UACNpB,UAAWuC,EAAQ+R,OACnBC,UAAW,kBAAC,KAAD,OAJb,SAUF,kBAACxB,GAAA,EAAD,KACE,kBAACsB,GAAA,EAAD,CACEhS,QAAQ,YACRjB,MAAM,YACNpB,UAAWuC,EAAQ+R,OACnBC,UAAW,kBAAC,KAAD,OAJb,oBAiBhB,kBAACC,GAAA,EAAD,CAAaxU,UAAWuC,EAAQ2P,SAC9B,kBAACuC,GAAA,EAAD,CACEC,UAAU,MACVC,MAAOvC,EAAWc,OAClB0B,aA9GiB,SAAC5D,EAAOyB,GAC/BC,EAAQD,IA8GFoC,oBA3GwB,SAAA7D,GAC9BwB,EAAexB,EAAMpF,OAAOkB,QA2GtB2F,KAAMA,EACNF,YAAaA,EACbuC,mBAAoB,CAAC,EAAG,GAAI,WD9LtBpN,qSAAY6J,mBAsJbwD,GApJI,SAAC,GAAmB,IAAjB/T,EAAgB,EAAhBA,MAAgB,KAATf,GACDyD,oBAAS,IADC,mBAC3BsR,EAD2B,KACrBC,EADqB,KAO5BC,EAAc,WAChBD,GAAQ,IAEZ,OAEI,6BACI,kBAAC,IAAD,MACA,kBAACZ,GAAA,EAAD,CAAQzN,QAXQ,WACpBqO,GAAQ,IAU8BE,KAAK,QAAQ/T,MAAM,WAArD,eACA,kBAACgU,GAAA,EAAD,CACIC,sBAAoB,EACpBC,sBAAoB,EACpBN,KAAMA,EACNO,QAASL,EACTtU,kBAAgB,qBAEhB,kBAAC4U,GAAA,EAAD,CAAavV,GAAG,qBAAqBe,GAErC,kBAAC,KAAD,CACI4O,cAAe,CAAE6F,UAAW,GAAIzU,MAAO,GAAIwC,KAAM,GAAIkS,YAAa,IAClEhJ,SAAU,SAACmD,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAChCD,GAAc,GACd6F,KAAM,CACF5G,OAAQ,OACRpL,IAAI,GAAD,OAAK6N,GAAL,WACHpH,KAAM,CAEF+F,QAAS9O,KAAK+O,SAGjBwF,MAAK,SAACC,GACH1J,IAAMkE,QAAN,gBAA+B,CAC3B9K,SAAU,YACV6G,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IAGdoH,IACAmF,OAIHY,OAAM,SAAC/R,GACJoI,IAAMpI,MAAN,UAAeA,GAAS,CACpBwB,SAAU,YACV6G,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IAEdoH,QAIZV,iBAAkBC,OAAaC,MAAM,CACjCkG,UAAWnG,OAAa1C,SAAS,YACjC5L,MAAOsO,OAAa1C,SAAS,YAC7BpJ,KAAM8L,OAAa1C,SAAS,YAC5B8I,YAAapG,OAAayG,eAM7B,SAAC1Q,GAAW,IAELwK,EAQAxK,EARAwK,OACAT,EAOA/J,EAPA+J,QACAsB,EAMArL,EANAqL,OACAH,EAKAlL,EALAkL,aACAE,EAIApL,EAJAoL,aACAE,EAGAtL,EAHAsL,WACAL,EAEAjL,EAFAiL,aAGJ,OACI,kBAAC,KAAD,CAAM5D,SAAU4D,GACZ,kBAAC0F,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,oFAGA,kBAACC,GAAA,EAAD,KACI,kBAACA,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACnC,kBAACC,GAAA,EAAD,CACIC,WAAS,EACTxW,GAAG,aACHyN,MAAM,cACNmD,SAAUJ,EACV3D,MAAO+C,EAAOL,YACdsB,OAAQH,EACRzO,OAAO,SACP8C,KAAK,cACL0R,aAAc1V,EACd+C,MAAO2M,EAAOlB,aAAeJ,EAAQI,YACrCmH,WAAajG,EAAOlB,aAAeJ,EAAQI,aAAgBkB,EAAOlB,eAG1E,kBAAC0G,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACnC,kBAACC,GAAA,EAAD,CACIC,WAAS,EACTvU,OAAO,QACPjC,GAAG,OACHyN,MAAM,eACNtN,KAAK,OACL4E,KAAK,OACL8H,MAAO+C,EAAOrM,KACdqN,SAAUJ,EACVK,OAAQH,EACR5M,MAAO2M,EAAOlN,MAAQ4L,EAAQ5L,KAC9BmT,WAAajG,EAAOlN,MAAQ4L,EAAQ5L,MAASkN,EAAOlN,UAOpE,kBAACoT,GAAA,EAAD,KACI,kBAACvC,GAAA,EAAD,CAAQjU,KAAK,QAAQwG,QAASsO,EAAa9T,MAAM,YAAYiB,QAAQ,aAArE,UAGA,kBAACgS,GAAA,EAAD,CAAQjU,KAAK,SAASgB,MAAM,UAAUiB,QAAQ,YAAY8O,SAAUZ,GAApE,kBEjJvBsG,GAAO,SAAC,GAAmC,IAAjC7V,EAAgC,EAAhCA,MAAOmP,EAAyB,EAAzBA,QAASlQ,EAAgB,EAAhBA,GAAI6W,EAAY,EAAZA,MAEzC,OACE,kBAAC,WAAD,KAEE,yBAAK9W,UAAU,yCACb,yBAAKA,UAAU,QAAO,yBAAKa,IAAKiW,EAAOhW,IAAI,iBAAiBd,UAAU,2BACpE,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAcgB,GAC5B,uBAAGhB,UAAU,aAEX,kBAAC+W,GAAA,EAAD,CAAa3V,MAAM,YAAYiB,QAAQ,aACrC,kBAACgS,GAAA,EAAD,CAAQ/T,KAAI,8BAAyBL,GAAMkV,KAAK,QAAQhU,MAAO,CAAE6V,eAAgB,OAAQ5V,MAAO,UAAhG,iBACA,kBAAC,GAAD,CAAYJ,MAAOA,EAAOf,GAAIA,MAGlC,uBAAGD,UAAU,aACX,2BAAOA,UAAU,cAAa,kBAAC,KAAD,CAAQiX,SAAO,GAAE9G,GAA/C,QACS,uBAAG7P,KAAK,MAAR,cADT,OAEW,IACP,uBAAGA,KAAK,MACN,uBACEN,UAAU,gCACVkX,cAAY,OACZtQ,SAAO,Y,oBCqVduQ,GAvWI,WACjBlT,qBAAU,WACRiK,SAASC,eAAe,cAAcC,UAAUC,IAAI,aAF/B,MAKe3K,mBAAS,IALxB,mBAKhB0T,EALgB,KAKFC,EALE,OAMO3T,oBAAS,GANhB,mBAMhBuP,EANgB,KAMPqE,EANO,OAOS5T,oBAAS,GAPlB,mBAOhByN,EAPgB,KAONoG,EAPM,KAmBjBC,EAAc,uCAAG,WAAOhM,GAAP,iBAAA7G,EAAA,6DACrB6G,EAAEC,iBACIgM,EAAc9L,IAAcH,EAAEI,OAAQ,CAAEC,MAAM,IACpDpJ,QAAQC,IAAI,oBAAqB+U,GAHZ,SAKbC,EAAa,CACjBC,aAAcF,EAAYE,aAC1BC,cAAeH,EAAYG,cAC3BC,aAAcJ,EAAYI,aAC1BC,aAAcL,EAAYM,KAC1BC,MAAM,GAVW,SAYZ3U,EAAUwG,WAAW,kBAAkBK,IAAI,wBAAwB+N,OAAOP,GAZ9D,OAajBvL,IAAMkE,QAAQ,yCAA0C,CAChD9K,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IApBD,kDAuBjBwD,IAAMpI,MAAN,UAAe,KAAM3B,SAAW,CAC9BmD,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IA9BK,0DAAH,sDAqCduP,EAAe,uCAAG,WAAO1M,GAAP,mBAAA7G,EAAA,6DACtB6G,EAAEC,iBACI0M,EAAYxM,IAAcH,EAAEI,OAAQ,CAAEC,MAAM,IAC5ClI,EAHgB,kHAGiGwU,EAAUC,SAH3G,mBAKtBf,EAAcc,EAAUC,UAElBV,EAAa,CACjBC,aAAcQ,EAAUR,aACxBK,MAAM,EACNK,UAAW1U,GAVS,kBAcfN,EAAUwG,WAAW,cAAcK,IAAI,wBAAwB+N,OAAOP,GAdvD,OAepBvL,IAAMkE,QAAQ,mDAAoD,CAC1D9K,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IAtBE,kDAyBpBwD,IAAMpI,MAAN,UAAe,KAAM3B,SAAW,CAC9BmD,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IAhCQ,0DAAH,sDAuCrB,OACE,yBAAK3I,UAAU,QACb,kBAACsO,EAAA,OAAD,KACE,+CAGF,kBAAC,EAAD,MAIA,yBAAKtO,UAAU,2CACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,iBAEb,kBAAC,EAAD,CAAiBgB,MAAM,cAAcC,OAAO,gBAI5C,6BAASjB,UAAU,SACjB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,yCACb,wBAAIA,UAAU,MAAd,UACU,IACPiT,EACC,4BAAQjT,UAAU,0BAAlB,MAEA,4BAAQA,UAAU,yBAAlB,SAIN,yBAAKA,UAAU,aACb,0BAAMA,UAAU,cAAc4G,QArHnC,SAAC4E,GACdA,EAAEC,iBACF6L,GAAYrE,GACZsE,GAAapG,KAmHO,yBAAKnR,UAAU,cACb,2BACEI,KAAK,WACLK,cAAY,SACZ6X,UAAQ,QACRC,WAAS,YACTC,eAAa,UACbC,gBAAc,SACd5H,SAAU,SAACG,GACTsG,EAAWtG,EAAMpF,OAAOqH,UAE1BnG,MAAOmG,UAUpBA,EACC,yBAAKjT,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,yCACb,wBAAIA,UAAU,MAAd,UACU,IACPiT,EACC,4BAAQjT,UAAU,0BAAlB,8CAIA,4BAAQA,UAAU,yBAAlB,SAON,yBAAKA,UAAU,sDACb,yBAAKA,UAAU,gDACb,4BACEC,GAAG,WACHY,IAAG,kHAA6GuW,EAA7G,mBACHnS,MAAM,OACN0B,OAAO,OACP3G,UAAU,wBACV0Y,UAAU,KACVC,kBAAkB,OAClBC,MAAM,kBACNC,iBAAiB,EACjB7X,MAAM,oBAGV,0BACE0L,SAAUwL,EACVlY,UAAU,iBAET,yBAAKA,UAAU,OACZ,yBAAKA,UAAU,+BACb,yBAAK8Y,MAAM,uBACT,2BACE1Y,KAAK,OACLC,YAAY,iCACZL,UAAU,iBACV4M,UAAQ,EACR5H,KAAK,eAIX,yBAAKhF,UAAU,+BACb,yBAAK8Y,MAAM,uBACT,2BACElM,UAAQ,EACR5M,UAAU,iBACVI,KAAK,OACL4E,KAAK,eACL3E,YAAY,8CAMpB,2BAAOyM,MAAOmG,EAASjO,KAAK,QAAQ5E,KAAK,WAG3C,yBAAKJ,UAAU,cACb,4BAAQA,UAAU,mBAAlB,iBAQZ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,0CACf,yBAAKA,UAAU,sEACb,yBACEa,IAAI,0BACJC,IAAI,cACJd,UAAU,kBAStB,yBAAKA,UAAU,qDACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,yCACZ,IACAiT,EACC,wBAAIjT,UAAU,4BAAd,wEAKA,wBAAIA,UAAU,MAAd,wBAGJ,yBAAKA,UAAU,aACb,0BAAMA,UAAU,cAAc0M,SAAU8K,GACtC,yBAAKsB,MAAM,aACX,yBAAK9Y,UAAU,OACX,yBAAKA,UAAU,+BACb,yBAAK8Y,MAAM,uBACT,2BACElM,UAAQ,EACR5M,UAAU,iBACVI,KAAK,OACL4E,KAAK,eACL3E,YAAY,6CAKlB,yBAAKL,UAAU,+BACb,yBAAK8Y,MAAM,uBACX,4BACE9Y,UAAW,6BACXgF,KAAK,gBAIL4H,UAAQ,GAER,4BAAQE,MAAM,WAAd,WACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,gBAKN,yBAAK9M,UAAU,OACb,yBAAKA,UAAU,+BACb,yBAAK8Y,MAAM,uBACX,4BACE9Y,UAAW,6BACXgF,KAAK,eACL4H,UAAQ,GAzSpB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IA2S1D3E,KAAI,SAAC8Q,GAAD,OAAY,4BAAQjM,MAAOiM,GAASA,SAKrD,yBAAK/Y,UAAU,+BACb,yBAAK8Y,MAAM,uBACT,2BACE9Y,UAAU,iBACVC,GAAG,aACHG,KAAK,OACLC,YAAY,cACZ2E,KAAK,OACL4H,UAAQ,MAId,2BAAOE,MAAOmG,EAASjO,KAAK,QAAQ5E,KAAK,YAE3C,yBAAKJ,UAAU,kBACb,yBAAKA,UAAU,cACb,4BAAQI,KAAK,QAAQJ,UAAU,qBAA/B,UAEU,IACV,4BACEI,KAAK,SACLJ,UAAU,kBACVmR,SAAUA,GAHZ,oBAgBhB,kBAAC,IAAD,MACA,kBAAC,EAAD,WC/JG7D,G,4LAjMXY,SAASC,eAAe,QAAQC,UAAUC,IAAI,Y,+BAG9C,OACE,yBAAKrO,UAAU,QACb,kBAACsO,EAAA,OAAD,KACE,2CAGF,kBAAC,EAAD,MAIA,yBAAKtO,UAAU,2CACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,iBAEb,kBAAC,EAAD,CAAiBgB,MAAM,UAAUC,OAAO,YAGxC,6BAASjB,UAAU,sCACjB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qBACb,yBACEmB,MAAO,CACL4L,gBACE,mDAEJ/M,UAAU,gBAEZ,yBAAKA,UAAU,yBACb,yBACEa,IAAI,mBACJb,UAAU,mBACVc,IAAI,MAEN,wBAAId,UAAU,QAAd,eACA,uBAAGA,UAAU,QAAb,oDACoD,KAEpD,4BAAQA,UAAU,+BAChB,0BAAMA,UAAU,kBADlB,cAMN,yBAAKA,UAAU,YACb,0BAAMA,UAAU,QACd,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,gBACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,mBACb,2BAAOA,UAAU,cAAjB,WACA,2BACEI,KAAK,OACLC,YAAY,UACZyM,MAAM,oBACN9M,UAAU,mBAIhB,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,mBACb,2BAAOA,UAAU,cAAjB,YACA,2BACEI,KAAK,OACLC,YAAY,WACZyM,MAAM,WACN9M,UAAU,mBAIhB,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,mBACb,2BAAOA,UAAU,cAAjB,iBAGA,2BACEI,KAAK,QACLC,YAAY,QACZL,UAAU,eACV8M,MAAM,OAIZ,yBAAK9M,UAAU,qBACb,yBAAKA,UAAU,mBACb,2BAAOA,UAAU,cAAjB,cACA,2BACEI,KAAK,OACLC,YAAY,aACZL,UAAU,eACV8M,MAAM,cAIZ,yBAAK9M,UAAU,qBACb,yBAAKA,UAAU,mBACb,2BAAOA,UAAU,cAAjB,aACA,2BACEI,KAAK,OACLC,YAAY,YACZL,UAAU,eACV8M,MAAM,cAIZ,yBAAK9M,UAAU,aACb,yBAAKA,UAAU,mBACb,2BAAOA,UAAU,cAAjB,WACA,2BACEI,KAAK,OACLC,YAAY,eACZL,UAAU,eACV8M,MAAM,oBAIZ,yBAAK9M,UAAU,qBACb,yBAAKA,UAAU,mBACb,2BAAOA,UAAU,cAAjB,QACA,2BACEI,KAAK,OACLC,YAAY,OACZL,UAAU,mBAIhB,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,mBACb,2BAAOA,UAAU,cAAjB,OACA,2BACEI,KAAK,SACLC,YAAY,MACZL,UAAU,mBAIhB,yBAAKA,UAAU,YACb,yBAAKA,UAAU,mBACb,2BAAOA,UAAU,cAAjB,WACA,4BAAQA,UAAU,8BAChB,4BAAQ8M,MAAM,IAAd,MACA,4BAAQA,MAAM,IAAd,SAIN,yBAAK9M,UAAU,aACb,yBAAKA,UAAU,mBACb,2BAAOA,UAAU,cAAjB,YACA,8BACEiP,KAAK,IACL5O,YAAY,+BACZyM,MAAM,OACN9M,UAAU,gBAJZ,iQAiBR,yBAAKA,UAAU,0BACb,4BAAQI,KAAK,SAASJ,UAAU,mBAAhC,yBAUd,kBAAC,EAAD,a,GAzLYoJ,IAAMC,WC0Ff2P,GAtFK,WAAO,IAAD,EACMtV,mBAAS,IADf,mBACjBuV,EADiB,KACRC,EADQ,OAEQxV,oBAAS,GAFjB,mBAEjByV,EAFiB,KAENC,EAFM,KAIxBnV,qBAAU,WACRiK,SAASC,eAAe,OAAOC,UAAUC,IAAI,UAC7CgL,MACA,IAED,IAAMA,EAAgB,uCAAG,sBAAA1U,EAAA,6DACxBlC,QAAQC,IAAI,iBADY,SAElBW,EAAUwG,WAAW,WAC1BC,YAAW,SAACC,GACX,IAAMuP,EAAU,GAChBvP,EAAcE,SAAQ,SAACC,GACrBoP,EAAQnP,KAAKD,EAAIE,WAEnB3H,QAAQC,IAAI,UAAW4W,GACvBJ,EAAWI,GACXF,GAAW,KACV1P,GAXqB,2CAAH,qDAgBrB,OACE,yBAAK1J,UAAU,QACb,kBAACsO,EAAA,OAAD,KACE,+CAGF,kBAAC,EAAD,MAIA,yBAAKtO,UAAU,2CACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,iBAEb,kBAAC,EAAD,CAAiBgB,MAAM,kCAAkCC,OAAO,gBAChE,yBAAKjB,UAAU,mBAEb,iCACE,yBAAK8Y,MAAM,QACT,yBAAKA,MAAM,eACT,6CAGJ,yBAAK9Y,UAAU,OAChBmZ,EACC,kBAAC,GAAD,MACEF,EAAQlV,MACV,kBAAC,GAAD,CAAUA,MAAOkV,EAAQlV,QAEzB,kBAAC,WAAD,KACGkV,EAAQ/F,OACP+F,EAAQhR,KAAI,SAACsR,GAAD,OACV,kBAAC,GAAD,CACEvY,MAAOuY,EAAOvY,MACdmP,QAASoJ,EAAOpJ,QAChB1I,IAAK8R,EAAOtZ,GACZA,GAAIsZ,EAAOtZ,GACXuZ,SAAS,SACT1C,MAAOyC,EAAOrJ,SAIlB,kBAAC,GAAD,CAAUmB,KAAK,uDASvB,kBAAC,EAAD,UC1EGlC,GAVG,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAAShN,EAAc,EAAdA,QAC5B,OAAKgN,EAGDhN,EACK,yBAAKpC,UAAU,+BAA+BoC,GAEhD,yBAAKpC,UAAU,2BAAf,YALE,yBAAKA,UAAU,6BCSpBqP,I,OAAmBC,OAAaC,MAAM,CAC1CkK,QAASnK,OACNoK,IAAI,EAAG,cACPC,IAAI,GAAI,aACR/M,SAAS,oBACVgN,UAAWtK,OACVoK,IAAI,EAAG,cACPC,IAAI,GAAI,aACR/M,SAAS,oBACZiN,OAAQvK,OAAa1C,SAAS,sBAC9B5G,QAASsJ,OAAa1C,SAAS,uBAC/BvG,MAAOiJ,KAAW,0BAA0B1C,SAAS,qBACrDkN,OAAQxK,OAAa1C,SAAS,8BAC9BmN,KAAMzK,OAAa1C,SAAS,qBAC5BlL,MAAO4N,OAAa1C,SAAS,qBAC7BoN,QAAS1K,OAAa1C,SAAS,uBAC/Bd,MAAOwD,OAAaxD,MAAM,iBAAiBc,SAAS,YACpDqN,IAAK3K,OAAa1C,SAAS,mBAC3BsN,SAAU5K,OAAa1C,SAAS,uBAkjBnBuN,OA/iBf,WACE,IAAMvQ,EAAWqB,cACXmP,EAAY3Y,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAIrCG,GAHUF,aAAY,SAAAC,GAAK,OAAIA,EAAM2Y,QAGPD,EAA9BzY,WAAWC,EAAmBwY,EAAnBxY,OAAQC,EAAWuY,EAAXvY,OANN,EAOO6B,mBAAS,IAPhB,mBAOdwW,EAPc,KAOJI,EAPI,OAQa5W,mBAAS,IARtB,mBAQdwD,EARc,KAQHqT,EARG,OASkB7W,mBAAS,CAACqE,IAAK,kBAAmBC,IAAK,oBATzD,mBASdZ,EATc,KASGoT,EATH,KAWrBvW,qBAAU,WACRiK,SAASC,eAAe,WAAWC,UAAUC,IAAI,UACjD1E,MACA,IAEF,IAAMA,EAAU,uCAAG,sBAAAhF,EAAA,sEACXtB,EAAUwG,WAAW,SAC1BC,YAAW,SAACC,GACX,IAAMuP,EAAU,GACVmB,EAAe,GACrB1Q,EAAcE,SAAQ,SAACC,GACrBoP,EAAQnP,KAAR,aAAclK,GAAIiK,EAAIjK,IAAOiK,EAAIE,YAGnC,IAAI,IAAJ,MAAgBkP,EAAhB,eAAyB,CAArB,IAAIe,EAAI,KACVI,EAAatQ,KAAK,CAACpE,YAAasU,EAAKtU,YAAaC,QAASqU,EAAKrU,QAASgC,IAAKqS,EAAKK,YAAY1S,IAAKD,IAAKsS,EAAKK,YAAY3S,IAAK9H,GAAIoa,EAAKpa,GAAIoG,MAAOgU,EAAKhU,QAE1JkU,EAAaE,KACZ/Q,GAbc,2CAAH,qDA6BViR,EAAsB,uCAAG,WAAO3U,GAAP,qBAAArB,EAAA,6DACvBhB,EADuB,oEAC4CqC,EAD5C,gBAC2D0B,2CAD3D,SAENiO,KAAMjL,IAAI/G,GAFJ,gBAErByG,EAFqB,EAErBA,KACFwQ,EAASxQ,EAAKkP,QAAQ,GAAGuB,SAAS3S,SACxCsS,EAAYI,GAJiB,2CAAH,sDA0B5B,OACE,yBAAK5a,UAAU,QACb,kBAACsO,EAAA,OAAD,KACE,+CAEF,kBAAC,EAAD,MACA,yBAAKtO,UAAU,2CACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAiBgB,MAAM,cAAcC,OAAO,oBAE5C,6BAASjB,UAAU,SACjB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,yCACb,wBAAIA,UAAU,MAAd,SACQ,8DAGV,yBAAKA,UAAU,aACf,kBAAC,EAAD,CAAKkH,UAAWA,EAAWC,UAAW,GAAIC,gBAAiBA,EAAiBb,YA9D1E,SAACtG,GACnBqa,EAAQra,GACRkM,IAAMkE,QAAQ,+CAAgD,CAC5D9K,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,OAuDM,kBAAC,KAAD,CACEiH,cAAe,CACbgK,UAAW,GACXC,OAAQ,GACR/N,MAAO,GACPzF,MAAO,GACPL,QAAS,GACT+T,KAAM,GACNrY,MAAO,GACPwY,SAAU,GACVY,QAAS,GACTrB,QAAS,GACTQ,IAAK,GACL/R,SAAU,IAEZmH,iBAAkBA,GAClB3C,SAAQ,uCAAE,WAAOmD,EAAP,sBAAAlL,EAAA,6DAAiBmL,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,UACxCD,GAAc,GADN,SAIAtO,EAAQ,CACZoY,UAAW/J,EAAO+J,UAClBC,OAAQhK,EAAOgK,OACf/N,MAAO+D,EAAO/D,MACdzF,MAAOwJ,EAAOxJ,MACdL,QAAS6J,EAAO7J,QAChB+T,KAAMlK,EAAOkK,KACbrY,MAAOmO,EAAOnO,MACdsY,QAASnK,EAAOmK,QAChBF,OAAQjK,EAAOiK,OACfgB,QAASjL,EAAOiL,QAChB3a,KAAM,aACNsZ,QAAS5J,EAAO4J,QAChBQ,IAAKpK,EAAOoK,IACZI,KAAMxK,EAAOqK,UAEbzX,QAAQC,IAAI,OAAQlB,GApBhB,SAsBI6B,EAAUwG,WAAW,SAASwE,IAAI7M,GAtBtC,OAuBFuO,IACAD,GAAc,GACd3D,IAAMkE,QAAQ,0BAA2B,CACrC9K,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IAhCZ,kDAoCRlG,QAAQC,IAAI,QAAZ,MACEyJ,IAAMpI,MAAN,gBAAwB,CACpBwB,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IA5CR,0DAAF,0DAkDP,gBACCkH,EADD,EACCA,OACAS,EAFD,EAECA,aAEAG,GAJD,EAGCF,aAHD,EAICE,cACArB,EALD,EAKCA,QACAsB,EAND,EAMCA,OACAC,EAPD,EAOCA,WAPD,OASC,kBAAC,KAAD,CAAMjE,SAAU4D,GACd,yBAAKtQ,UAAU,SAEf,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,OAEf,yBAAKA,UAAU,yCACX,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACEC,GAAG,UACHG,KAAK,OACL4E,KAAK,UACLhF,UACEoP,EAAQqK,SAAW/I,EAAO+I,QACtB,4BACA,iBAEN5I,SAAUJ,EACV3D,MAAO+C,EAAO4J,QACd3I,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQqK,QACjBrX,QAASsO,EAAO+I,UAElB,2BACE1I,QAAQ,OACR/Q,UAAU,kBAFZ,aAUJ,yBAAKA,UAAU,wCACb,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACEC,GAAG,YACHG,KAAK,OACL4E,KAAK,YACLhF,UACEoP,EAAQwK,WAAalJ,EAAOkJ,UACxB,4BACA,iBAEN/I,SAAUJ,EACV3D,MAAO+C,EAAO+J,UACd9I,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQwK,UACjBxX,QAASsO,EAAOkJ,YAElB,2BACE7I,QAAQ,OACR/Q,UAAU,kBAFZ,eAYJ,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,yBACb,4BACEA,UACEoP,EAAQyK,QAAUnJ,EAAOmJ,OACrB,wCACA,6BAEN7U,KAAK,SACL6L,SAAUJ,EACV3D,MAAO+C,EAAOgK,OACd/I,OAAQH,GAER,0CACA,4BAAQ7D,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,WAEF,0BAAM9M,UAAU,qBAChB,0BAAMA,UAAU,eAChB,kBAAC,GAAD,CACEoP,QAASA,EAAQyK,OACjBzX,QAASsO,EAAOmJ,WAMtB,yBAAK7Z,UAAU,+BACb,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACEC,GAAG,MACHG,KAAK,OACL4E,KAAK,MACLhF,UACEoP,EAAQ6K,KAAOvJ,EAAOuJ,IAClB,4BACA,kBAENpJ,SAAUJ,EACV3D,MAAO+C,EAAOoK,IACdnJ,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQ6K,IACjB7X,QAASsO,EAAOuJ,MAElB,2BACElJ,QAAQ,QACR/Q,UAAU,kBAFZ,SAUJ,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACEC,GAAG,QACHG,KAAK,QACL4E,KAAK,QACLhF,UACEoP,EAAQyK,QAAUnJ,EAAOmJ,OACrB,4BACA,kBAENhJ,SAAUJ,EACV3D,MAAO+C,EAAO/D,MACdgF,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQtD,MACjB1J,QAASsO,EAAO5E,QAElB,2BACEiF,QAAQ,QACR/Q,UAAU,kBAFZ,WAUJ,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACEC,GAAG,QACHG,KAAK,OACL4E,KAAK,QACLhF,UACEoP,EAAQ/I,OAASqK,EAAOrK,MACpB,4BACA,kBAENwK,SAAUJ,EACV3D,MAAO+C,EAAOxJ,MACdyK,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQ/I,MACjBjE,QAASsO,EAAOrK,QAElB,2BACE0K,QAAQ,QACR/Q,UAAU,kBAFZ,WAQJ,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACEA,UACEoP,EAAQpJ,SAAW0K,EAAO1K,QACtB,4BACA,iBAGNhB,KAAK,UACL6L,SAAUJ,EACV3D,MAAO+C,EAAO7J,QACd8K,OAAQ,SAAChE,GACP6D,EAAW7D,GACX6N,EAAuB7N,EAAMlB,OAAOkB,UAExC,kBAAC,GAAD,CACEsC,QAASA,EAAQpJ,QACjB5D,QAASsO,EAAO1K,UAEjB,2BACC+K,QAAQ,QACR/Q,UAAU,kBAFX,kBAQL,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,yBACb,4BACEA,UACEoP,EAAQ4K,SAAWtJ,EAAOsJ,QACtB,wCACA,6BAENhV,KAAK,UACL6L,SAAU,SAAC/D,GACT2D,EAAa3D,GAvU7B,SAAC,GAAgB,IAAdlB,EAAa,EAAbA,OACxBpB,GAAYZ,EAAUgC,EAAOkB,OAuUQiO,CAAgBjO,IAElBA,MAAO+C,EAAOmK,QACdlJ,OAAQH,GAER,2CACChP,EAAUsG,KAAI,SAAC+R,GAAD,OAAc,4BAAQlN,MAAOkN,EAAQ/Z,GAAIwH,IAAKuS,EAAQ/Z,IAAK+Z,EAAQhV,UAIpF,0BAAMhF,UAAU,qBAChB,0BAAMA,UAAU,eAChB,kBAAC,GAAD,CACEoP,QAASA,EAAQ4K,QACjB5X,QAASsO,EAAOsJ,YAOtB,yBAAKha,UAAU,wCACb,yBAAKA,UAAU,yBACb,4BACEA,UACEoP,EAAQ1N,OAASgP,EAAOhP,MACpB,wCACA,6BAENsD,KAAK,QACL6L,SAAU,SAAC/D,GACT2D,EAAa3D,GAnW/B,SAAC,GAAgB,IAAdlB,EAAa,EAAbA,OACrBb,GAAYnB,EAAUgC,EAAOkB,OAmWOkO,CAAclO,IAEhBA,MAAO+C,EAAOnO,MACdoP,OAAQH,GAER,yCACC/O,EAAOqG,KAAI,SAACvG,GAAD,OAAY,4BAAQoL,MAAOpL,EAAMzB,GAAIwH,IAAK/F,EAAMzB,IAAKyB,EAAMsD,UAEzE,0BAAMhF,UAAU,qBAChB,0BAAMA,UAAU,eAChB,kBAAC,GAAD,CACEoP,QAASA,EAAQ1N,MACjBU,QAASsO,EAAOhP,UAOtB,yBAAK1B,UAAU,wCACb,yBAAKA,UAAU,yBACb,4BACEA,UACEoP,EAAQ2K,MAAQrJ,EAAOqJ,KACnB,wCACA,6BAEN/U,KAAK,OACL6L,SAAUJ,EACV3D,MAAO+C,EAAOkK,KACdjJ,OAAQH,GAER,wCACC9O,EAAOoG,KAAI,SAAC8R,GAAD,OAAW,4BAAQjN,MAAOiN,EAAK9Z,GAAIwH,IAAKsS,EAAK9Z,IAAK8Z,EAAK/U,UAErE,0BAAMhF,UAAU,qBAChB,0BAAMA,UAAU,eAChB,kBAAC,GAAD,CACEoP,QAASA,EAAQ2K,KACjB3X,QAASsO,EAAOqJ,SAMtB,yBAAK/Z,UAAU,+BACb,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACEC,GAAG,SACHG,KAAK,OACL4E,KAAK,SACLhF,UACEoP,EAAQ0K,QAAUpJ,EAAOoJ,OACrB,4BACA,kBAENjJ,SAAUJ,EACV3D,MAAO+C,EAAOiK,OACdhJ,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQ0K,OACjB1X,QAASsO,EAAOoJ,SAElB,2BACE/I,QAAQ,SACR/Q,UAAU,kBAFZ,oBASJ,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,yBACb,4BACEA,UACEoP,EAAQ8K,UAAYxJ,EAAOwJ,SACvB,wCACA,6BAENlV,KAAK,WACL6L,SAAUJ,EACV3D,MAAOoN,EACPpJ,OAAQH,GAER,wCACCzJ,EAAUe,KAAI,SAACC,GAAD,OAAe,4BAAQ4E,MAAO5E,EAASjI,GAAIwH,IAAKS,EAASjI,GAAIwT,SAAS,IAAIvL,EAASnC,iBAEpG,0BAAM/F,UAAU,qBAChB,0BAAMA,UAAU,eAChB,kBAAC,GAAD,CACEoP,QAASA,EAAQ8K,SACjB9X,QAASsO,EAAOwJ,aAKtB,yBAAKla,UAAU,kBACb,yBAAKA,UAAU,6CACb,4BACEI,KAAK,QACLJ,UAAU,qBAFZ,UAKU,IACV,4BACEI,KAAK,SACLJ,UAAU,mBAFZ,+BAoB5B,kBAAC,EAAD,QAMJ,kBAAC,IAAD,QC5jBAqP,GAAmBC,OAAaC,MAAM,CAC1CqK,UAAWtK,OAAaoK,IAAI,EAAG,cAAcC,IAAI,GAAI,aAAa/M,SAAS,oBAC3E6M,QAASnK,OAAaoK,IAAI,EAAG,cAAcC,IAAI,GAAI,aAAa/M,SAAS,oBACzEiN,OAAQvK,OAAa1C,SAAS,sBAC9B5G,QAASsJ,OAAa1C,SAAS,uBAC/BvG,MAAOiJ,KAAW,0BAA0B1C,SAAS,qBACrDzM,KAAMmP,OAAa1C,SAAS,yBAC5BmN,KAAMzK,OAAa1C,SAAS,qBAC5BlL,MAAO4N,OAAa1C,SAAS,qBAC7BoN,QAAS1K,OAAa1C,SAAS,uBAC/Bb,SAAUuD,OAAa1C,SAAS,wBAChCd,MAAOwD,OAAaxD,MAAM,iBAAiBc,SAAS,cAifvCqO,OA9ef,SAAiB5V,GACf,IAAMuE,EAAWqB,cACXC,EAAUC,cACViP,EAAY3Y,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QACrCG,EAAoCyY,EAApCzY,UAAWC,EAAyBwY,EAAzBxY,OAAQC,EAAiBuY,EAAjBvY,OAAQqZ,EAASd,EAATc,MA8BnC,OA5BAjX,qBAAU,WACRiK,SAASC,eAAe,WAAWC,UAAUC,IAAI,aA4BjD,yBAAKrO,UAAU,QACb,kBAACsO,EAAA,OAAD,KACE,4CAEF,kBAAC,EAAD,MAEA,yBAAKtO,UAAU,2CACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAiBgB,MAAM,WAAWC,OAAO,aAEzC,6BAASjB,UAAU,SACjB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,yCACb,wBAAIA,UAAU,MACZ,6CAGJ,yBAAKA,UAAU,aACb,kBAAC,KAAD,CACE4P,cAAe,CACbgK,UAAW,GACXH,QAAS,GACTI,OAAQ,GACR/N,MAAO,GACPzF,MAAO,GACPL,QAAS,GACT+T,KAAM,GACNrY,MAAO,GACP2Y,KAAM,GACNla,KAAM,GACN6Z,QAAS,GACTjO,SAAU,IAEZsD,iBAAkBA,GAClB3C,SAAQ,uCAAE,WAAMmD,EAAN,0BAAAlL,EAAA,6DAAgBmL,EAAhB,EAAgBA,cAAeC,EAA/B,EAA+BA,UACvCD,GAAc,GADN,kBAKc1M,EAAK+X,+BAA+BtL,EAAO/D,MAAO+D,EAAO9D,UALvE,cAKEqP,EALF,OAMElP,EAAMkP,EAAI5Z,KAAK0K,IAEb1K,EAAQ,CACVvB,GAAIiM,EACJ0N,UAAW/J,EAAO+J,UAClBH,QAAS5J,EAAO4J,QAChBI,OAAQhK,EAAOgK,OACf/N,MAAO+D,EAAO/D,MACdzF,MAAOwJ,EAAOxJ,MACdL,QAAS6J,EAAO7J,QAChB+T,KAAMlK,EAAOkK,KACbrY,MAAOmO,EAAOnO,MACdsY,QAASnK,EAAOmK,QAChBK,KAAMxK,EAAOwK,KACbla,KAAM0P,EAAO1P,MApBf,UAuBQkD,EAAUwG,WAAW,SAASK,IAAIgC,GAAKmP,IAAI7Z,GAvBnD,QAwBEuO,IACAD,GAAc,GACd3D,IAAMkE,QAAQ,2CAA4C,CACtD9K,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IAEduC,EAAQf,KAAK,sBAnCf,kDAsCJ1H,QAAQC,IAAI,QAAZ,MACEyJ,IAAMpI,MAAN,gBAAwB,CACpBwB,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IA9CZ,0DAAF,0DAoDP,gBACCkH,EADD,EACCA,OACAS,EAFD,EAECA,aAEAG,GAJD,EAGCF,aAHD,EAICE,cACArB,EALD,EAKCA,QACAsB,EAND,EAMCA,OACAC,EAPD,EAOCA,WAPD,OASC,kBAAC,KAAD,CAAMjE,SAAU4D,GACd,yBAAKtQ,UAAU,OACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACEC,GAAG,UACHG,KAAK,OACL4E,KAAK,UACLhF,UACEoP,EAAQqK,SAAW/I,EAAO+I,QACtB,4BACA,iBAEN5I,SAAUJ,EACV3D,MAAO+C,EAAO4J,QACd3I,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQqK,QACjBrX,QAASsO,EAAO+I,UAElB,2BACE1I,QAAQ,OACR/Q,UAAU,kBAFZ,aAUJ,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACEC,GAAG,YACHG,KAAK,OACL4E,KAAK,YACLhF,UACEoP,EAAQwK,WAAalJ,EAAOkJ,UACxB,4BACA,iBAEN/I,SAAUJ,EACV3D,MAAO+C,EAAO+J,UACd9I,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQwK,UACjBxX,QAASsO,EAAOkJ,YAElB,2BACE7I,QAAQ,OACR/Q,UAAU,kBAFZ,eASJ,yBAAKA,UAAU,yCACb,yBAAK8Y,MAAM,yBACT,4BACE9Y,UACEoP,EAAQyK,QAAUnJ,EAAOmJ,OACrB,wCACA,6BAEN7U,KAAK,SACL6L,SAAUJ,EACV3D,MAAO+C,EAAOgK,OACd/I,OAAQH,GAER,0CACA,4BAAQ7D,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,WAEF,0BAAMgM,MAAM,qBACZ,0BAAMA,MAAM,eACZ,kBAAC,GAAD,CACE1J,QAASA,EAAQyK,OACjBzX,QAASsO,EAAOmJ,WAKtB,yBAAK7Z,UAAU,+BACb,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACEC,GAAG,QACHG,KAAK,QACL4E,KAAK,QACLhF,UACEoP,EAAQyK,QAAUnJ,EAAOmJ,OACrB,4BACA,kBAENhJ,SAAUJ,EACV3D,MAAO+C,EAAO/D,MACdgF,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQtD,MACjB1J,QAASsO,EAAO5E,QAElB,2BACEiF,QAAQ,QACR/Q,UAAU,kBAFZ,WAUJ,yBAAKA,UAAU,yCACb,yBAAK8Y,MAAM,yBACT,4BACE9Y,UACEoP,EAAQjP,MAAQuQ,EAAOvQ,KACnB,wCACA,6BAEN6E,KAAK,OACL6L,SAAUJ,EACV3D,MAAO+C,EAAO1P,KACd2Q,OAAQH,GAER,6CACCuK,EAAMjT,KAAI,SAAC9H,GAAD,OAAa,4BAAQ2M,MAAO3M,EAAK+L,KAApB,IAA2B/L,EAAK6E,KAAhC,SAI1B,0BAAM8T,MAAM,qBACZ,0BAAMA,MAAM,eACZ,kBAAC,GAAD,CACE1J,QAASA,EAAQjP,KACjBiC,QAASsO,EAAOvQ,SAOtB,yBAAKH,UAAU,wCACb,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACEC,GAAG,QACHG,KAAK,OACL4E,KAAK,QACLhF,UACEoP,EAAQ/I,OAASqK,EAAOrK,MACpB,4BACA,kBAENwK,SAAUJ,EACV3D,MAAO+C,EAAOxJ,MACdyK,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQ/I,MACjBjE,QAASsO,EAAOrK,QAElB,2BACE0K,QAAQ,QACR/Q,UAAU,kBAFZ,WAUJ,yBAAKA,UAAU,yCACb,yBAAK8Y,MAAM,yBACT,4BACE9Y,UACEoP,EAAQ4K,SAAWtJ,EAAOsJ,QACtB,wCACA,6BAENhV,KAAK,UACL6L,SAAU,SAAC/D,IA9SzB,SAAC,GAAgB,IAAdlB,EAAa,EAAbA,OACzBpB,GAAYZ,EAAUgC,EAAOkB,OA8SSiO,CAAgBjO,GAChB2D,EAAa3D,IAEfA,MAAO+C,EAAOmK,QACdlJ,OAAQH,GAER,2CACChP,EAAUsG,KAAI,SAAC+R,GAAD,OAAe,4BAAQlN,MAAOkN,EAAQ/Z,GAAIwH,IAAKuS,EAAQ/Z,IAAxC,IAA8C+Z,EAAQhV,KAAtD,SAEhC,0BAAM8T,MAAM,qBACZ,0BAAMA,MAAM,eACZ,kBAAC,GAAD,CACE1J,QAASA,EAAQ4K,QACjB5X,QAASsO,EAAOsJ,YAMtB,yBAAKha,UAAU,yCACb,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACEA,UACEoP,EAAQpJ,SAAW0K,EAAO1K,QACrB,4BACD,kBAGNhB,KAAK,UACL6L,SAAUJ,EACV3D,MAAO+C,EAAO7J,QACd8K,OAAQH,IAET,2BACCI,QAAQ,UACR/Q,UAAU,kBAFX,WAMD,kBAAC,GAAD,CACEoP,QAASA,EAAQpJ,QACjB5D,QAASsO,EAAO1K,YAKtB,yBAAKhG,UAAU,yCACb,yBAAK8Y,MAAM,yBACT,4BACE9Y,UACEoP,EAAQ1N,OAASgP,EAAOhP,MACpB,wCACA,6BAENsD,KAAK,QACL6L,SAAU,SAAC/D,IAlW5B,SAAC,GAAgB,IAAdlB,EAAa,EAAbA,OACrBb,GAAYnB,EAAUgC,EAAOkB,OAkWQkO,CAAclO,GACd2D,EAAa3D,IAEfA,MAAO+C,EAAOnO,MACdoP,OAAQH,GAER,yCACC/O,EAAOqG,KAAI,SAACvG,GAAD,OAAa,4BAAQoL,MAAOpL,EAAMzB,GAAIwH,IAAK/F,EAAMzB,IAApC,IAA0CyB,EAAMsD,KAAhD,SAE3B,0BAAM8T,MAAM,qBACZ,0BAAMA,MAAM,eACZ,kBAAC,GAAD,CACE1J,QAASA,EAAQ1N,MACjBU,QAASsO,EAAOhP,UAMtB,yBAAK1B,UAAU,yCACb,yBAAK8Y,MAAM,yBACT,4BACE9Y,UACEoP,EAAQ1N,OAASgP,EAAOhP,MACpB,wCACA,6BAENsD,KAAK,OACL6L,SAAUJ,EACV3D,MAAO+C,EAAOkK,KACdjJ,OAAQH,GAER,wCACC9O,EAAOoG,KAAI,SAAC8R,GAAD,OAAY,4BAAQjN,MAAOiN,EAAK9Z,GAAIwH,IAAKsS,EAAK9Z,IAAlC,IAAwC8Z,EAAK/U,KAA7C,SAE1B,0BAAM8T,MAAM,qBACZ,0BAAMA,MAAM,eACZ,kBAAC,GAAD,CACE1J,QAASA,EAAQ2K,KACjB3X,QAASsO,EAAOqJ,SAMtB,yBAAK/Z,UAAU,yCACb,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACEC,GAAG,WACHG,KAAK,WACL4E,KAAK,WACLhF,UACEoP,EAAQrD,UAAY2E,EAAO3E,SACvB,4BACA,iBAEN8E,SAAUJ,EACV3D,MAAO+C,EAAO9D,SACd+E,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQrD,SACjB3J,QAASsO,EAAO3E,WAElB,2BACEgF,QAAQ,OACR/Q,UAAU,kBAFZ,cASL,yBAAKA,UAAU,iCACZ,yBAAKA,UAAU,yBAMjB,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,4BACEI,KAAK,QACLJ,UAAU,qBAFZ,UAKU,IACV,4BACEI,KAAK,SACLJ,UAAU,mBAFZ,+BAoB5B,kBAAC,EAAD,QAMJ,kBAAC,IAAD,QChTSyR,iBA1LA,SAAAzP,GAAK,MAAK,CACvBC,KAAM,CAEJoF,aAAc,QAEhBqK,QAAS,CACP9L,QAAS,GAEX+L,MAAO,CACLC,SAAU,MAEZC,cAAe,CACbrD,QAAS,OACTsD,WAAY,UAEdC,OAAQ,CACNC,YAAahQ,EAAMiQ,QAAQ,IAE7BC,QAAS,CACPC,eAAgB,eAuKLV,EAnKS,SAAC,GAA6C,IAA3ClP,EAA0C,EAA1CA,QAA0C,IAAjC6P,kBAAiC,MAApB,CAAC,CAACpN,KAAK,OAAa,IAEftB,mBAAS,IAFM,mBAE5D2O,EAF4D,KAExCC,EAFwC,OAG7B5O,mBAAS,IAHoB,mBAG5D6O,EAH4D,KAG/CC,EAH+C,OAI3C9O,mBAAS,GAJkC,mBAI5D+O,EAJ4D,KAItDC,EAJsD,KA+CnE,OACE,kBAAC,IAAD,CACE1S,UAAWuC,EAAQN,MAEnB,kBAAC0Q,GAAA,EAAD,CAAa3S,UAAWuC,EAAQmP,SAC9B,kBAAC,KAAD,KACE,yBAAK1R,UAAWuC,EAAQoP,OACtB,kBAACiB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWnN,QAAQ,YACjB,kBAACoN,GAAA,EAAD,CACEC,QAASZ,EAAmBa,SAAWd,EAAWc,OAClD9R,MAAM,UACN+R,cACEd,EAAmBa,OAAS,GAC5Bb,EAAmBa,OAASd,EAAWc,OAEzCrC,SA3DI,SAAAG,GAEtB,IAAIqB,EAGFA,EADErB,EAAMpF,OAAOqH,QACMb,EAAWnK,KAAI,SAAAmL,GAAS,OAAIA,EAAUnT,MAEtC,GAGvBqS,EAAsBD,OAoDR,kBAACU,GAAA,EAAD,aACA,kBAACA,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,0BACA,kBAACA,GAAA,EAAD,aACA,kBAACA,GAAA,EAAD,iBAGJ,kBAACM,GAAA,EAAD,KAEGjB,EAAWkB,MAAM,EAAGf,GAAatK,KAAI,SAAAmL,GAAS,OAC7C,kBAACN,GAAA,EAAD,CACE9S,UAAWuC,EAAQgR,SACnBC,OAAK,EACL/L,IAAK2L,EAAUnT,GACfwT,UAAwD,IAA9CpB,EAAmBqB,QAAQN,EAAUnT,KAE/C,kBAAC8S,GAAA,EAAD,CAAWnN,QAAQ,YACjB,kBAACoN,GAAA,EAAD,CACEC,SAAuD,IAA9CZ,EAAmBqB,QAAQN,EAAUnT,IAC9CmB,MAAM,UACNyP,SAAU,SAAAG,GAAK,OAvEb,SAACA,EAAO/Q,GAC9B,IAAM0T,EAAgBtB,EAAmBqB,QAAQzT,GAC7C2T,EAAwB,IAEL,IAAnBD,EACFC,EAAwBA,EAAsBC,OAAOxB,EAAoBpS,GAC9C,IAAlB0T,EACTC,EAAwBA,EAAsBC,OAAOxB,EAAmBiB,MAAM,IACrEK,IAAkBtB,EAAmBa,OAAS,EACvDU,EAAwBA,EAAsBC,OAAOxB,EAAmBiB,MAAM,GAAI,IACzEK,EAAgB,IACzBC,EAAwBA,EAAsBC,OAC5CxB,EAAmBiB,MAAM,EAAGK,GAC5BtB,EAAmBiB,MAAMK,EAAgB,KAI7CrB,EAAsBsB,GAsDiBE,CAAgB9C,EAAOoC,EAAUnT,KACpD6M,MAAM,UAGV,kBAACiG,GAAA,EAAD,KACE,yBAAK/S,UAAWuC,EAAQsP,eAMtB,kBAACoC,GAAA,EAAD,CAAY5R,QAAQ,SAAS+Q,EAAUqG,QAAvC,IAAiDrG,EAAUwG,aAG/D,kBAAC7G,GAAA,EAAD,KAAYK,EAAUtH,OACtB,kBAACiH,GAAA,EAAD,MAEA,kBAACA,GAAA,EAAD,KAAYK,EAAU/M,OACtB,kBAAC0M,GAAA,EAAD,KACE,kBAAC,KAAD,CAAQmB,OAAO,aAAaC,WAAS,GAClCf,EAAUgB,UAGf,kBAACrB,GAAA,EAAD,KACE,kBAACsB,GAAA,EAAD,CACEhS,QAAQ,YACRjB,MAAM,UACNpB,UAAWuC,EAAQ+R,OACnBC,UAAW,kBAAC,KAAD,OAJb,SAUF,kBAACxB,GAAA,EAAD,KACE,kBAACsB,GAAA,EAAD,CACEhS,QAAQ,YACRjB,MAAM,YACNpB,UAAWuC,EAAQ+R,OACnBC,UAAW,kBAAC,KAAD,OAJb,oBAiBhB,kBAACC,GAAA,EAAD,CAAaxU,UAAWuC,EAAQ2P,SAC9B,kBAACuC,GAAA,EAAD,CACEC,UAAU,MACVC,MAAOvC,EAAWc,OAClB0B,aA3GiB,SAAC5D,EAAOyB,GAC/BC,EAAQD,IA2GFoC,oBAxGwB,SAAA7D,GAC9BwB,EAAexB,EAAMpF,OAAOkB,QAwGtB2F,KAAMA,EACNF,YAAaA,EACbuC,mBAAoB,CAAC,EAAG,GAAI,W,OC5LbxF,OAAaC,MAAM,CAC1CvK,KAAMsK,OACHoK,IAAI,EAAG,cACPC,IAAI,GAAI,aACR/M,SAAS,oBACZiN,OAAQvK,OAAa1C,SAAS,sBAC9B5G,QAASsJ,OAAa1C,SAAS,uBAC/BvG,MAAOiJ,KAAW,0BAA0B1C,SAAS,qBACrDyN,KAAM/K,OAAa1C,SAAS,oBAC5BmN,KAAMzK,OAAa1C,SAAS,qBAC5BlL,MAAO4N,OAAa1C,SAAS,qBAC7Bd,MAAOwD,OAAaxD,MAAM,iBAAiBc,SAAS,cAgDvC0O,OA7Cf,WAAoB,IAAD,EACY5X,mBAAS,IADrB,mBACV6X,EADU,KACDC,EADC,OAEa9X,oBAAS,GAFtB,mBAED0V,GAFC,WAIjBnV,qBAAU,WACRiK,SAASC,eAAe,WAAWC,UAAUC,IAAI,UACjDoN,OAGF,IAAMA,EAAU,uCAAG,sBAAA9W,EAAA,sEACXtB,EAAUwG,WAAW,SAC1BC,YAAW,SAACC,GACX,IAAMuP,EAAU,GAChBvP,EAAcE,SAAQ,SAACC,GACrBoP,EAAQnP,KAAKD,EAAIE,WAEnB3H,QAAQC,IAAI,UAAW4W,GACvBkC,EAAUlC,GAEVF,GAAW,KACV1P,GAXc,2CAAH,qDAchB,OACE,yBAAK1J,UAAU,QACb,kBAACsO,EAAA,OAAD,KACE,qDAGF,kBAAC,EAAD,MACA,yBAAKtO,UAAU,2CACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAiBgB,MAAM,UAAUC,OAAO,YACxC,yBAAKjB,UAAU,6BACb,kBAAC,GAAD,CAAYoS,WAAYmJ,KAE1B,kBAAC,EAAD,QAGJ,kBAAC,IAAD,Q,qBCjDSG,GAfgB,SAAC,GAAkB,IAAbrW,EAAY,oBACvCmL,EAAkBmL,eAAlBnL,cADuC,EAE/BoL,aAASvW,GAAlBwW,EAFwC,oBAG/C,OACE,kBAAC,KAAD,iBACMA,EACAxW,EAFN,CAGEoO,SAAWoI,EAAM/O,OAAS,IAAIzL,KAAKwa,EAAM/O,QAAW,KACpD+D,SAAU,SAACiL,GACTtL,EAAcqL,EAAM7W,KAAM8W,QCDnB3M,I,cAVG,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAAShN,EAAc,EAAdA,QAC5B,OAAKgN,EAGDhN,EACK,yBAAKpC,UAAU,+BAA+BoC,GAEhD,yBAAKpC,UAAU,2BAAf,YALE,yBAAKA,UAAU,8BC4CXwI,G,2MA7Cb9G,MAAQ,CACN+G,SAAS,EACTC,WAAOC,G,yFAGiBC,GAAY,IAAD,OAC9BA,EAAUpF,MAIfqF,KAAKC,SAAS,CAAEL,SAAS,IAAQ,WAC/B,IAAIM,EAAS,IAAIC,WAEjBD,EAAOE,UAAY,WACjB,EAAKH,SAAS,CAAEL,SAAS,EAAOC,MAAOK,EAAOG,UAGhDH,EAAOI,cAAcP,EAAUpF,W,+BAIzB,IACAA,EAASqF,KAAKxD,MAAd7B,KADD,EAEoBqF,KAAKnH,MAAxB+G,EAFD,EAECA,QAASC,EAFV,EAEUA,MAEjB,OAAKlF,EAIDiF,EACK,yCAIP,yBACE5H,IAAK6H,EACL5H,IAAK0C,EAAKwB,KACVhF,UAAU,qBACV2G,OAAQ,IACR1B,MAAO,MAbF,S,GA3BOmE,IAAMC,WCepBgG,GAAmBC,OAAaC,MAAM,CAC1C/L,KAAM8L,OAAY1C,SAAS,4BAC3B5L,MAAOsO,OAAa1C,SAAS,2BAC7B1E,SAAUoH,OAAa1C,SAAS,6BAChCmP,KAAMzM,OAAa1C,SAAS,0BAC5BoP,QAAS1M,OAAa1C,SAAS,+BA4QlBqP,GAzQK,WAAO,IAAD,EACMvY,mBAAS,MADf,mBACNwY,GADM,aAEFxY,mBAAS,MAFP,mBAEjBC,EAFiB,KAEZC,EAFY,KAGlBuY,EAAQ,CAAC,YAAa,cAE5BlY,qBAAU,WACRiK,SAASC,eAAe,SAASC,UAAUC,IAAI,aAsBjD,OACE,yBAAKrO,UAAU,QACb,kBAACsO,EAAA,OAAD,KACE,gDAGF,kBAAC,EAAD,MAIA,yBAAKtO,UAAU,2CACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,iBAEb,kBAAC,EAAD,CAAiBgB,MAAM,GAAGC,OAAO,UAEjC,6BAASjB,UAAU,SACjB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,yCACb,wBAAIA,UAAU,MAAd,iBAEF,yBAAKA,UAAU,aACb,kBAAC,KAAD,CACE4P,cAAe,CACbpM,KAAM,GACN0E,SAAU,GACV6T,KAAM,GACNC,QAAS,GACThb,MAAO,IAETqO,iBAAkBA,GAClB3C,SAAQ,uCAAE,WAAOmD,EAAP,wBAAAlL,EAAA,yDAAiBmL,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,UACxCD,GAAc,GACJ,MAAPnM,EAFK,wDAMJqN,EAAQ,IAAI3P,KAAKwO,EAAOkM,MANpB,SASA3R,EAAO,CACTnK,GAAIgQ,eACJC,IAAKvM,EACL3C,MAAO6O,EAAO7O,MACd+a,KAAMlM,EAAOkM,KACbK,MAAOC,KAAOxM,EAAOkM,MAAM7H,OAAO,QAClCoI,KAAMD,KAAOxM,EAAOkM,MAAM7H,OAAO,QACjC6D,KAAM/G,EAAMuL,mBAAmB,SAC/BP,QAASnM,EAAOmM,QAChBhW,QAAS6J,EAAO3H,SAChBiI,QAAS9O,KAAK+O,MACdoM,OAAQ,SACRC,WAAYzL,GArBV,SAwBE3N,EAAUwG,WAAW,UAAUwE,IAAIjE,GAxBrC,OA0BJ+B,IAAMkE,QAAQ,2BAA4B,CACxC9K,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IAEZoH,IACAD,GAAc,GApCV,kDAsCJrN,QAAQC,IAAI,QAAZ,MACAyJ,IAAMpI,MAAN,gBAAsB,CACpBwB,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IA9CR,0DAAF,0DAmDP,gBACCkH,EADD,EACCA,OACAS,EAFD,EAECA,aACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,cACAC,EALD,EAKCA,aACArB,EAND,EAMCA,QACAsB,EAPD,EAOCA,OACAC,EARD,EAQCA,WARD,OAUC,0BACEjE,SAAU4D,EACVM,QAAQ,uBAER,yBAAK5Q,UAAU,cACb,2BACEI,KAAK,OACLC,YAAY,oBACZL,UACEoP,EAAQpO,OAAS0P,EAAO1P,MACpB,+BACA,iBAENgE,KAAK,QACL/E,GAAG,QACH4Q,SAAUJ,EACV3D,MAAO+C,EAAO7O,MACd8P,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQpO,MACjBoB,QAASsO,EAAO1P,SAIpB,yBAAKhB,UAAU,eACb,2BAAOA,UAAU,sBAAjB,cAIA,kBAAC0c,GAAD,CACE1c,UACEoP,EAAQ2M,MAAQrL,EAAOqL,KACnB,kCACA,sBAEN/W,KAAK,OACL2X,gBAAc,EACdC,WAAW,QAIf,yBAAK5c,UAAU,qBACb,2BAAOA,UAAU,sBAAjB,2CAGA,8BACEA,UACEoP,EAAQlH,UAAYwI,EAAOxI,SACvB,6BACA,eAEN7H,YAAY,WACZ2E,KAAK,WACL6L,SAAUJ,EACV3D,MAAO+C,EAAO7J,QACd8K,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQlH,SACjB9F,QAASsO,EAAOxI,YAKpB,yBAAKlI,UAAU,cACb,2BAAOA,UAAU,sBAAjB,iBAGA,8BACEA,UACEoP,EAAQ4M,SAAWtL,EAAOsL,QACtB,6BACA,eAEN3b,YAAY,cACZ2E,KAAK,UACL6L,SAAUJ,EACV3D,MAAO+C,EAAOmM,QACdlL,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQ4M,QACjB5Z,QAASsO,EAAOsL,WAGpB,yBAAKhc,UAAU,cACb,2BAAOA,UAAU,sBAAjB,gBAGA,2BACEC,GAAG,OACH+E,KAAK,OACL5E,KAAK,OACLyQ,SAAU,SAACG,IAjNtB,SAACxF,GAClB,IAAMqR,EAAerR,EAAEI,OAAOsF,MAAM,GACjC2L,GAAgBV,EAAMW,SAASD,EAAazc,MAC7C8b,EAASW,IAETX,EAAS,MACT/P,IAAMpI,MAAM,qDAAsD,CAChEwB,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,KAqMgBoU,CAAW/L,GACXR,EACE,OACAQ,EAAMC,cAAcC,MAAM,KAG9BlR,UACEoP,EAAQ5L,MAAQkN,EAAOlN,KACnB,kCACA,oBAENsN,OAAQH,IAEV,kBAAC,GAAD,CAAOnN,KAAMqM,EAAOrM,OACnBqM,EAAOrM,MAAQ,kBAAC,EAAD,CAAaA,KAAMqM,EAAOrM,KAAMmM,QAASuM,EAAUtY,OAAQA,EAAQmB,UAAU,kBAC7F,kBAAC,GAAD,CACEqK,QAASA,EAAQ5L,KACjBpB,QAASsO,EAAOlN,QAGpB,yBAAKxD,UAAU,cAEb,2BACEI,KAAK,SACL0M,MAAM,eACN9M,UAAU,kBACVmR,SAAUZ,GAAwB,OAAR5M,cAW9C,kBAAC,IAAD,WCtRCqZ,GAAY,SAAC,GAA+B,IAA7Bhc,EAA4B,EAA5BA,MAAOmP,EAAqB,EAArBA,QAAS2G,EAAY,EAAZA,MAC1C,OACE,yBAAK9W,UAAU,yCACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBACEa,IAAKiW,EACLhW,IAAI,YACJd,UAAU,2BAEZ,yBAAKA,UAAU,aACb,uBAAGM,KAAK,MACN,wBAAIN,UAAU,cAAcgB,IAQ9B,uBAAGhB,UAAU,aACX,2BAAOA,UAAU,cAAjB,YACW,kBAAC,KAAD,CAAQiX,SAAO,GAAE9G,GAD5B,QAES,uBAAG7P,KAAK,MAAR,aAFT,OAGS,IACP,uBAAGA,KAAK,MACN,uBACEN,UAAU,gCACVkX,cAAY,kBCkCnB+F,GAxDI,WAAO,IAAD,EACKvZ,mBAAS,IADd,mBAChBwZ,EADgB,KACRC,EADQ,KAEvBlZ,qBAAU,WACRiK,SAASC,eAAe,OAAOC,UAAUC,IAAI,UAC7C+O,MACC,IAEH,IAAMA,EAAW,uCAAG,sBAAAzY,EAAA,sEACZtB,EAAUwG,WAAW,UAC1BC,YAAW,SAACC,GACX,IAAMuP,EAAU,GAChBvP,EAAcE,SAAQ,SAACC,GACrBoP,EAAQnP,KAAKD,EAAIE,WAEnB+S,EAAU7D,KACT5P,GARe,2CAAH,qDAYf,OACE,yBAAK1J,UAAU,QACb,kBAACsO,EAAA,OAAD,KACE,8CAEF,kBAAC,EAAD,MACA,yBAAKtO,UAAU,2CACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAiBgB,MAAM,MAAMC,OAAO,eACpC,yBAAKjB,UAAU,mBACX,iCACE,yBAAKA,UAAU,QACb,yBAAKA,UAAU,eACb,4CAGJ,yBAAKA,UAAU,OACZkd,EAAOjV,KAAI,SAAC+I,GAAD,OACV,kBAAC,GAAD,CACEhQ,MAAOgQ,EAAMhQ,MACbmP,QAASa,EAAMb,QACf1I,IAAKuJ,EAAM/Q,GACX6W,MAAO9F,EAAMd,YAMzB,kBAAC,EAAD,UC/CGf,GAVG,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAAShN,EAAc,EAAdA,QAC5B,OAAKgN,EAGDhN,EACK,yBAAKpC,UAAU,+BAA+BoC,GAEhD,yBAAKpC,UAAU,2BAAf,YALE,yBAAKA,UAAU,6BCQpBqP,I,OAAmBC,OAAaC,MAAM,CAC1CvK,KAAMsK,OACHoK,IAAI,EAAG,cACPC,IAAI,GAAI,aACR/M,SAAS,oBACZiN,OAAQvK,OAAa1C,SAAS,sBAC9B5G,QAASsJ,OAAa1C,SAAS,uBAC/BvG,MAAOiJ,KAAW,0BAA0B1C,SAAS,qBACrDoN,QAAS1K,OAAa1C,SAAS,uBAC/BmN,KAAMzK,OAAa1C,SAAS,qBAC5BlL,MAAO4N,OAAa1C,SAAS,qBAC7Bd,MAAOwD,OAAaxD,MAAM,iBAAiBc,SAAS,eAmXvCyQ,OAhXf,SAAsBhY,GACpB,IAAMuE,EAAWqB,cACXzJ,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAChCG,EAA8BH,EAA9BG,UAAWC,EAAmBJ,EAAnBI,OAAQC,EAAWL,EAAXK,OAiB3B,OAfAoC,qBAAU,WACRiK,SAASC,eAAe,UAAUC,UAAUC,IAAI,aAehD,yBAAKrO,UAAU,QACb,kBAACsO,EAAA,OAAD,KACE,4CAEF,kBAAC,EAAD,MAIA,yBAAKtO,UAAU,2CACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAiBgB,MAAM,gBAAgBC,OAAO,WAG9C,6BAASjB,UAAU,SACjB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,yCACb,wBAAIA,UAAU,MAAd,mBACkB,wCAGpB,yBAAKA,UAAU,aACb,kBAAC,KAAD,CACE4P,cAAe,CACb5K,KAAM,GACN6U,OAAQ,GACR/N,MAAO,GACPzF,MAAO,GACPL,QAAS,GACT+T,KAAM,GACNrY,MAAO,GACPsY,QAAS,IAEX3K,iBAAkBA,GAClB3C,SAAQ,uCAAE,WAAOmD,EAAP,oBAAAlL,EAAA,6DAAiBmL,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,UACxCD,GAAc,GADN,kBAGAzM,EAAUwG,WAAW,YAAYwE,IAAjC,eAAyCwB,EAAzC,CAAiDM,QAAS9O,KAAK+O,MAAOnQ,GAAIgQ,kBAH1E,OAIN9D,IAAMkE,QAAQ,mCAAoC,CAC1C9K,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IAEZtD,EAAMiY,WAAWC,SAAS,uBAb1B,gDAeApR,IAAMpI,MAAN,UAAe,KAAM3B,SAAW,CAC9BmD,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IAtBZ,QAyBR6U,YAAW,WACTzN,IACAD,GAAc,KACb,KA5BK,yDAAF,0DAiCP,gBACCD,EADD,EACCA,OACAS,EAFD,EAECA,aAEAG,GAJD,EAGCF,aAHD,EAICE,cACArB,EALD,EAKCA,QACAsB,EAND,EAMCA,OACAC,EAPD,EAOCA,WAPD,OASC,kBAAC,KAAD,CAAMjE,SAAU4D,GAGd,yBAAKtQ,UAAU,OAIb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACEC,GAAG,OACHG,KAAK,OACL4E,KAAK,OACLhF,UACEoP,EAAQpK,MAAQ0L,EAAO1L,KACnB,4BACA,iBAEN6L,SAAUJ,EACV3D,MAAO+C,EAAO7K,KACd8L,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQpK,KACjB5C,QAASsO,EAAO1L,OAElB,2BACE+L,QAAQ,OACR/Q,UAAU,kBAFZ,2BAIyB,mDAK7B,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,yBACb,4BACEA,UACEoP,EAAQyK,QAAUnJ,EAAOmJ,OACrB,wCACA,6BAEN7U,KAAK,SACL6L,SAAUJ,EACV3D,MAAO+C,EAAOgK,OACd/I,OAAQH,GAER,0CACA,4BAAQ7D,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,WAEF,0BAAM9M,UAAU,qBAChB,0BAAMA,UAAU,eAChB,kBAAC,GAAD,CACEoP,QAASA,EAAQyK,OACjBzX,QAASsO,EAAOmJ,WAMtB,yBAAK7Z,UAAU,+BACb,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACEC,GAAG,QACHG,KAAK,QACL4E,KAAK,QACLhF,UACEoP,EAAQyK,QAAUnJ,EAAOmJ,OACrB,4BACA,kBAENhJ,SAAUJ,EACV3D,MAAO+C,EAAO/D,MACdgF,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQtD,MACjB1J,QAASsO,EAAO5E,QAElB,2BACEiF,QAAQ,QACR/Q,UAAU,kBAFZ,WAQJ,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACEC,GAAG,QACHG,KAAK,OACL4E,KAAK,QACLhF,UACEoP,EAAQ/I,OAASqK,EAAOrK,MACpB,4BACA,kBAENwK,SAAUJ,EACV3D,MAAO+C,EAAOxJ,MACdyK,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQ/I,MACjBjE,QAASsO,EAAOrK,QAElB,2BACE0K,QAAQ,QACR/Q,UAAU,kBAFZ,WAQJ,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACEA,UACEoP,EAAQpJ,SAAW0K,EAAO1K,QACxB,4BACA,kBAEJ3F,YAAY,kBACZ4O,KAAK,IACLjK,KAAK,UACL6L,SAAUJ,EACV3D,MAAO+C,EAAO7J,QACd8K,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQpJ,QACjB5D,QAASsO,EAAO1K,YAKtB,yBAAKhG,UAAU,yCACb,yBAAKA,UAAU,yBACb,4BACEA,UACEoP,EAAQ4K,SAAWtJ,EAAOsJ,QACtB,wCACA,6BAENhV,KAAK,UACL6L,SAAU,SAAC/D,IAjPzB,SAAC,GAAgB,IAAdlB,EAAa,EAAbA,OAI1BpB,GAAYZ,EAAUgC,EAAOkB,OA8OUiO,CAAgBjO,GAChB2D,EAAa3D,IAEfA,MAAO+C,EAAOmK,QACdlJ,OAAQH,GAER,2CACChP,EAAUsG,KAAI,SAAC+R,GAAD,OACZ,4BAAQlN,MAAOkN,EAAQ/Z,GAAIwH,IAAKuS,EAAQ/Z,GAAIiM,IAAK8N,EAAQ/Z,IAAK+Z,EAAQhV,UAG3E,0BAAMhF,UAAU,qBAChB,0BAAMA,UAAU,eAChB,kBAAC,GAAD,CACEoP,QAASA,EAAQ4K,QACjB5X,QAASsO,EAAOsJ,YAKtB,yBAAKha,UAAU,wCACb,yBAAKA,UAAU,yBACb,4BACEA,UACEoP,EAAQ1N,OAASgP,EAAOhP,MACpB,wCACA,6BAENsD,KAAK,QACL6L,SAAU,SAAC/D,IAxQ3B,SAAC,GAAgB,IAAdlB,EAAa,EAAbA,OACvBb,GAAYnB,EAAUgC,EAAOkB,OAwQSkO,CAAclO,GACd2D,EAAa3D,IAEfA,MAAO+C,EAAOnO,MACdoP,OAAQH,GAER,yCACC/O,EAAOqG,KAAI,SAACvG,GAAD,OACT,4BAAQoL,MAAOpL,EAAMzB,GAAIwH,IAAK/F,EAAMzB,IAAKyB,EAAMsD,UAGpD,0BAAMhF,UAAU,qBAChB,0BAAMA,UAAU,eAChB,kBAAC,GAAD,CACEoP,QAASA,EAAQ1N,MACjBU,QAASsO,EAAOhP,UAMtB,yBAAK1B,UAAU,wCACb,yBAAKA,UAAU,yBACb,4BACEA,UACEoP,EAAQ1N,OAASgP,EAAOhP,MACpB,wCACA,6BAENsD,KAAK,OACL6L,SAAUJ,EACV3D,MAAO+C,EAAOkK,KACdjJ,OAAQH,GAER,wCACC9O,EAAOoG,KAAI,SAAC8R,GAAD,OACT,4BAAQjN,MAAOiN,EAAMtS,IAAKsS,EAAK9Z,IAAK8Z,EAAK/U,UAI9C,0BAAMhF,UAAU,qBAChB,0BAAMA,UAAU,eAChB,kBAAC,GAAD,CACEoP,QAASA,EAAQ2K,KACjB3X,QAASsO,EAAOqJ,SAOtB,yBAAK/Z,UAAU,MAAMmB,MAAO,CAAEsc,UAAW,SACvC,yBAAKzd,UAAU,aACb,4BACEI,KAAK,QACLJ,UAAU,qBAFZ,UAKU,IACV,4BACEI,KAAK,SACLJ,UAAU,mBAFZ,+BAoB5B,kBAAC,EAAD,QAGJ,kBAAC,IAAD,Q,OC3QS0d,OAlHf,WAAuB,IAAD,EACcha,mBAAS,IADvB,mBACXia,EADW,KACDC,EADC,KAElB3Z,qBAAU,WACRiK,SAASC,eAAe,UAAUC,UAAUC,IAAI,UAElDwP,MACE,IAEF,IAKMA,EAAa,uCAAG,sBAAAlZ,EAAA,sEACAtB,EAAUwG,WAAW,YACtCC,YAAW,SAACC,GACX,IAAMuP,EAAU,GAChBvP,EAAcE,SAAQ,SAACC,GACrBoP,EAAQnP,KAAKD,EAAIE,WAEnBwT,EAAYtE,KACX5P,GARe,yDAAH,qDAWnB,OAEI,yBAAK1J,UAAU,QACX,kBAACsO,EAAA,OAAD,KACA,iDAEA,kBAAC,EAAD,MAGA,yBAAKtO,UAAU,2CACf,kBAAC,EAAD,MAEI,yBAAKA,UAAU,iBAAiBmB,MAAO,CAACuE,gBAAiB,UACrD,kBAAC,EAAD,CAAiB1E,MAAM,gBAAgBC,OAAO,WAE9C,yBAAKjB,UAAU,aACf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,oBACX,2BAAOA,UAAU,mBACb,+BACI,4BACI,4BAAI,gDACJ,4BAAI,0CACJ,4BAAI,uCACJ,wBAAIA,UAAU,eAAc,wCAC5B,4BAAI,0CACJ,sCAIJ,+BACK2d,EAAS1V,KAAI,SAAC6V,EAAQ3V,GAAT,OACd,wBAAIV,IAAKU,GAET,4BACI,yBAAKtH,IAAI,qDAAqDC,IAAI,KAClE,uBAAGR,KAAK,IAAIN,UAAU,aAAa8d,EAAO9Y,OAE9C,4BACK8Y,EAAO9X,SAEZ,4BACC8X,EAAO/D,MAER,wBAAI/Z,UAAU,eACd,0BAAMA,UAAU,uBAAuB8d,EAAOpc,MAA9C,MAEA,4BACKoc,EAAO9D,SAEZ,wBAAI7Y,MAAO,CAAC8D,MAAO,QACf,uBAAG3E,KAAK,IAAIN,UAAU,cAClB,0BAAMA,UAAU,YACZ,uBAAGA,UAAU,6BACb,uBAAGA,UAAU,+CAGrB,uBAAGM,KAAK,IAAIN,UAAU,cAClB,0BAAMA,UAAU,YACZ,uBAAGA,UAAU,6BACb,uBAAGA,UAAU,0CAGrB,uBAAGM,KAAK,IAAIN,UAAU,qBAClB,0BAAMA,UAAU,YACZ,uBAAGA,UAAU,6BACb,uBAAGA,UAAU,yDAgB7D,kBAAC,IAAD,QCxGGmP,I,OAVG,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAAShN,EAAc,EAAdA,QAC5B,OAAKgN,EAGDhN,EACK,yBAAKpC,UAAU,+BAA+BoC,GAEhD,yBAAKpC,UAAU,2BAAf,YALE,yBAAKA,UAAU,8BCYpBqP,GAAmBC,OAAaC,MAAM,CAC1C/L,KAAM8L,OAAY1C,SAAS,4BAC3B5L,MAAOsO,OAAa1C,SAAS,2BAC7BoP,QAAS1M,OAAa1C,SAAS,+BAgMlBmR,GA7LO,WAAO,IAAD,EACFra,mBAAS,MADP,mBACjBC,EADiB,KACZC,EADY,KAM1B,OAJAK,qBAAU,WACRiK,SAASC,eAAe,WAAWC,UAAUC,IAAI,aAIjD,yBAAKrO,UAAU,QACb,kBAACsO,EAAA,OAAD,KACE,kDAEF,kBAAC,EAAD,MACA,yBAAKtO,UAAU,2CACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAiBgB,MAAM,YAAYC,OAAO,YAE1C,6BAASjB,UAAU,SACjB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,yCACb,wBAAIA,UAAU,MAAd,mBAEF,yBAAKA,UAAU,aACb,kBAAC,KAAD,CACE4P,cAAe,CACbpM,KAAM,GACNwC,QAAS,GACT+V,KAAM,GACNC,QAAS,GACThb,MAAO,IAETqO,iBAAkBA,GAClB3C,SAAQ,uCAAE,WAAOmD,EAAP,sBAAAlL,EAAA,yDAAiBmL,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,UAC9B,MAAPpM,EADK,wDAIRmM,GAAc,GAJN,SAMA1F,EAAO,CACXnK,GAAIgQ,eACJtM,IAAKA,EACL3C,MAAO6O,EAAO7O,MACdgb,QAASnM,EAAOmM,QAChB7L,QAAS9O,KAAK+O,MACdF,IAAKvM,GAZD,SAcAN,EAAUwG,WAAW,aAAawE,IAAIjE,GAdtC,OAeN2F,IACAD,GAAc,GACd3D,IAAMkE,QAAN,UAAiBR,EAAO7O,MAAxB,0CAAuE,CACrEuE,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IAxBN,kDA2BNwD,IAAMpI,MAAN,gBAAwB,CACtBwB,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IAlCN,0DAAF,0DAwCP,gBACCkH,EADD,EACCA,OACAS,EAFD,EAECA,aACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,cACAC,EALD,EAKCA,aACArB,EAND,EAMCA,QACAsB,EAPD,EAOCA,OACAC,EARD,EAQCA,WARD,OAUC,0BACEjE,SAAU4D,EACVM,QAAQ,uBAER,yBAAK5Q,UAAU,uBAEb,kBAAC,KAAD,CACEI,KAAK,OACLJ,UACEoP,EAAQpO,OAAS0P,EAAO1P,MACpB,+BACA,iBAENgE,KAAK,QACL/E,GAAG,QACH4Q,SAAUJ,EACV3D,MAAO+C,EAAO7O,MACd8P,OAAQH,IAEV,2BACCI,QAAQ,QACR/Q,UAAU,kBAFX,uDAMA,kBAAC,GAAD,CACEoP,QAASA,EAAQpO,MACjBoB,QAASsO,EAAO1P,SAKpB,yBAAKhB,UAAU,cACb,8BACEA,UACEoP,EAAQ4M,SAAWtL,EAAOsL,QACtB,6BACA,eAEN3b,YAAY,gBACZ2E,KAAK,UACL6L,SAAUJ,EACV3D,MAAO+C,EAAOmM,QACdlL,OAAQH,IAEV,kBAAC,GAAD,CACEvB,QAASA,EAAQ4M,QACjB5Z,QAASsO,EAAOsL,WAGpB,yBAAKhc,UAAU,cACb,2BAAOA,UAAU,sBAAjB,gBAGA,2BACEC,GAAG,OACH+E,KAAK,OACL5E,KAAK,OACLyQ,SAAU,SAACG,GACTR,EACE,OACAQ,EAAMC,cAAcC,MAAM,KAG9BlR,UACEoP,EAAQ5L,MAAQkN,EAAOlN,KACnB,kCACA,oBAENsN,OAAQH,IAEV,kBAAC,EAAD,CAAOnN,KAAMqM,EAAOrM,OACnBqM,EAAOrM,MAAQ,kBAAC,EAAD,CAAaA,KAAMqM,EAAOrM,KAAMI,OAAQA,EAAQmB,UAAU,mBAC1E,kBAAC,GAAD,CACEqK,QAASA,EAAQ5L,KACjBpB,QAASsO,EAAOlN,QAGpB,yBAAKxD,UAAU,cACb,2BACEI,KAAK,SACL0M,MAAM,iBACN9M,UAAU,kBACVmR,SAAUZ,cAW9B,kBAAC,IAAD,WCvMCyM,GAAY,SAAC,GAA+B,IAA7Bhc,EAA4B,EAA5BA,MAAOmP,EAAqB,EAArBA,QAAS2G,EAAY,EAAZA,MAC1C,OACE,yBAAK9W,UAAU,yCACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBACEa,IAAKiW,EACLhW,IAAI,YACJd,UAAU,2BAEZ,yBAAKA,UAAU,aACb,uBAAGM,KAAK,MACN,wBAAIN,UAAU,cAAcgB,IAQ9B,uBAAGhB,UAAU,aACX,2BAAOA,UAAU,cAAjB,YACW,kBAAC,KAAD,CAAQiX,SAAO,GAAE9G,GAD5B,QAES,uBAAG7P,KAAK,MAAR,aAFT,OAGS,IACP,uBAAGA,KAAK,MACN,uBACEN,UAAU,gCACVkX,cAAY,kBC4CnB+F,GAnEI,WAAQ,IAAD,EACQvZ,mBAAS,IADjB,mBACjBsa,EADiB,KACNC,EADM,KAEtBha,qBAAU,WACRiK,SAASC,eAAe,WAAWC,UAAUC,IAAI,UACjD6P,MACA,IAGF,IAAMA,EAAY,uCAAG,sBAAAvZ,EAAA,sEACbtB,EAAUwG,WAAW,aAC1BC,YAAW,SAACC,GACX,IAAMuP,EAAU,GAChBvP,EAAcE,SAAQ,SAACC,GACrBoP,EAAQnP,KAAKD,EAAIE,WAEnB6T,EAAW3E,KACV5P,GARgB,2CAAH,qDAYlB,OACE,yBAAK1J,UAAU,QACb,kBAACsO,EAAA,OAAD,KACE,gDAGF,kBAAC,EAAD,MAIA,yBAAKtO,UAAU,2CACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,iBAEb,kBAAC,EAAD,CAAiBgB,MAAM,UAAUC,OAAO,YACxC,yBAAKjB,UAAU,mBAEb,iCACE,yBAAKA,UAAU,QACb,yBAAKA,UAAU,eACb,+CAGJ,yBAAKA,UAAU,OACZge,EAAU/V,KAAI,SAACkW,GAAD,OACb,kBAAC,GAAD,CACEnd,MAAOmd,EAAQnd,MACfmP,QAASgO,EAAQhO,QACjB1I,IAAK0W,EAAQle,GACb6W,MAAOqH,EAAQjO,YASzB,kBAAC,EAAD,UCxDGf,GAVG,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAAShN,EAAc,EAAdA,QAC5B,OAAKgN,EAGDhN,EACK,yBAAKpC,UAAU,+BAA+BoC,GAEhD,yBAAKpC,UAAU,2BAAf,YALE,yBAAKA,UAAU,6BCWpBqP,GAAmBC,OAAaC,MAAM,CACxCxJ,YAAauJ,OACVoK,IAAI,EAAG,cACPC,IAAI,GAAI,aACR/M,SAAS,oBACZiN,OAAQvK,OAAa1C,SAAS,sBAC9B5G,QAASsJ,OAAa1C,SAAS,uBAC/BvG,MAAOiJ,KAAW,0BAA0B1C,SAAS,qBACrDoN,QAAS1K,OAAa1C,SAAS,uBAC/BmN,KAAMzK,OAAa1C,SAAS,qBAC5BlL,MAAO4N,OAAa1C,SAAS,uBA8ZlBwR,GAzZI,SAAC/Y,GAChB,IAAMuE,EAAWqB,cACXC,EAAUC,cAFU,EAGYzH,mBAAS,MAHrB,mBAGnBgX,EAHmB,KAGN2D,EAHM,KAIpB7c,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAChCG,EAA8BH,EAA9BG,UAAWC,EAAmBJ,EAAnBI,OAAQC,EAAWL,EAAXK,OAarB8Y,EAAsB,uCAAG,WAAO3U,GAAP,SAAArB,EAAA,sDAC3B8E,EAAQ6U,YAAYtY,GAAS4P,MAC3B,SAAAC,GACA,IAAM6E,EAAc7E,EAASyD,QAAQ,GAAGuB,SAAS3S,SACjDmW,EAAe3D,MAEf,SAAA3W,GACEtB,QAAQsB,MAAMA,MAPS,2CAAH,sDAkBxB,OAJJE,qBAAU,WACLiK,SAASC,eAAe,QAAQC,UAAUC,IAAI,YACjD,IAGM,kBAAC,IAAMnB,SAAP,KACI,kBAACoB,EAAA,OAAD,KAAQ,+CACR,kBAAC,EAAD,MAGA,yBAAKtO,UAAU,2CACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,iBAEP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,kBAACue,EAAD,CAAYjW,UAAW,OAAQD,MAAO,SACtC,yBAAKrI,UAAU,UACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,kBAACqU,GAAA,EAAD,CAAQhS,QAAQ,YAAY/B,KAAK,wBAAwBc,MAAM,WAA/D,kBAGC,IACD,kBAACiT,GAAA,EAAD,CAAQhS,QAAQ,YAAYjB,MAAM,aAAlC,YAMhB,yBAAKpB,UAAU,OACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,uBACA,kBAAC,KAAD,CACI4P,cAAe,CACf7J,YAAa,GACb8T,OAAQ,GACR/N,MAAO,GACPzF,MAAO,GACPL,QAAS,GACT+T,KAAM,GACNrY,MAAO,GACPsY,QAAS,IAET3K,iBAAkBA,GAClB3C,SAAQ,uCAAE,WAAOmD,EAAP,oBAAAlL,EAAA,yDAAiBmL,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,UACpB,MAAf2K,EADG,wDAIV5K,GAAc,GAJJ,kBAOAzM,EAAUwG,WAAW,SAASwE,IAA9B,eAAsCwB,EAAtC,CAA8C6K,iBAP9C,OAQNvO,IAAMkE,QAAQ,mCAAoC,CAC1C9K,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IAEduC,EAAQf,KAAK,oBAjBX,kDAmBFgC,IAAMpI,MAAN,UAAe,KAAM3B,SAAW,CAC5BmD,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IA1BZ,QA6BV6U,YAAW,WAEPzN,IACAD,GAAc,KACf,KAjCO,0DAAF,0DAsCP,gBACDD,EADC,EACDA,OACAS,EAFC,EAEDA,aAEAG,GAJC,EAGDF,aAHC,EAIDE,cACArB,EALC,EAKDA,QACAsB,EANC,EAMDA,OACAC,EAPC,EAODA,WAPC,OASL,kBAAC,KAAD,CAAMjE,SAAU4D,GACZ,yBAAKtQ,UAAU,OACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yCACX,yBAAKA,UAAU,uBACf,kBAAC,KAAD,CACIC,GAAG,cACHG,KAAK,OACL4E,KAAK,cACLhF,UACAoP,EAAQrJ,aAAe2K,EAAO3K,YACxB,4BACA,iBAEN8K,SAAUJ,EACV3D,MAAO+C,EAAO9J,YACd+K,OAAQH,IAEZ,kBAAC,GAAD,CACIvB,QAASA,EAAQrJ,YACjB3D,QAASsO,EAAO3K,cAEpB,2BACIgL,QAAQ,cACR/Q,UAAU,kBAFd,sBASJ,yBAAKA,UAAU,yCACX,yBAAK8Y,MAAM,yBACX,4BACI9Y,UACAoP,EAAQyK,QAAUnJ,EAAOmJ,OACnB,wCACA,6BAEN7U,KAAK,SACL6L,SAAUJ,EACV3D,MAAO+C,EAAOgK,OACd/I,OAAQH,GAER,0CACA,4BAAQ7D,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,WAEJ,0BAAMgM,MAAM,qBACZ,0BAAMA,MAAM,eACZ,kBAAC,GAAD,CACI1J,QAASA,EAAQyK,OACjBzX,QAASsO,EAAOmJ,SAEpB,2BAAOf,MAAM,gBAAb,YAIJ,yBAAK9Y,UAAU,+BACX,yBAAKA,UAAU,uBACf,kBAAC,KAAD,CACIC,GAAG,QACHG,KAAK,QACL4E,KAAK,QACLhF,UACAoP,EAAQyK,QAAUnJ,EAAOmJ,OACnB,4BACA,kBAENhJ,SAAUJ,EACV3D,MAAO+C,EAAO/D,MACdgF,OAAQH,IAEZ,kBAAC,GAAD,CACIvB,QAASA,EAAQtD,MACjB1J,QAASsO,EAAO5E,QAEpB,2BACIiF,QAAQ,QACR/Q,UAAU,kBAFd,WAQJ,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,uBACf,kBAAC,KAAD,CACIC,GAAG,QACHG,KAAK,OACL4E,KAAK,QACLhF,UACAoP,EAAQ/I,OAASqK,EAAOrK,MAClB,4BACA,kBAENwK,SAAUJ,EACV3D,MAAO+C,EAAOxJ,MACdyK,OAAQH,IAEZ,kBAAC,GAAD,CACIvB,QAASA,EAAQ/I,MACjBjE,QAASsO,EAAOrK,QAEpB,2BACI0K,QAAQ,QACR/Q,UAAU,kBAFd,WASJ,yBAAKA,UAAU,yCACX,yBAAKA,UAAU,uBACf,kBAAC,KAAD,CACIA,UACAoP,EAAQpJ,SAAW0K,EAAO1K,QACxB,4BACA,kBAEF3F,YAAY,kBACZ4O,KAAK,IACLjK,KAAK,UACL6L,SAAUJ,EACV3D,MAAO+C,EAAO7J,QACd8K,OAAQ,SAAChE,GACL6D,EAAW7D,GACX6N,EAAuB7N,EAAMlB,OAAOkB,UAG5C,kBAAC,GAAD,CACIsC,QAASA,EAAQpJ,QACjB5D,QAASsO,EAAO1K,YAKxB,yBAAKhG,UAAU,yCACX,yBAAK8Y,MAAM,yBACP,4BACI9Y,UACAoP,EAAQ4K,SAAWtJ,EAAOsJ,QACpB,wCACA,6BAENhV,KAAK,UACL6L,SAAU,SAAC/D,GACP2D,EAAa3D,GA7QrE,SAAC,GAAgB,IAAdlB,EAAa,EAAbA,OAItBpB,GAAYZ,EAAUgC,EAAOkB,OA0Q8CiO,CAAgBjO,IAEpBA,MAAO+C,EAAOmK,QACdlJ,OAAQH,GAER,2CACChP,EAAUsG,KAAI,SAAC+R,GAAD,OAAa,4BAAQlN,MAAOkN,EAAQ/Z,IAAK+Z,EAAQhV,UAEpE,0BAAM8T,MAAM,qBACZ,0BAAMA,MAAM,eACZ,kBAAC,GAAD,CACI1J,QAASA,EAAQ4K,QACjB5X,QAASsO,EAAOsJ,YAM5B,yBAAKha,UAAU,wCACX,yBAAK8Y,MAAM,yBACX,4BACI9Y,UACAoP,EAAQ1N,OAASgP,EAAOhP,MAClB,wCACA,6BAENsD,KAAK,QACL6L,SAAU,SAAC/D,GACP2D,EAAa3D,GAnSnE,SAAC,GAAgB,IAAdlB,EAAa,EAAbA,OACrBb,GAAYnB,EAAUgC,EAAOkB,OAmS2CkO,CAAclO,IAElBA,MAAO+C,EAAOnO,MACdoP,OAAQH,GAER,yCAEC/O,EAAOqG,KAAI,SAACvG,GAAD,OAAW,4BAAQoL,MAAOpL,EAAMzB,IAAKyB,EAAMsD,UAG3D,0BAAM8T,MAAM,qBACZ,0BAAMA,MAAM,eACZ,kBAAC,GAAD,CACI1J,QAASA,EAAQ1N,MACjBU,QAASsO,EAAOhP,UAMxB,yBAAK1B,UAAU,wCACX,yBAAK8Y,MAAM,yBACX,4BACI9Y,UACAoP,EAAQ1N,OAASgP,EAAOhP,MAClB,wCACA,6BAENsD,KAAK,OACL6L,SAAUJ,EACV3D,MAAO+C,EAAOkK,KACdjJ,OAAQH,GAEP9O,EAAOoG,KAAI,SAAC8R,GAAD,OAAU,4BAAQjN,MAAOiN,EAAK9Z,IAAK8Z,EAAK/U,UAExD,0BAAM8T,MAAM,qBACZ,0BAAMA,MAAM,eACZ,kBAAC,GAAD,CACI1J,QAASA,EAAQ2K,KACjB3X,QAASsO,EAAOqJ,SAOxB,yBAAK/Z,UAAU,iCACX,yBAAKA,UAAU,uBACX,kBAACwW,GAAA,EAAD,CACIC,WAAS,EACT+H,WAAS,EACTtc,OAAO,SACPjC,GAAG,UACHyN,MAAM,oBACN1I,KAAK,cAKjB,yBAAKhF,UAAU,kBACX,yBAAKA,UAAU,yBACX,4BACII,KAAK,QACLJ,UAAU,qBAFd,UAK8B,IAC9B,4BACII,KAAK,SACLJ,UAAU,mBAFd,gCA2BxD,kBAAC,IAAD,SCtPLye,GA3KE,WAAO,IAAD,EACO/a,mBAAS,IADhB,mBACZsG,EADY,KACL0U,EADK,KAGnBza,qBAAU,WACLiK,SAASC,eAAe,QAAQC,UAAUC,IAAI,UAC9C1E,MACH,IAEF,IAAMA,EAAU,uCAAG,sBAAAhF,EAAA,sEACTtB,EAAUwG,WAAW,SAC1BC,YAAW,SAACC,GACX,IAAMuP,EAAU,GAChBvP,EAAcE,SAAQ,SAACC,GACrBoP,EAAQnP,KAAKD,EAAIE,WAGnBsU,EAASpF,KACR5P,GATY,2CAAH,qDAYZ,OACI,kBAAC,IAAMwD,SAAP,KACI,kBAACoB,EAAA,OAAD,KAAQ,uDACR,kBAAC,EAAD,MAGA,yBAAKtO,UAAU,2CACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,iBAEP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,kBAACue,EAAD,CAAYjW,UAAW,OAAQD,MAAO,SACtC,yBAAKrI,UAAU,UACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aAEX,kBAACqU,GAAA,EAAD,CAAQhS,QAAQ,YAAYjB,MAAM,aAAlC,YAMhB,yBAAKpB,UAAU,OACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,aAEI,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aAEX,yBAAKA,UAAU,oBAGP,2BAAOC,GAAG,UAAUD,UAAU,qCAE1B,+BAEA,4BAAI,2BAAOI,KAAK,WAAWH,GAAG,cAC9B,2CACI,uCACA,qCACA,qCACA,oCACA,oCAEA,uCAEA,+BACC+J,EAAM/B,KAAI,SAACoS,GACR,OACA,wBAAI5S,IAAK4S,EAAKpa,IACV,4BAAI,2BAAOG,KAAK,WAAWJ,UAAU,eACrC,4BAAKqa,EAAKtU,aACV,4BAAKsU,EAAKrU,SACV,gCAAMqU,EAAKhU,OACX,4BAAKgU,EAAKvO,OACV,gCAAMuO,EAAK3Y,MAAX,KACA,4BAAI,uBAAGid,iBAAe,MAAMle,cAAY,UAAUO,MAAM,QAAO,4BAAQhB,UAAU,yBAAyB4e,aAAW,OAAOne,cAAY,QAAQD,cAAY,SAAS,0BAAMR,UAAU,wBACrL,4BAAI,uBAAG2e,iBAAe,MAAMle,cAAY,UAAUO,MAAM,UAAS,4BAAQhB,UAAU,wBAAwB4e,aAAW,SAASne,cAAY,QAAQD,cAAY,WAAW,0BAAMR,UAAU,yBAU9M,yBAAKA,UAAU,uBAiB/D,kBAAC,IAAD,OAIJ,yBAAK8Y,MAAM,aAAa7Y,GAAG,OAAO4e,SAAS,KAAK1e,KAAK,SAASS,kBAAgB,OAAOsW,cAAY,QAC7F,yBAAK4B,MAAM,gBACX,yBAAKA,MAAM,iBACP,yBAAKA,MAAM,gBACX,4BAAQ1Y,KAAK,SAAS0Y,MAAM,QAAQgG,eAAa,QAAQ5H,cAAY,QAAO,0BAAM4B,MAAM,6BAA6B5B,cAAY,UACjI,wBAAI4B,MAAM,2BAA2B7Y,GAAG,WAAxC,qBAEA,yBAAK6Y,MAAM,cACX,yBAAKA,MAAM,cACX,2BAAOA,MAAM,gBAAgB1Y,KAAK,OAAOC,YAAY,YAErD,yBAAKyY,MAAM,cAEX,2BAAOA,MAAM,gBAAgB1Y,KAAK,OAAOC,YAAY,YAErD,yBAAKyY,MAAM,cACX,8BAAU7J,KAAK,IAAI6J,MAAM,eAAezY,YAAY,0DAKpD,yBAAKyY,MAAM,iBACX,4BAAQ1Y,KAAK,SAAS0Y,MAAM,yBAAyB3X,MAAO,CAAC8D,MAAO,SAAU,0BAAM6T,MAAM,gCAA1F,kBAUR,yBAAKA,MAAM,aAAa7Y,GAAG,SAAS4e,SAAS,KAAK1e,KAAK,SAASS,kBAAgB,OAAOsW,cAAY,QAC7G,yBAAK4B,MAAM,gBACb,yBAAKA,MAAM,iBACL,yBAAKA,MAAM,gBACb,4BAAQ1Y,KAAK,SAAS0Y,MAAM,QAAQgG,eAAa,QAAQ5H,cAAY,QAAO,0BAAM4B,MAAM,6BAA6B5B,cAAY,UACjI,wBAAI4B,MAAM,2BAA2B7Y,GAAG,WAAxC,sBAEE,yBAAK6Y,MAAM,cAEd,yBAAKA,MAAM,sBAAqB,0BAAMA,MAAM,qCAA5C,kDAGC,yBAAKA,MAAM,iBACX,4BAAQ1Y,KAAK,SAAS0Y,MAAM,mBAAmB,0BAAMA,MAAM,gCAA3D,WACA,4BAAQ1Y,KAAK,SAAS0Y,MAAM,kBAAkBgG,eAAa,SAAQ,0BAAMhG,MAAM,+BAA/E,gBC/JO3J,GAVG,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAAShN,EAAc,EAAdA,QAC5B,OAAKgN,EAGDhN,EACK,yBAAKpC,UAAU,+BAA+BoC,GAEhD,yBAAKpC,UAAU,2BAAf,YALE,yBAAKA,UAAU,6B,8BCapB8B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+c,YAAa,CACXtB,UAAW,OACX7L,SAAU,QAEZoN,YAAa,CACXvB,UAA8B,EAAnBzb,EAAMiQ,QAAQ,QAkadgN,GA9ZM,WAAO,IAAD,EACSvb,mBAAS,IADlB,mBAClBwb,EADkB,KACPC,EADO,OAEazb,mBAAS,IAFtB,mBAElB0b,EAFkB,KAELC,EAFK,OAGS3b,mBAAS,SAHlB,mBAGP4b,GAHO,WAInB/c,EAAUT,KAChBmC,qBAAU,eAGVxB,QAAQC,IAAI,cAAe0c,GAE3B,IAAIlU,EAAUC,cAURoU,EAAyB,CAC7B,YACA,YACA,cAGIlQ,EAAmBC,OAAaC,MAAM,CAC1CiQ,SAAUlQ,OAEP1C,SAAS,2BAWZ6S,WAAYnQ,OAET1C,SAAS,2BACT8S,KACC,WACA,kBACA,SAAA5S,GAAK,OAAIA,GAASA,EAAMqI,MA3BZ,UA6BbuK,KACC,aACA,oCACA,SAAA5S,GAAK,OAAIA,GAASyS,EAAuBzC,SAAShQ,EAAM1M,SAE5DY,MAAOsO,OAAa1C,SAAS,4BAC7B+S,WAAYrQ,OAAa1C,SAAS,wBAClCgT,gBAAiBtQ,OAAa1C,SAAS,8BACvCiT,SAAUvQ,OAAa1C,SAAS,+BAChCkT,OAAQxQ,OAAa1C,SAAS,+BAGhBlF,qSAAY6J,kBAE5B,OACE,kBAAC,IAAMrE,SAAP,KACE,kBAAC,EAAD,MACA,yBAAKlN,UAAU,2CACb,kBAAC,EAAD,MAEI,yBAAKA,UAAU,iBACjB,yBAAKA,UAAU,gBACb,kBAAC,IAAD,MACA,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKuI,aAAW,cACd,wBAAIvI,UAAU,cACZ,wBAAIA,UAAU,mBAAkB,uBAAGM,KAAK,eAAR,cAChC,wBAAIN,UAAU,mBAAkB,uBAAGM,KAAK,KAAR,qBAItC,yBAAKN,UAAU,UACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,kBAACqU,GAAA,EAAD,CAAQhS,QAAQ,YAAY/B,KAAK,wBAAwBc,MAAM,WAA/D,eAGC,IACD,kBAACiT,GAAA,EAAD,CAAQzN,QAAS,kBAAMsE,EAAQ6U,UAAU1d,QAAQ,YAAYjB,MAAM,aAAnE,YAMR,yBAAKpB,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,kBAAC,KAAD,CACE4P,cAAe,CACb4P,cAAU7W,EACV8W,gBAAY9W,EACZ3H,MAAO,GACP2e,WAAY,GACZE,SAAU,GACVC,OAAQ,GACRF,gBAAiB,SAEnBvQ,iBAAkBA,EAClB3C,SAAQ,uCAAE,WAAOmD,EAAP,sBAAAlL,EAAA,yDAAiBmL,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,UAAhC,EAA2CS,cAA3C,SAENV,GAAc,GACI,KAAdoP,EAHE,yCAIG/S,IAAMpI,MAAM,wBAAyB,CAC1CwB,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,KAXR,UAaqB,KAAhByW,EAbL,yCAcGjT,IAAMpI,MAAM,oCAAqC,CACtDwB,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,KArBR,cAyBAyB,EAAO,CACTpJ,MAAO6O,EAAO7O,MACdgf,UAAWZ,EACXhf,KAAMyP,EAAO8P,WACbM,OAAQpQ,EAAOgQ,SACfK,QAASrQ,EAAO4P,WAAWza,KAC3Bya,WAAY5P,EAAO4P,WAAWza,KAC9BnE,IAAKqe,EACLY,OAAQK,SAAStQ,EAAOiQ,QACxB3P,QAAS9O,KAAK+O,MACdgQ,SAAU,EACVR,gBAAiB/P,EAAO+P,iBApCtB,UAuCAvc,EAAUwG,WAAW,WAAWwE,IAAIjE,GAvCpC,QAyCN2F,IACAD,GAAc,GACd3D,IAAMkE,QAAQ,8BAA+B,CAC3C9K,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IAlDN,kDAsDNwD,IAAMpI,MAAN,gBAAsB,CACpBwB,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IA7DN,0DAAF,0DAmEP,gBACCkH,EADD,EACCA,OACAS,EAFD,EAECA,aACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,cACAC,EALD,EAKCA,aACArB,EAND,EAMCA,QACAsB,EAPD,EAOCA,OACAC,EARD,EAQCA,WARD,OAUG,0BACEjE,SAAU4D,EACVM,QAAQ,uBAGR,yBAAK5Q,UAAU,OAEb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,cACb,kBAACqgB,GAAA,EAAD,CAAargB,UAAWuC,EAAQwc,aAC9B,kBAACvI,GAAA,EAAD,CACEC,WAAS,EACTxW,GAAG,QACH+E,KAAK,QACL0I,MAAM,eACNxL,OAAO,SACP4K,MAAO+C,EAAO7O,MACd6P,SAAUJ,EACVK,OAAQH,EACR5M,MAAO2M,EAAO1P,OAASoO,EAAQpO,MAC/B2V,WAAajG,EAAO1P,OAASoO,EAAQpO,OAAU0P,EAAO1P,WAK9D,yBAAKhB,UAAU,yCACb,yBAAKA,UAAU,cACb,kBAACqgB,GAAA,EAAD,CAAargB,UAAWuC,EAAQwc,aAC9B,kBAACvI,GAAA,EAAD,CACEC,WAAS,EACTxW,GAAG,SACH+E,KAAK,SACL0I,MAAM,SACNxL,OAAO,SACP4K,MAAO+C,EAAOiQ,OACdjP,SAAUJ,EACVK,OAAQH,EACR5M,MAAO2M,EAAOoP,QAAU1Q,EAAQ0Q,OAChCnJ,WAAajG,EAAOoP,QAAU1Q,EAAQ0Q,QAAWpP,EAAOoP,YAKhE,yBAAK9f,UAAU,yCACb,yBAAKA,UAAU,eACb,kBAACqgB,GAAA,EAAD,CAAargB,UAAWuC,EAAQwc,aAC9B,kBAACuB,GAAA,EAAD,CAAYvP,QAAQ,cAApB,eACA,kBAACwP,GAAA,EAAD,CACEC,QAAM,EACN/J,WAAS,EACT3J,MAAO+C,EAAO8P,WACd9O,SAAUJ,EACVK,OAAQH,EACR3L,KAAK,aACL/E,GAAG,aACH8D,MAAO2M,EAAOiP,YAAcvQ,EAAQuQ,YACpC,4BAAQ7S,MAAM,KACd,4BAAQA,MAAO,SAAf,SACA,4BAAQA,MAAO,SAAf,aAOR,yBAAK9M,UAAU,yCACb,yBAAKA,UAAU,eACb,kBAACqgB,GAAA,EAAD,CAAargB,UAAWuC,EAAQwc,aAC9B,kBAACuB,GAAA,EAAD,CAAYvP,QAAQ,mBAApB,qBACA,kBAACwP,GAAA,EAAD,CACEC,QAAM,EACN/J,WAAS,EACT3J,MAAO+C,EAAO+P,gBACd/O,SAAU,SAAC/D,GACT2D,EAAa3D,GACbrK,QAAQC,IAAI,UAAWoK,EAAMlB,OAAOkB,OACpCwS,EAAaxS,EAAMlB,OAAOkB,QAE5BgE,OAAQH,EACR3L,KAAK,kBACL/E,GAAG,kBACH8D,MAAO2M,EAAOkP,iBAAmBxQ,EAAQwQ,iBACzC,4BAAQ9S,MAAM,IAAd,4BACA,4BAAQA,MAAO,SAAf,eACA,4BAAQA,MAAO,SAAf,mBAOR,yBAAK9M,UAAU,yCACb,yBAAKA,UAAU,eACb,kBAACwW,GAAA,EAAD,CACEC,WAAS,EACTxW,GAAG,WACH+E,KAAK,WACL0I,MAAM,YACNxL,OAAO,SACP4K,MAAO+C,EAAOgQ,SACdhP,SAAUJ,EACVK,OAAQH,EACR5M,MAAO2M,EAAOmP,UAAYzQ,EAAQyQ,SAClClJ,WAAajG,EAAOmP,UAAYzQ,EAAQyQ,UAAanP,EAAOmP,cAQpE,yBAAK7f,UAAU,aAAamB,MAAO,CAACqN,QAAoC,UAA3BqB,EAAO+P,gBAA8B,QAAS,SACzF,2BAAO5f,UAAU,sBAAjB,sBAGA,2BACEC,GAAG,WACH+E,KAAK,WACL5E,KAAK,OACLyQ,SAAU,SAACG,GACTR,EACE,WACAQ,EAAMC,cAAcC,MAAM,KAG9BlR,UACEoP,EAAQoQ,UAAY9O,EAAO8O,SACvB,kCACA,oBAEN1O,OAAQH,IAGT,kBAAC,EAAD,CAAOnN,KAAMqM,EAAO2P,WACpB3P,EAAO2P,UAAY,kBAAC,EAAD,CAAahc,KAAMqM,EAAO2P,SAAU5b,OAAQyb,EAAgBta,UAAU,oBAC1F,kBAAC,GAAD,CACEqK,QAASA,EAAQoQ,SACjBpd,QAASsO,EAAO8O,YAIpB,yBAAKxf,UAAU,aAAamB,MAAO,CAACqN,QAAoC,UAA3BqB,EAAO+P,gBAA8B,QAAS,SACzF,2BAAO5f,UAAU,sBAAjB,sBAGA,2BACEC,GAAG,WACH+E,KAAK,WACL5E,KAAK,OACLyQ,SAAU,SAACG,GACTR,EACE,WACAQ,EAAMC,cAAcC,MAAM,KAG9BlR,UACEoP,EAAQoQ,UAAY9O,EAAO8O,SACvB,kCACA,oBAEN1O,OAAQH,IAGT,kBAAC,EAAD,CAAOnN,KAAMqM,EAAO2P,WACpB3P,EAAO2P,UAAY,kBAAC,EAAD,CAAahc,KAAMqM,EAAO2P,SAAU5b,OAAQyb,EAAgBta,UAAU,mBAC1F,kBAAC,GAAD,CACEqK,QAASA,EAAQoQ,SACjBpd,QAASsO,EAAO8O,YAKpB,yBAAKxf,UAAU,cACb,2BAAOA,UAAU,sBACd6P,EAAO8P,WAAa,UAAiB9P,EAAO8P,WAAa,QAAe,eAE3E,2BACE1f,GAAG,aACH+E,KAAK,aACL5E,KAAK,OACLyQ,SAAU,SAACG,GACTR,EACE,aACAQ,EAAMC,cAAcC,MAAM,KAG9BlR,UACEoP,EAAQqQ,YAAc/O,EAAO+O,WACzB,kCACA,oBAEN3O,OAAQH,IAIV,kBAAC,EAAD,CAAOnN,KAAMqM,EAAO4P,aACnB5P,EAAO4P,YAAc,kBAAC,EAAD,CAAajc,KAAMqM,EAAO4P,WAAY7b,OAAQub,EAAcpa,UAAS,mBAAc8K,EAAO8P,cAChH,kBAAC,GAAD,CACEvQ,QAASA,EAAQqQ,WACjBrd,QAASsO,EAAO+O,cAIpB,yBAAKzf,UAAU,cACb,kBAACqU,GAAA,EAAD,CAAQlD,SAAUZ,EAAcnP,MAAM,UAAUhB,KAAK,SAASiC,QAAQ,aAAtE,6BC5ZnBoe,GAAa,SAAC,GAMpB,IALLzf,EAKI,EALJA,MACAmP,EAII,EAJJA,QACAqP,EAGI,EAHJA,SACAU,EAEI,EAFJA,QACAQ,EACI,EADJA,WAEA,OACE,yBAAK1gB,UAAU,yCACb,yBAAKA,UAAU,QAEb,yBAAKA,UAAU,+CACG,UAAf0gB,EACC,2BACEC,UAAQ,EACRC,OAAM,wBAAmBpB,GACzBxf,UAAU,0BAEV,4BAAQa,IAAKqf,EAAS9f,KAAK,cAC3B,4BAAQS,IAAKqf,EAAS9f,KAAK,cAN7B,gDAUA,2BACEugB,UAAQ,EACRC,OAAM,wBAAmBpB,GACzBxf,UAAU,0BAEV,4BAAQa,IAAI,YAAYT,KAAK,cAC7B,4BAAQS,IAAI,YAAYT,KAAK,eAN/B,qDAWJ,yBAAKJ,UAAU,aACb,wBAAIA,UAAU,cAAcgB,GAE5B,kBAACqT,GAAA,EAAD,CAAQjT,MAAM,UAAUiB,QAAQ,aAAhC,QAEU,IACV,kBAACgS,GAAA,EAAD,CAAQjT,MAAM,YAAYiB,QAAQ,aAAlC,UAGA,uBAAGrC,UAAU,aACX,2BAAOA,UAAU,cACf,kBAAC,KAAD,CAAQiX,SAAO,GAAE9G,SCjCzBrO,ICoES+e,aAHS,SAACnf,GAAD,MAAY,CAClCof,WAAYpf,EAAMqf,UAEoB,GAAzBF,EA3EI,SAAC,GAAqC,IAAnCG,EAAkC,EAAlCA,gBAAiBF,EAAiB,EAAjBA,WAQrC,OANA7c,qBAAU,WAER+c,MACC,CAACA,IAIF,kBAAC,IAAM9T,SAAP,KACE,kBAAC,EAAD,MACA,yBAAKlN,UAAU,2CACb,kBAAC,EAAD,MAEE,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBAEjB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKuI,aAAW,cACd,wBAAIvI,UAAU,cACZ,wBAAIA,UAAU,mBAAkB,uBAAGM,KAAK,eAAR,cAChC,wBAAIN,UAAU,mBAAkB,uBAAGM,KAAK,KAAR,mBAItC,yBAAKN,UAAU,UACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,kBAACqU,GAAA,EAAD,CAAQhS,QAAQ,YAAY/B,KAAK,0BAA0Bc,MAAM,WAAjE,qBAQR,yBAAKpB,UAAU,OACZ8gB,EAAWrY,QACV,kBAAC,GAAD,MAEEqY,EAAW/c,MACb,kBAAC,GAAD,CAAUA,MAAO+c,EAAW/c,MAAQ,kCAGhC,kBAAC,WAAD,KACG+c,EAAWG,YAAY/N,OACtB4N,EAAWG,YAAYhZ,KAAI,gBAAGiZ,EAAH,EAAGA,YAAa1B,EAAhB,EAAgBA,SAAUU,EAA1B,EAA0BA,QAASQ,EAAnC,EAAmCA,WAAnC,OACzB,kBAAC,GAAD,CAAY1f,MAAOkgB,EAAa1B,SAAUA,EAAU3e,IAAKqf,EAASQ,WAAYA,OAG9E,kBAAC,GAAD,CAAUrP,KAAK,qED7CvBtP,aAAW,SAACC,GAAD,MAAY,CACvC+c,YAAa,CACXtB,UAAW,OACX7L,SAAU,QAEZoN,YAAa,CACXvB,UAA8B,EAAnBzb,EAAMiQ,QAAQ,SA4TdkP,GAxTK,WAAO,IAAD,EACUzd,mBAAS,IADnB,gCAEcA,mBAAS,KAFvB,gCAGUA,mBAAS,UAHnB,mBAIlBnB,GAJkB,UAIRT,MAEVsf,EAAS,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGIC,EAAQ,CACZ,KAAM,KAAM,KAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAG/Hpd,qBAAU,eAKV,IAAIiH,EAAUC,cAGRkE,EAAmBC,OAAaC,MAAM,CAE1CqK,UAAWtK,OAAa1C,SAAS,yBACjC0U,SAAUhS,OAAa1C,SAAS,wBAChCvG,MAAOiJ,OAAa1C,SAAS,4BAC7BwP,MAAO9M,OAAa1C,SAAS,oCAC7BkT,OAAQxQ,OAAa1C,SAAS,sBAC9B0P,KAAMhN,OAAa1C,SAAS,sBAG9B,OACE,kBAAC,IAAMM,SAAP,KACE,kBAAC,EAAD,MACA,yBAAKlN,UAAU,2CACb,kBAAC,EAAD,MAEI,yBAAKA,UAAU,iBACjB,yBAAKA,UAAU,gBACb,kBAAC,IAAD,MACA,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKuI,aAAW,cACd,wBAAIvI,UAAU,cACZ,wBAAIA,UAAU,mBAAkB,uBAAGM,KAAK,eAAR,cAChC,wBAAIN,UAAU,mBAAkB,uBAAGM,KAAK,KAAR,2BAItC,yBAAKN,UAAU,UACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,kBAACqU,GAAA,EAAD,CAAQhS,QAAQ,YAAY/B,KAAK,wBAAwBc,MAAM,WAA/D,sBAGC,IACD,kBAACiT,GAAA,EAAD,CAAQzN,QAAS,kBAAMsE,EAAQ6U,UAAU1d,QAAQ,YAAYjB,MAAM,aAAnE,YAMR,yBAAKpB,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,kBAAC,KAAD,CACE4P,cAAe,CACbgK,UAAW,GACX0H,SAAU,GACVC,UAAW,GACXzB,OAAQ,GACR1D,MAAO,GACPE,KAAM,IAERjN,iBAAkBA,EAClB3C,SAAQ,uCAAE,WAAOmD,EAAP,sBAAAlL,EAAA,6DAAiBmL,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,UAAhC,EAA2CS,cAA3C,SAENV,GAAc,GAGR1F,EAAO,CACXwP,UAAW/J,EAAO+J,UAChB0H,SAAUzR,EAAOyR,SACjBC,UAAW1R,EAAO0R,UAClBzB,OAAQK,SAAStQ,EAAOiQ,QACxB1D,MAAOvM,EAAOuM,MACd/V,MAAOwJ,EAAOxJ,MACdiW,KAAMzM,EAAOyM,MAZX,SAeAjZ,EAAUwG,WAAW,gBAAgBwE,IAAIjE,GAfzC,OAiBN2F,IACAD,GAAc,GACd3D,IAAMkE,QAAQ,qCAAsC,CAClD9K,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IA1BN,kDA8BNwD,IAAMpI,MAAN,gBAAsB,CACpBwB,SAAU,YACV6G,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACX3I,cAAU8E,IArCN,0DAAF,0DA2CP,gBACCkH,EADD,EACCA,OACAS,EAFD,EAECA,aAGAG,GALD,EAGCF,aAHD,EAICC,cAJD,EAKCC,cACArB,EAND,EAMCA,QACAsB,EAPD,EAOCA,OACAC,EARD,EAQCA,WARD,OAUG,0BACEjE,SAAU4D,EACVM,QAAQ,uBAGR,yBAAK5Q,UAAU,OAEb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,cACb,kBAACqgB,GAAA,EAAD,CAAargB,UAAWuC,EAAQwc,aAC9B,kBAACvI,GAAA,EAAD,CACEC,WAAS,EACTxW,GAAG,YACH+E,KAAK,YACL0I,MAAM,YACNxL,OAAO,SACP4K,MAAO+C,EAAO+J,UACd/I,SAAUJ,EACVK,OAAQH,EACR5M,MAAO2M,EAAOkJ,WAAaxK,EAAQwK,UACnCjD,WAAajG,EAAOkJ,WAAaxK,EAAQwK,WAAclJ,EAAOkJ,eAMtE,yBAAK5Z,UAAU,yCACb,yBAAKA,UAAU,cACb,kBAACqgB,GAAA,EAAD,CAAargB,UAAWuC,EAAQwc,aAC9B,kBAACvI,GAAA,EAAD,CACEC,WAAS,EACTxW,GAAG,WACH+E,KAAK,WACL0I,MAAM,WACNxL,OAAO,SACP4K,MAAO+C,EAAOyR,SACdzQ,SAAUJ,EACVK,OAAQH,EACR5M,MAAO2M,EAAO4Q,UAAYlS,EAAQkS,SAClC3K,WAAajG,EAAO4Q,UAAYlS,EAAQkS,UAAa5Q,EAAO4Q,cAKpE,yBAAKthB,UAAU,yCACb,yBAAKA,UAAU,cACb,kBAACqgB,GAAA,EAAD,CAAargB,UAAWuC,EAAQwc,aAC9B,kBAACvI,GAAA,EAAD,CACEC,WAAS,EACTxW,GAAG,YACH+E,KAAK,YACL0I,MAAM,aACNxL,OAAO,SACP4K,MAAO+C,EAAO0R,UACd1Q,SAAUJ,EACVK,OAAQH,OAKhB,yBAAK3Q,UAAU,yCACb,yBAAKA,UAAU,cACb,kBAACqgB,GAAA,EAAD,CAAargB,UAAWuC,EAAQwc,aAC9B,kBAACvI,GAAA,EAAD,CACEC,WAAS,EACTxW,GAAG,SACH+E,KAAK,SACL0I,MAAM,SACNxL,OAAO,SACP4K,MAAO+C,EAAOiQ,OACdjP,SAAUJ,EACVK,OAAQH,EACR5M,MAAO2M,EAAOoP,QAAU1Q,EAAQ0Q,OAChCnJ,WAAajG,EAAOoP,QAAU1Q,EAAQ0Q,QAAWpP,EAAOoP,YAMhE,yBAAK9f,UAAU,yCACb,yBAAKA,UAAU,cACb,kBAACqgB,GAAA,EAAD,CAAargB,UAAWuC,EAAQwc,aAC9B,kBAACvI,GAAA,EAAD,CACEC,WAAS,EACTxW,GAAG,QACH+E,KAAK,QACL0I,MAAM,eACNxL,OAAO,SACP4K,MAAO+C,EAAOxJ,MACdwK,SAAUJ,EACVK,OAAQH,EACR5M,MAAO2M,EAAOrK,OAAS+I,EAAQ/I,MAC/BsQ,WAAajG,EAAOrK,OAAS+I,EAAQ/I,OAAUqK,EAAOrK,WAM9D,yBAAKrG,UAAU,yCACb,yBAAKA,UAAU,eACb,kBAACqgB,GAAA,EAAD,CAAargB,UAAWuC,EAAQwc,aAC9B,kBAACuB,GAAA,EAAD,CAAYvP,QAAQ,cAApB,SACA,kBAACwP,GAAA,EAAD,CACEC,QAAM,EACN/J,WAAS,EACT3J,MAAO+C,EAAO8P,WACd9O,SAAUJ,EACVK,OAAQH,EACR3L,KAAK,QACL/E,GAAG,QACH8D,MAAO2M,EAAO0L,OAAShN,EAAQgN,OAE/B,4BAAQtP,MAAM,KACbsU,EAAOnZ,KAAI,SAAAuZ,GAAC,OAAK,4BAAQ1U,MAAO0U,GAAIA,UAO7C,yBAAKxhB,UAAU,yCACb,yBAAKA,UAAU,eACb,kBAACqgB,GAAA,EAAD,CAAargB,UAAWuC,EAAQwc,aAC9B,kBAACuB,GAAA,EAAD,CAAYvP,QAAQ,cAApB,QACA,kBAACwP,GAAA,EAAD,CACEC,QAAM,EACN/J,WAAS,EACT3J,MAAO+C,EAAO8P,WACd9O,SAAUJ,EACVK,OAAQH,EACR3L,KAAK,OACL/E,GAAG,OACH8D,MAAO2M,EAAO4L,MAAQlN,EAAQkN,MAE9B,4BAAQxP,MAAM,KACbuU,EAAMpZ,KAAI,SAAAwZ,GAAE,OAAK,4BAAQ3U,MAAO2U,GAAKA,WAUhD,yBAAKzhB,UAAU,cACb,kBAACqU,GAAA,EAAD,CAAQjT,MAAM,UAAUhB,KAAK,SAASiC,QAAQ,aAA9C,mCE5R1Bqf,GAAS,SAAA1f,GAAK,MAAK,CACvBC,KAAM,CAEJoF,aAAc,QAEhBqK,QAAS,CACP9L,QAAS,GAEX+L,MAAO,CACLC,SAAU,MAEZC,cAAe,CACbrD,QAAS,OACTsD,WAAY,UAEdC,OAAQ,CACNC,YAAa,IAEfE,QAAS,CACPC,eAAgB,cAkLLV,gBAAWiQ,GAAXjQ,EA9KI,WACjB,IAAMlP,EAxBiB,CACvBN,KAAM,CAEJoF,aAAc,QAEhBqK,QAAS,CACP9L,QAAS,GAEX+L,MAAO,CACLC,SAAU,MAEZC,cAAe,CACbrD,QAAS,OACTsD,WAAY,UAEdC,OAAQ,CACNC,YAAa,IAEfE,QAAS,CACPC,eAAgB,aAIK,EAEazO,mBAAS,IAFtB,mBAEhB0O,EAFgB,KAEJuP,EAFI,OAG6Bje,mBAAS,IAHtC,mBAGhB2O,EAHgB,KAGIC,EAHJ,OAIe5O,mBAAS,IAJxB,mBAIhB6O,EAJgB,KAIHC,EAJG,OAKC9O,mBAAS,GALV,mBAKhB+O,EALgB,KAKVC,EALU,KAOzBtJ,IAAMnF,WAAU,WACd2d,MACA,IAEA,IAyCMA,EAAY,uCAAG,sBAAAjd,EAAA,sEACbtB,EAAUwG,WAAW,gBAC1BC,YAAW,SAACC,GACX,IAAMuP,EAAU,GAChBvP,EAAcE,SAAQ,SAACC,GACrBoP,EAAQnP,KAAKD,EAAIE,WAEnB3H,QAAQC,IAAI,UAAW4W,GACvBqI,EAAcrI,KAEb5P,GAVgB,2CAAH,qDAclB,OACE,kBAAC,IAAD,CACE1J,UAAWuC,EAAQN,MAEnB,kBAAC0Q,GAAA,EAAD,CAAa3S,UAAWuC,EAAQmP,SAC9B,kBAAC,KAAD,KACE,yBAAK1R,UAAWuC,EAAQoP,OACtB,kBAACiB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWnN,QAAQ,YACjB,kBAACoN,GAAA,EAAD,CACEC,QAASZ,EAAmBa,SAAWd,EAAWc,OAClD9R,MAAM,UACN+R,cACEd,EAAmBa,OAAS,GAC5Bb,EAAmBa,OAASd,EAAWc,OAEzCrC,SAzEI,SAAAG,GAEtB,IAAIqB,EAGFA,EADErB,EAAMpF,OAAOqH,QACMb,EAAWnK,KAAI,SAAAmL,GAAS,OAAIA,EAAUnT,MAEtC,GAGvBqS,EAAsBD,OAkER,kBAACU,GAAA,EAAD,kBACA,kBAACA,GAAA,EAAD,iBACA,kBAACA,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,eAKJ,kBAACM,GAAA,EAAD,KAEGjB,EAAWkB,MAAM,EAAGf,GAAatK,KAAI,SAAAmL,GAAS,OAC7C,kBAACN,GAAA,EAAD,CACE9S,UAAWuC,EAAQgR,SACnBC,OAAK,EACL/L,IAAK2L,EAAUnT,GACfwT,UAAwD,IAA9CpB,EAAmBqB,QAAQN,EAAUnT,KAE/C,kBAAC8S,GAAA,EAAD,CAAWnN,QAAQ,YACjB,kBAACoN,GAAA,EAAD,CACEC,SAAuD,IAA9CZ,EAAmBqB,QAAQN,EAAUnT,IAC9CmB,MAAM,UACNyP,SAAU,SAAAG,GAAK,OArFb,SAACA,EAAO/Q,GAC9B,IAAM0T,EAAgBtB,EAAmBqB,QAAQzT,GAC7C2T,EAAwB,IAEL,IAAnBD,EACFC,EAAwBA,EAAsBC,OAAOxB,EAAoBpS,GAC9C,IAAlB0T,EACTC,EAAwBA,EAAsBC,OAAOxB,EAAmBiB,MAAM,IACrEK,IAAkBtB,EAAmBa,OAAS,EACvDU,EAAwBA,EAAsBC,OAAOxB,EAAmBiB,MAAM,GAAI,IACzEK,EAAgB,IACzBC,EAAwBA,EAAsBC,OAC5CxB,EAAmBiB,MAAM,EAAGK,GAC5BtB,EAAmBiB,MAAMK,EAAgB,KAI7CrB,EAAsBsB,GAoEiBE,CAAgB9C,EAAOoC,EAAUnT,KACpD6M,MAAM,UAGV,kBAACiG,GAAA,EAAD,KACE,yBAAK/S,UAAWuC,EAAQsP,eAMtB,kBAACoC,GAAA,EAAD,CAAY5R,QAAQ,SAAS+Q,EAAUwG,aAG3C,kBAAC7G,GAAA,EAAD,KAAYK,EAAUkO,UACtB,kBAACvO,GAAA,EAAD,MAEA,kBAACA,GAAA,EAAD,KAAYK,EAAU/M,OACtB,kBAAC0M,GAAA,EAAD,KAAYK,EAAUgJ,OACtB,kBAACrJ,GAAA,EAAD,KAAYK,EAAUkJ,eA8BpC,kBAAC9H,GAAA,EAAD,CAAaxU,UAAWuC,EAAQ2P,SAC9B,kBAACuC,GAAA,EAAD,CACEC,UAAU,MACVC,MAAOvC,EAAWc,OAClB0B,aAtHiB,SAAC5D,EAAOyB,GAC/BC,EAAQD,IAsHFoC,oBAnHwB,SAAA7D,GAC9BwB,EAAexB,EAAMpF,OAAOkB,QAmHtB2F,KAAMA,EACNF,YAAaA,EACbuC,mBAAoB,CAAC,EAAG,GAAI,WC9MbxF,OAAaC,MAAM,CAC1CvK,KAAMsK,OACHoK,IAAI,EAAG,cACPC,IAAI,GAAI,aACR/M,SAAS,oBACZiN,OAAQvK,OAAa1C,SAAS,sBAC9B5G,QAASsJ,OAAa1C,SAAS,uBAC/BvG,MAAOiJ,KAAW,0BAA0B1C,SAAS,qBACrDyN,KAAM/K,OAAa1C,SAAS,oBAC5BmN,KAAMzK,OAAa1C,SAAS,qBAC5BlL,MAAO4N,OAAa1C,SAAS,qBAC7Bd,MAAOwD,OAAaxD,MAAM,iBAAiBc,SAAS,cAkCvCiV,OA/Bf,WAAuB,IAAD,EACSne,mBAAS,IADlB,gCAEUA,oBAAS,IAFnB,mBASpB,OAToB,UAIpBO,qBAAU,eAMR,yBAAKjE,UAAU,QACb,kBAACsO,EAAA,OAAD,KACE,6DAGF,kBAAC,EAAD,MACA,yBAAKtO,UAAU,2CACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAiBgB,MAAM,UAAUC,OAAO,YACxC,yBAAKjB,UAAU,6BACb,kBAAC,GAAD,OAEF,kBAAC,EAAD,QAGJ,kBAAC,IAAD,QCiJS8hB,GAxKA,WACb,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,KAGE,kBAAC,IAAD,CACEC,OAAK,EACLte,KAAK,IACLue,OAAQ,SAAC3c,GAAD,OACN,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,oDAEF,kBAAC,GAAD,UAKN,kBAAC,IAAD,CAAO5B,KAAK,cACV,kBAAC,GAAD,OAMF,kBAAC,IAAD,CAAOse,OAAK,EAACte,KAAK,cAChB,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,2BACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,kCACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,6BACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,yBACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,uBACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,2BACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,yBACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,yBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,sBACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,4BACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,uBACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,6BACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,2BACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,sBACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,0BACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,mBAAmBiR,UAAW+J,KAE1C,kBAAC,IAAD,CAAOhb,KAAK,kBACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,2BACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,0BACV,kBAAC,GAAD,OA2DF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,GAAD,U,4DC5LJwe,GAAe,CACnBC,aAAc,GACdC,WAAY,ICFRF,GAAe,CACnBG,WAAY,GACZC,UAAW,I,SCFPJ,GAAe,CACnB/G,MAAO,CAAC,CAAEhP,IAAK,KAAMlH,KAAM,eAAgB,CAAEkH,IAAK,MAAOlH,KAAM,UAAW,CAAEkH,IAAK,KAAMlH,KAAM,gBAAkB,CAAEkH,IAAK,KAAMlH,KAAM,SAAU,CAAEkH,IAAK,KAAMlH,KAAM,eAAgB,CAAEkH,IAAK,MAAOlH,KAAM,2BAA2B,CAAEkH,IAAK,MAAOlH,KAAM,OAAS,CAAEkH,IAAK,QAASlH,KAAM,UACjRpD,OAAQ,GACRC,OAAQ,GACRF,UAAW,GACXH,KAAK,GACL8gB,iBAAiB,GCAJC,GALKC,aAAgB,CAClChhB,KDQa,WAAyC,IAA/BE,EAA8B,uDAAtBugB,GAAc/hB,EAAQ,uCACrD,OAAQA,EAAOE,MACb,IEb2B,kBFczB,OAAO,eACFsB,EADL,CAEEC,UAAU,aAAKzB,EAAOyB,aAExB,IEhBsB,eFiBtB,OAAO,eACFD,EADL,CAEEE,OAAQ1B,EAAO0B,SAEjB,IEtBsB,eFuBtB,OAAO,eACFF,EADL,CAEEG,OAAQ3B,EAAO2B,SAEjB,IExBwB,iBFyBtB,OAAO,eACFH,EADL,CAEEF,KAAMtB,EAAOsB,KACb8gB,iBAAiB,IAEvB,QACE,OAAO5gB,IC/BXuX,QHEa,WAAyC,IAA/BvX,EAA8B,uDAAtBugB,GAAc/hB,EAAQ,uCACrD,OAAQA,EAAOE,MACb,IIVyB,gBJWvB,OAAO,eACFsB,EADL,CAEEwgB,aAAchiB,EAAOuiB,UAEzB,QACE,OAAO/gB,IGTXwb,OFCa,WAAyC,IAA/Bxb,EAA8B,uDAAtBugB,GAAc/hB,EAAQ,uCACrD,OAAQA,EAAOE,MACb,IGTwB,eHUtB,OAAO,eACFsB,EADL,CAEE0gB,WAAYliB,EAAOuiB,UAEvB,QACE,OAAO/gB,MIVPghB,GAAgB,CACpBjb,IAAK,OACLnE,aACAqf,UAAW,CAAC,SAERC,GAAc,CAACC,MACfC,GAAYC,KAAe,WAAf,EAAmBH,IAE/BI,GAAmBC,aAAeP,GAAeH,IAEjDW,GAAQC,aAAYH,GAAkBI,aAAQN,KAC9CO,GAAYC,aAAaJ,ICG/BK,IAASvB,OACP,kBAAC,IAAMwB,WAAP,KACE,mBAbQ,WACV,OACE,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,KAAD,CAAaza,QAAS,KAAM4a,UAAWA,KACvC,kBAAC,IAAD,CAAeI,cAAc,GAC3B,kBAAC,GAAD,UAQJ,OAEFvV,SAASC,eAAe,W","file":"static/js/main.97157978.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  return (\n    // <!-- Main Navbar-->\n    <header className=\"header\">\n      <nav className=\"navbar\">\n        {/* <!-- Search Box-->? */}\n        <div className=\"search-box\">\n          <button className=\"dismiss\">\n            <i className=\"icon-close\"></i>\n          </button>\n          <form id=\"searchForm\" action=\"#!\" role=\"search\">\n            <input\n              type=\"search\"\n              placeholder=\"What are you looking for...\"\n              className=\"form-control\"\n            />\n          </form>\n        </div>\n        <div className=\"container-fluid\">\n          <div className=\"navbar-holder d-flex align-items-center justify-content-between\">\n            {/* <!-- Navbar Header--> */}\n            <div className=\"navbar-header\">\n              {/* <!-- Navbar Brand --> */}\n              <a\n                href=\"index.html\"\n                className=\"navbar-brand d-none d-sm-inline-block\"\n              >\n                <div className=\"brand-text d-none d-lg-inline-block\">\n                  <strong> GloryPlus  Dashboard</strong>\n                </div>\n                <div className=\"brand-text d-none d-sm-inline-block d-lg-none\">\n                  <strong>BD</strong>\n                </div>\n              </a>\n              {/* <!-- Toggle Button--> */}\n              <a id=\"toggle-btn\" href=\"#!!\" className=\"menu-btn active\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </a>\n            </div>\n            {/* <!-- Navbar Menu --> */}\n            <ul className=\"nav-menu list-unstyled d-flex flex-md-row align-items-md-center\">\n              {/* <!-- Search--> */}\n              <li className=\"nav-item d-flex align-items-center\">\n                <a id=\"search\" href=\"#!!\">\n                  <i className=\"icon-search\"></i>\n                </a>\n              </li>\n              {/* <!-- Notifications--> */}\n              <li className=\"nav-item dropdown\">\n                <a\n                  id=\"notifications\"\n                  rel=\"nofollow\"\n                  data-target=\"#!\"\n                  href=\"#!!\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                  className=\"nav-link\"\n                >\n                  <i className=\"fa fa-bell-o\"></i>\n                  <span className=\"badge bg-red badge-corner\">12</span>\n                </a>\n                <ul aria-labelledby=\"notifications\" className=\"dropdown-menu\">\n                  <li>\n                    <a rel=\"nofollow\" href=\"#!\" className=\"dropdown-item\">\n                      <div className=\"notification\">\n                        <div className=\"notification-content\">\n                          <i className=\"fa fa-envelope bg-green\"></i>You have 6\n                          new messages\n                        </div>\n                        <div className=\"notification-time\">\n                          <small>4 minutes ago</small>\n                        </div>\n                      </div>\n                    </a>\n                  </li>\n                  <li>\n                    <a rel=\"nofollow\" href=\"#!\" className=\"dropdown-item\">\n                      <div className=\"notification\">\n                        <div className=\"notification-content\">\n                          <i className=\"fa fa-twitter bg-blue\"></i>You have 2\n                          followers\n                        </div>\n                        <div className=\"notification-time\">\n                          <small>4 minutes ago</small>\n                        </div>\n                      </div>\n                    </a>\n                  </li>\n                  <li>\n                    <a rel=\"nofollow\" href=\"#!\" className=\"dropdown-item\">\n                      <div className=\"notification\">\n                        <div className=\"notification-content\">\n                          <i className=\"fa fa-upload bg-orange\"></i>Server\n                          Rebooted\n                        </div>\n                        <div className=\"notification-time\">\n                          <small>4 minutes ago</small>\n                        </div>\n                      </div>\n                    </a>\n                  </li>\n                  <li>\n                    <a rel=\"nofollow\" href=\"#!\" className=\"dropdown-item\">\n                      <div className=\"notification\">\n                        <div className=\"notification-content\">\n                          <i className=\"fa fa-twitter bg-blue\"></i>You have 2\n                          followers\n                        </div>\n                        <div className=\"notification-time\">\n                          <small>10 minutes ago</small>\n                        </div>\n                      </div>\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      rel=\"nofollow\"\n                      href=\"#!\"\n                      className=\"dropdown-item all-notifications text-center\"\n                    >\n                      <strong>view all notifications </strong>\n                    </a>\n                  </li>\n                </ul>\n              </li>\n              {/* <!-- Messages                        --> */}\n              <li className=\"nav-item dropdown\">\n                <a\n                  id=\"messages\"\n                  rel=\"nofollow\"\n                  data-target=\"#!\"\n                  href=\"#!\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                  className=\"nav-link\"\n                >\n                  <i className=\"fa fa-envelope-o\"></i>\n                  <span className=\"badge bg-orange badge-corner\">10</span>\n                </a>\n                <ul aria-labelledby=\"notifications\" className=\"dropdown-menu\">\n                  <li>\n                    <a\n                      rel=\"nofollow\"\n                      href=\"#!\"\n                      className=\"dropdown-item d-flex\"\n                    >\n                      <div className=\"msg-profile\">\n                        <img\n                          src=\"img/avatar-1.jpg\"\n                          alt=\"...\"\n                          className=\"img-fluid rounded-circle\"\n                        />\n                      </div>\n                      <div className=\"msg-body\">\n                        <h3 className=\"h5\">Jason Doe</h3>\n                        <span>Sent You Message</span>\n                      </div>\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      rel=\"nofollow\"\n                      href=\"#!\"\n                      className=\"dropdown-item d-flex\"\n                    >\n                      <div className=\"msg-profile\">\n                        <img\n                          src=\"img/avatar-2.jpg\"\n                          alt=\"...\"\n                          className=\"img-fluid rounded-circle\"\n                        />\n                      </div>\n                      <div className=\"msg-body\">\n                        <h3 className=\"h5\">Frank Williams</h3>\n                        <span>Sent You Message</span>\n                      </div>\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      rel=\"nofollow\"\n                      href=\"#!\"\n                      className=\"dropdown-item d-flex\"\n                    >\n                      <div className=\"msg-profile\">\n                        <img\n                          src=\"img/avatar-3.jpg\"\n                          alt=\"...\"\n                          className=\"img-fluid rounded-circle\"\n                        />\n                      </div>\n                      <div className=\"msg-body\">\n                        <h3 className=\"h5\">Ashley Wood</h3>\n                        <span>Sent You Message</span>\n                      </div>\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      rel=\"nofollow\"\n                      href=\"#!\"\n                      className=\"dropdown-item all-notifications text-center\"\n                    >\n                      <strong>Read all messages </strong>\n                    </a>\n                  </li>\n                </ul>\n              </li>\n              {/* <!-- Languages dropdown    --> */}\n              <li className=\"nav-item dropdown\">\n                <a\n                  id=\"languages\"\n                  rel=\"nofollow\"\n                  data-target=\"#!\"\n                  href=\"#!\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                  className=\"nav-link language dropdown-toggle\"\n                >\n                  <i className=\"fa fa-user \"></i>\n                  <span className=\"d-none d-sm-inline-block\">Profile</span>\n                </a>\n                <ul aria-labelledby=\"languages\" className=\"dropdown-menu\">\n                  <li>\n                    <a\n                      rel=\"nofollow\"\n                      href=\"dashboard/profile\"\n                      className=\"dropdown-item\"\n                    >\n                      <i className=\"fa fa-user \"></i>\n                      View profile\n                    </a>\n                  </li>\n                  <li>\n                    <a rel=\"nofollow\" href=\"/\" className=\"dropdown-item\">\n                      <i className=\"fa fa-sign-out\"></i>\n                      Logout\n                    </a>\n                  </li>\n                </ul>\n              </li>\n              {/* <!-- Logout    --> */}\n              {/* <li className=\"nav-item\">\n                <a href=\"login.html\" className=\"nav-link logout\">\n                  <span className=\"d-none d-sm-inline\">Logout</span>\n                  <i className=\"fa fa-sign-out\"></i>\n                </a>\n              </li> */}\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { Fragment } from \"react\";\n\nconst pageHeader = ({ title, currpg }) => {\n  return (\n    <Fragment>\n      <header className=\"page-header\">\n        <div className=\"container-fluid\">\n          <h2 className=\"no-margin-bottom\">{title}</h2>\n        </div>\n      </header>\n      <div className=\"breadcrumb-holder container-fluid\">\n        <ul className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <a href=\"/dashboard\">Home</a>\n          </li>\n          <li className=\"breadcrumb-item active\">{currpg}</li>\n        </ul>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default pageHeader;\n","import React from \"react\";\n\nconst footer = () => {\n  return (\n    <footer className=\"main-footer\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <p style={{ color: \"#ffffff\" }}>\n              GloryPlus &copy; {new Date().getFullYear()}{\" \"}\n            </p>\n          </div>\n          <div className=\"col-sm-6 text-right\">\n            <p style={{ color: \"#ffffff\" }}>Version 1.0</p>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\nexport default footer;\n","import React from \"react\";\nimport { useSelector } from 'react-redux';\n\nconst SideBar = () => {\n\n  const user = useSelector(state => state.user);\n  const { countries, states, cities } = user;\n  return (\n    // <!-- Side Navbar -->\n    <nav className=\"side-navbar\">\n      {/* <!-- Sidebar Header--> */}\n      <div className=\"sidebar-header d-flex align-items-center\">\n        <a href=\"dashboard/profile\">\n          <div className=\"avatar\">\n            <img\n              src=\"images/user.png\"\n              alt=\"...\"\n              className=\"img-fluid rounded-circle\"\n            />\n          </div>\n        </a>\n        <div className=\"title\">\n          <h1 className=\"h4\" style={{ color: \"#fff\" }}>\n           {/* chisom dike */}\n          </h1>\n          <p>Super Admin</p>\n        </div>\n      </div>\n\n      <ul className=\"list-unstyled\">\n        <li id=\"home\">\n          <a href=\"/dashboard\">\n            {\" \"}\n            <i className=\"fa fa-fire\"></i> Dashboard{\" \"}\n          </a>\n        </li>\n        <li id=\"branch\">\n          <a href=\"#branchDropdown\" aria-expanded=\"false\" data-toggle=\"collapse\">\n            <i className=\"icon-padnote\"></i>Branches\n          </a>\n          <ul id=\"branchDropdown\" className=\"collapse list-unstyled\">\n            <li>\n              <a href=\"/dashboard/branch/create\">Create New Branch</a>\n            </li>\n            <li>\n              <a href=\"/dashboard/branches\">List of Branches</a>\n            </li>\n          </ul>\n        </li>\n\n        <li id=\"cell\">\n          <a href=\"#cellDropdown\" aria-expanded=\"false\" data-toggle=\"collapse\">\n            <i className=\"fa fa-home\"></i>  Cell\n          </a>\n          <ul id=\"cellDropdown\" className=\"collapse list-unstyled\">\n            <li>\n              <a href=\"/dashboard/cell/create\">Create Cell</a>\n            </li>\n            <li>\n              <a href=\"/dashboard/cells\">List of Cells</a>\n            </li>\n          </ul>\n        </li>\n\n\n        <li id=\"livestream\">\n          <a\n            href=\"#tablesDropdown\"\n            aria-expanded=\"false\"\n            data-toggle=\"collapse\"\n          >\n            <i className=\"fa fa-video-camera\"></i>  Livestream\n          </a>\n          <ul id=\"tablesDropdown\" className=\"collapse list-unstyled\">\n            <li>\n              <a href=\"/dashboard/livestream\">Create Livestream</a>\n            </li>\n          </ul>\n        </li>\n        <li id=\"gpa\">\n          <a\n            href=\"#chartsDropdown\"\n            aria-expanded=\"false\"\n            data-toggle=\"collapse\"\n          >\n            <i className=\"fa fa-certificate\"></i> GPA\n          </a>\n          <ul id=\"chartsDropdown\" className=\"collapse list-unstyled\">\n            <li>\n              <a href=\"/dashboard/gpa/create\">Create Course</a>\n            </li>\n            <li>\n              <a href=\"/dashboard/gpa/view\">Course List</a>\n            </li>\n          </ul>\n        </li>\n        <li id=\"members\">\n          <a href=\"#formsDropdown\" aria-expanded=\"false\" data-toggle=\"collapse\">\n            <i className=\"icon-padnote\"></i>Members\n          </a>\n          <ul id=\"formsDropdown\" className=\"collapse list-unstyled\">\n            <li>\n              <a href=\"/dashboard/member/newuser\">Create Admin Panel User</a> \n            </li>\n\n            <li>\n              <a href=\"/dashboard/first-timers\">First Timer</a> {/** i dont think there should be  */}\n            </li>\n\n            <li>\n              <a href=\"/dashboard/members\">List of Members</a>\n            </li>\n          </ul>\n        </li>\n        <li id=\"gallery\">\n          <a\n            href=\"#componentsDropdown\"\n            aria-expanded=\"false\"\n            data-toggle=\"collapse\"\n          >\n            <i className=\"icon-page\"></i>Gallery\n          </a>\n          <ul id=\"componentsDropdown\" className=\"collapse list-unstyled\">\n            <li>\n              <a href=\"/dashboard/gallery/create\">Create Gallery</a>\n            </li>\n            <li>\n              <a href=\"/dashboard/gallery/view\">View Gallery</a>\n            </li>\n          </ul>\n        </li>\n        <li id=\"event\">\n          <a href=\"#pagesDropdown\" aria-expanded=\"false\" data-toggle=\"collapse\">\n            <i className=\"icon-interface-windows\"></i>Event\n          </a>\n          <ul id=\"pagesDropdown\" className=\"collapse list-unstyled\">\n            <li>\n              <a href=\"/dashboard/event/create\">Create Event</a>\n            </li>\n            <li>\n              <a href=\"/dashboard/event/view\">View Events</a>\n            </li>\n          </ul>\n        </li>\n        <li id=\"media\">\n          <a href=\"#mediaDropdown\" aria-expanded=\"false\" data-toggle=\"collapse\">\n            <i className=\"icon-interface-windows\"></i>Media\n          </a>\n          <ul id=\"mediaDropdown\" className=\"collapse list-unstyled\">\n            <li>\n              <a href=\"/dashboard/media/sermon/create\">Upload Sermon</a>\n            </li>\n            <li>\n              <a href=\"/dashboard/event/view\">View Sermons</a>\n            </li>\n          </ul>\n        </li>\n        <li id=\"tithe\">\n          <a href=\"#titheDropdown\" aria-expanded=\"false\" data-toggle=\"collapse\">\n            <i className=\"icon-interface-windows\"></i>Tithe Records\n          </a>\n          <ul id=\"titheDropdown\" className=\"collapse list-unstyled\">\n            <li>\n              <a href=\"/dashboard/tithe/create\">Upload Tithe Record</a>\n            </li>\n            <li>\n              <a href=\"/dashboard/tithes/view\">View Tithe Records</a>\n            </li>\n          </ul>\n        </li>\n        <li>\n          <a\n            href=\"#TestimonialDropdown\"\n            aria-expanded=\"false\"\n            data-toggle=\"collapse\"\n          >\n            <i className=\"icon-interface-windows\"></i>Testimony\n          </a>\n          <ul id=\"TestimonialDropdown\" className=\"collapse list-unstyled\">\n            <li>\n              <a href=\"#!\">View Testimony</a>\n            </li>\n          </ul>\n        </li>\n      </ul>\n      <span className=\"heading\">Extras</span>\n      <ul className=\"list-unstyled\">\n        <li>\n          <a href=\"#\">\n            {\" \"}\n            <i className=\"icon-flask\"></i>Pastor's Corner{\" \"}\n          </a>\n        </li>\n        <li>\n          <a href=\"#\">\n            {\" \"}\n            <i className=\"icon-screen\"></i>Email{\" \"}\n          </a>\n        </li>\n        <li>\n          <a href=\"#\">\n            {\" \"}\n            <i className=\"icon-mail\"></i>Report Issue{\" \"}\n          </a>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default SideBar;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n     margin: 20\n\n    },\n  }));\n\n/**\n * \n * @param {*} severity 'error' | 'warning' | 'info' | 'success'\n * @param {*} variant 'filled' | 'outlined' \n * \n */\nconst CustomAlert = ({ message, variant, severity }) => {\n    const classes = useStyles();\n    return (\n        <Card className={classes.root}>\n            <Alert variant={variant} severity={severity}>\n               {message}\n            </Alert>\n        </Card>\n    );\n}\n\nexport default CustomAlert;","\r\nimport * as firebase from 'firebase';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBHTowqYB2dkw3QKmrrwrref8qgVztPkdI\",\r\n    authDomain: \"gloryplusintl-acd3f.firebaseapp.com\",\r\n    databaseURL: \"https://gloryplusintl-acd3f.firebaseio.com\",\r\n    projectId: \"gloryplusintl-acd3f\",\r\n    storageBucket: \"gloryplusintl-acd3f.appspot.com\",\r\n    messagingSenderId: \"243368275163\",\r\n    appId: \"1:243368275163:web:980fb542cdf08e2ed9f0fe\",\r\n    measurementId: \"G-C6V3MT26VB\"\r\n  \r\n  };\r\n  console.log(firebase)\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  const auth = firebase.auth();\r\n  const firestore = firebase.firestore();\r\n  const storage = firebase.storage();\r\n\r\n  export {\r\n    auth,\r\n    firestore,\r\n    storage,\r\n  };","import { useState, useEffect } from \"react\";\nimport { storage } from '../../partials';\n\nconst useStorage = ({file, path}) => {\n    const [url, setUrl] = useState(null);\n    const [progress, setProgress] = useState(0);\n    const [error, setError] = useState(null);\n\n    useEffect(()=>{\n        const storageRef = storage.ref(path);\n        // firebase.storage().ref(`images/${newDirectory}/${fileName}`)\n        storageRef.put(file).on('state_changed', (snap)=> { \n          let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n          setProgress(percentage);\n        }, (err) =>{\n          setError(err);\n        }, async () => {\n            const filePath = await storageRef.getDownloadURL();\n            setUrl(filePath);\n        })\n    },[file]);\n   return { progress, url, error}\n\n}\n\n\nexport default useStorage;","import React, { useEffect } from 'react';\nimport { useStorage } from '../../hooks';\nimport './style.css';\n\nconst ProgressBar = ({file, directory, setUrl}) => {\n    const path = `${directory}/${file.name}`;\n    const { error, url, progress } = useStorage({file, path});\n    useEffect(()=>{\n        setUrl(url);\n    },[setUrl, url]);\n\n    return (\n        <div className=\"col-md-2\">\n            <div className=\"meter animate\">\n                <span style={{width: `${progress}%`}}> {Math.ceil(progress)}% </span>\n            </div>\n        </div>\n            \n    )\n}\n\nexport default ProgressBar;","import React from 'react';\n\n\nconst InfoWindow = (props) => {\n    const { place } = props;\n    const infoWindowStyle = {\n      position: 'absolute',\n      bottom: 10,\n      left: '-75px',\n      width: 220,\n      backgroundColor: 'white',\n      boxShadow: '0 2px 7px 1px rgba(0, 0, 0, 0.3)',\n      padding: 10,\n      fontSize: 14,\n      zIndex: 100,\n    };\n  \n    return (\n      <div style={infoWindowStyle}>\n        <div style={{ fontSize: 14 }}>\n          Coordinator: {place.coordinator}\n        </div>\n        <div style={{ fontSize: 12 }}>\n          <span style={{ color: 'grey' }}>\n            Address: {place.address}\n            {' '}\n          </span>\n          \n          <span style={{ color: 'lightgrey' }}>\n            {String.fromCharCode(9733).repeat(5 - Math.floor(5))}\n          </span>\n        </div>\n        <div style={{ fontSize: 12, color: 'grey' }}>\n          phone: {place.phone}\n        </div>\n        <div style={{ fontSize: 12, color: 'green' }}>\n          Open\n        </div>\n      </div>\n    );\n  };\n  \n\n  export default InfoWindow;","import React, { useState } from 'react';\n\nimport InfoWindow from '../infowindow';\n\nconst HomeCellPin = ({  setHomeCell, cell_id, place }) => {\n    const [show, setVisibilty] = useState(false);\n    return (\n    <div className=\"pin\" style={{zIndex: 2 }}>\n      {show && <InfoWindow place={place} />} \n      <img src=\"img/cell.png\" style={{ width: '30px', height: \"30px\"}} onClick={() => setHomeCell(cell_id)} onMouseEnter={() => setVisibilty(true)} onMouseLeave={() => setVisibilty(false)} />\n    </div>\n  );\n\n}\n\nexport default HomeCellPin;","import React, { useRef } from 'react';\nimport GoogleMapReact from 'google-map-react'\nimport './map.css'\nimport lodash from 'lodash';\nimport HomeCellPin from '../HomeCellPin';\nimport './map.css'\n\n\n\nconst UserPin = ({ text,  }) => (\n    <div className=\"pin\" style={{zIndex: 5 }}>\n\n      <img src=\"img/userpin.png\" style={{ width: '50px', height: \"50px\"}} />\n    </div>\n)\n\n// Return map bounds based on list of places\nconst getMapBounds = (map, maps, places) => {\n    const bounds = new maps.LatLngBounds();\n    console.log('places', places)\n    places.forEach((place) => {\n      bounds.extend(new maps.LatLng(\n        place.lat,\n        place.lng,\n      ));\n    });\n    return bounds;\n  };\n  \n  // Re-center map when resizing the window\n  const bindResizeListener = (map, maps, bounds) => {\n    maps.event.addDomListenerOnce(map, 'idle', () => {\n      maps.event.addDomListener(window, 'resize', () => {\n        map.fitBounds(bounds);\n      });\n    });\n  };\n  \n  // Fit map to its bounds after the api is loaded\n  const apiIsLoaded = (map, maps, places) => {\n      \n    // Get bounds by our places\n    const bounds = getMapBounds(map, maps, places);\n    // Fit map to bounds\n    map.fitBounds(bounds);\n    // Bind the resize listener\n    bindResizeListener(map, maps, bounds);\n  };\n\n \n\n\n  const Marker = ({ show, place }) => {\n    const markerStyle = {\n      border: '1px solid white',\n      borderRadius: '50%',\n      height: 10,\n      width: 10,\n      backgroundColor: show ? 'red' : 'blue',\n      cursor: 'pointer',\n      zIndex: 10,\n    };\n\n    return (\n        <>\n          <div style={markerStyle} />\n          {/* {show && <InfoWindow place={place} />} */}\n        </>\n      );\n    };\n\n\n    const Map = ({ locations, zoomLevel, currentLocation, setHomeCell }) => {\n    return (\n      <div className=\"map\" style={{marginBottom: '20px' }}>\n          <h2 className=\"map-h2\"> GloryPlus Home cell Locations </h2>\n\n          <div className=\"google-map\">\n          {!lodash.isEmpty(locations) && (\n          <GoogleMapReact\n              bootstrapURLKeys={{ key: process.env.REACT_APP_MAPKEY, libraries: ['visualization'] }}\n              center={currentLocation}\n              defaultZoom={zoomLevel}\n               yesIWantToUseGoogleMapApiInternals={true} \n          >\n\n                <UserPin\n                      key=\"xoxo\"\n                  lat={currentLocation.lat}\n                  lng={currentLocation.lng}\n                />\n             \n              {locations.map((location, index) => (\n           \n                  <HomeCellPin\n                  key={index}\n                  lat={location.lat}\n                  lng={location.lng}\n                  setHomeCell={setHomeCell}\n                  place={location}\n                  show={false}\n                  cell_id={location.id}\n                  />\n                 \n              ))}\n              \n          </GoogleMapReact>\n          )}\n          </div>\n      </div>\n    )\n    }\n\n    export default Map\n\n","import React from \"react\";\n\nconst breadcrumb = ({ crumb, crumbItem }) => {\n  return (\n    <div className=\"col-12\">\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\"><a href=\"#\">{crumbItem}</a></li>\n          <li className=\"breadcrumb-item\"><a href=\"#\">{crumb}</a></li>\n        </ol>\n      </nav>\n    </div>\n\n  );\n};\n\nexport default breadcrumb;\n","import React from \"react\";\n\nclass Thumb extends React.Component {\n  state = {\n    loading: false,\n    thumb: undefined,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.file) {\n      return;\n    }\n\n    this.setState({ loading: true }, () => {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({ loading: false, thumb: reader.result });\n      };\n\n      reader.readAsDataURL(nextProps.file);\n    });\n  }\n\n  render() {\n    const { file } = this.props;\n    const { loading, thumb } = this.state;\n\n    if (!file) {\n      return null;\n    }\n\n    if (loading) {\n      return <p>loading...</p>;\n    }\n\n    return (\n      <img\n        src={thumb}\n        alt={file.name}\n        className=\"img-thumbnail mt-2\"\n        height={200}\n        width={200}\n      />\n    );\n  }\n}\n\nexport default Thumb;\n","import _ from 'lodash';\nimport { firestore } from '../partials';\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(process.env.REACT_APP_MAPKEY);\n \nGeocode.setLanguage(\"en\");\n \nexport const geocode = Geocode;\nexport const convertAddressToLatLng = (address) => {\n\n  Geocode.fromAddress(address).then(\n    response => {\n    const coordinates = response.results[0].geometry.location;\n    console.log('coords', coordinates);\n      // dispatch\n    },\n    error => {\n      console.error(error);\n    }\n  );\n};\n\n\nexport const subscribeCollectionById = (params, Callback) => {\n  const { docId, collectionName } = params;\n  if (!docId) {\n    return null;\n  }\n  try {\n    return firestore\n      .collection(collectionName)\n      .doc(docId)\n      .onSnapshot(\n        (doc) => {\n          if (!doc.exists) {\n            if (Callback) {\n              Callback(null);\n            }\n            return;\n          }\n          const data = {\n            id: doc.id,\n            ...doc.data(),\n          };\n          if (Callback) {\n            Callback(data);\n          }\n        },\n        (error) => {\n          console.log('error', error);\n        },\n      );\n  } catch (error) {\n    console.log('error', error);\n  \n  }\n  return null;\n};\n\nexport const subscribeCollection =async (collectionName, Callback) => {\n\n  try {\n    return firestore\n      .collection(collectionName)\n      .onSnapshot(\n        (docs) => {\n          if (Callback) {\n            Callback(docs);\n          }\n        },\n        (error) => {\n          console.log('error', error);\n        },\n      );\n  } catch (error) {\n    console.log('error', error);\n  \n  }\n  return null;\n};\n\nexport const handleError = (error) => {\n  console.log('Error Subscribing: ', error);\n};\n\nexport const fetchCells = async (dispatch) => {\n  await firestore.collection('cells')\n        .onSnapshot((querySnapshot) => {\n          let cells = [];\n          querySnapshot.forEach((doc) => {\n            cells.push(doc.data());\n          });\n          cells = _.orderBy(cells, ['name'],['asc'])\n         dispatch({ type: 'SET_CELLS', cells });\n        }, handleError);\n}\n\nexport const fetchCountry = async (dispatch) => {\n  await firestore.collection('countries')\n        .onSnapshot((querySnapshot) => {\n          let countries = [];\n          querySnapshot.forEach((doc) => {\n            countries.push(doc.data());\n          });\n          countries = _.orderBy(countries, ['name'],['asc'])\n         dispatch({ type: 'FETCH_COUNTRIES', countries });\n        }, handleError);\n}\n\nexport const fetchStates = async (dispatch,id) => {\n  const query = await firestore.collection('states').where('country_id','==', id).get();\n  let states = [];\n  if(!query.empty){\n    query.docs.map((snapshot)=> states.push(snapshot.data()));\n    states = _.orderBy(states, ['name'],['asc']);\n    dispatch({ type: 'FETCH_STATES', states });  \n   }\n}\n\nexport const fetchCities = async (dispatch, id) => {\n  const query = await firestore.collection('cities').where('state_id','==', id).get();\n  let cities = [];\n  if(!query.empty){\n    query.docs.map((snapshot)=> cities.push(snapshot.data()));\n    cities = _.orderBy(cities, ['name'],['asc']);\n    dispatch({ type: 'FETCH_CITIES', cities });  \n   }\n}\n \n","import React, { useState, useEffect  } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport serializeForm from 'form-serialize';\nimport { useHistory } from 'react-router-dom';\nimport _ from 'lodash';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { CustomAlert, auth, firestore } from \"../../partials\";\nimport { fetchCountry, fetchCells } from \"../../util\";\nimport { EmailRounded } from \"@material-ui/icons\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    callFetchCountry();\n    callFetchCells();\n  },[]);\n\n  const callFetchCountry = async () => {\n    await fetchCountry(dispatch);\n  }\n  const callFetchCells = async () => {\n    await fetchCells(dispatch);\n  }\n\n\n    const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const loginValues = serializeForm(e.target, { hash: true });\n      const { email, password } = loginValues;\n      console.log('email', email);\n  \n      const res = await auth.signInWithEmailAndPassword(email,password);\n      const { user: { uid } } = res;\n      const doc = await firestore.collection('users').doc(uid).get();\n      const user = doc.data();\n      dispatch({type: 'USER_LOGGED_IN', user})\n      history.push(\"/dashboard\");\n    } catch (error) {\n      console.log('error logging in', error);\n      toast.error(`${error}`, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      \n    }\n  };\n\n  return (\n    <div className=\"container-fluid px-3\">\n      <div className=\"row min-vh-100\">\n        <div className=\"col-md-5 col-lg-6 col-xl-4 px-lg-5 d-flex align-items-center\">\n          <div className=\"w-100 py-5\">\n            \n            <div className=\"text-center\">\n              <img\n                src=\"img/brand/logo.png\"\n                alt=\"...\"\n                style={{ maxWidth: \"6rem\" }}\n                className=\"img-fluid mb-4\"\n              />\n              <h1 className=\"display-4 mb-3\">Admin Panel</h1>\n              {(errorMessage !== \"\") ? ( <CustomAlert severity=\"error\" message={errorMessage} variant=\"filled\" />) : null}\n            </div>\n            <form className=\"form-validate\" onSubmit={handleLogin}>\n              <div className=\"form-group\">\n                <label>Email Address</label>\n                <input\n                  name=\"email\"\n                  type=\"email\"\n                  autocomplete=\"off\"\n                  required\n                  data-msg=\"Please enter your email\"\n                  className=\"input-material\"\n                />\n              </div>\n              <div className=\"form-group mb-4\">\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <label>Password</label>\n                  </div>\n                  <div className=\"col-auto\">\n                    <a href=\"#!\" className=\"form-text small text-muted\">\n                      Forgot password?\n                    </a>\n                  </div>\n                </div>\n                <input\n                  name=\"password\"\n                  type=\"password\"\n                  required\n                  data-msg=\"Please enter your password\"\n                  className=\"input-material\"\n                />\n              </div>\n\n              <input\n                className=\"btn btn-lg btn-block btn-primary mb-3\"\n                type=\"submit\"\n                value=\"Sign in\"\n              />\n                \n              \n              \n            </form>\n          </div>\n        </div>\n        <div className=\"col-12 col-md-7 col-lg-6 col-xl-8 d-none d-lg-block\">\n          {/* <!-- Image--> */}\n          <div\n            style={{\n              backgroundImage:\n                \"url(images/gloryplus.png)\",\n            }}\n            className=\"bg-cover h-100 mr-n3\"\n          ></div>\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react'\n\nexport const GrowthCard = ({ title, icon }) => {\n    return (\n        <React.Fragment>\n            <div className=\"col-lg-4 col-md-4 col-sm-12 col-xs-12\">\n                <div className=\"card info-card info-success\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Growth</h5>\n                        <div className=\"info-card-text\">\n                            <h3>142,739</h3>\n                            <span className=\"info-card-helper\">{title}</span>\n                        </div>\n                        <div className=\"info-card-icon\">\n                            <i className=\"material-icons\">{icon}</i>\n                        </div>\n                    </div>\n                    <div id=\"sparkline-bar-2\"></div>\n                </div>\n            </div>\n\n\n        </React.Fragment>\n    )\n}\nexport const RecentUsers = ({ name, location }) => {\n    return (\n        <React.Fragment>\n            <li className=\"trending-up\">\n                <span className=\"browser-icon\">\n                <i className=\"fa fa-user\"></i></span>{\" \"}{name}\n                <span className=\"browser-stat\">{\" \"}<i className=\"material-icons\">location_on</i>{location}</span>\n            </li>\n\n\n        </React.Fragment>\n    )\n}\n\nexport const Reports = ({ title, report }) => {\n    return (\n        <React.Fragment>\n\n            <li className=\"report-item report-danger\">\n                <div className=\"report-icon\"><i className=\"material-icons\">error_outline</i></div>\n                <div className=\"report-text\">{title}\n                    <span>{report}</span>\n                </div>\n                <div className=\"report-helper\">6h ago</div>\n            </li>\n        </React.Fragment>\n    )\n}\n\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Header, SideBar, PageHeaderTitle, Footer } from \"../../partials\";\nimport {Bar, Pie, Line } from 'react-chartjs-2';\nimport { GrowthCard, RecentUsers, Reports } from \"./Card\";\n\nclass dashboard extends React.Component {\n   state = {\n     bar:{\n    labels: ['January', 'February', 'March',\n             'April', 'May'],\n    datasets: [\n      {\n        label: 'FirstTimer',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: [65, 59, 80, 81, 56]\n      },\n    ]\n  },\n    pie:{\n      labels: ['Teens', 'Children', 'Members','Pastors', 'Workers'],\n      datasets: [\n        {\n          label: 'Rainfall',\n          backgroundColor: [\n            '#B21F00',\n            '#C9DE00',\n            '#2FDE00',\n            '#00A6B4',\n            '#6800B4'\n          ]\n          ,\n          hoverBackgroundColor: [\n          '#501800',\n          '#4B5000',\n          '#175000',\n          '#003350',\n          '#35014F'\n          ],\n          data: [65, 59, 160, 21, 56]\n        }\n      ]\n    },\n\n    attendance: {\n      labels: ['January', 'February', 'March',\n               'April', 'May'],\n      datasets: [\n        {\n          label: 'Members',\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: [65, 59, 80, 81, 56]\n        }\n      ]\n    }\n  }\n\n  componentDidMount() {\n    document.getElementById(\"home\").classList.add(\"active\");\n  }\n  render() {\n    return (\n      <div className=\"page\">\n        <Helmet>\n          <title>Dashboard</title>\n        </Helmet>\n        <Header />\n       \n\n        <div className=\"page-content d-flex align-items-stretch\">\n          <SideBar />\n\n          <div className=\"content-inner\">\n           \n            <PageHeaderTitle title=\"Dashboard\" />\n\n        <div className=\"page-content\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <h2 className=\"page-title\"></h2>\n                {/* <a href=\"#\" className=\"btn btn-text-secondary float-right\">Get Info</a>\n                <a href=\"#\" className=\"btn btn-text-danger float-right m-r-sm\">Print</a> */}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-lg-12 col-md-12\">\n                <div className=\"row\">\n                  <GrowthCard title={\"New Users\"} icon={\"person\"} />\n                  <GrowthCard title={\"Cell Location\"} icon={\"location_on\"} />\n                  <GrowthCard title={\"Church Locations\"} icon={\"location_city\"} />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-lg-4\" style={{ backgroundColor: '#fff', marginBottom: '20px'}}>\n                  <Bar\n                    data={this.state.bar}\n                    options={{\n                      title:{\n                        display:true,\n                        text:\"Mvp\",\n                        fontSize:20\n                      },\n                      legend:{\n                        display:true,\n                        position:'right'\n                      }\n                    }}\n                  />\n                </div>  \n                <div className=\"col-lg-4\" style={{ backgroundColor: '#fff', marginBottom: '20px',borderLeftColor: \"#212529\", borderLeftWidth: '0.5px', borderLeftStyle:\"dashed\"}}>\n                  <Pie\n                    data={this.state.pie}\n                    options={{\n                      title:{\n                        display:true,\n                        text:'Divisions in Church',\n                        fontSize:20\n                      },\n                      legend:{\n                        display:true,\n                        position:'right'\n                      }\n                    }}\n                  />\n                </div>\n                <div className=\"col-lg-4\" style={{ backgroundColor: '#fff', marginBottom: '20px', borderLeftColor: \"#212529\", borderLeftWidth: '0.5px', borderLeftStyle:\"dashed\" }}>\n                  <Line\n                    data={this.state.attendance}\n                    options={{\n                      title:{\n                        display:true,\n                        text:'Church Attendance per month',\n                        fontSize:20\n                      },\n                      legend:{\n                        display:true,\n                        position:'right'\n                      }\n                    }}\n                  />\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-lg-8\">\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title\">Reports</h5>\n                      <div className=\"card-info\">\n                        <a href=\"#\" className=\"btn btn-xs btn-text-dark\">\n                          See all\n                        </a>\n                      </div>\n                      <ul className=\"report-list list-unstyled\">\n                        <Reports\n                          title={\"reports on gpa for Ikeja,Lagos Branch\"}\n                          report={\n                            \"This is a report on the ongoing gpa for session .....\"\n                          }\n                        />\n                        <Reports\n                          title={\n                            \"reports on the just lunch new branch in Garki Abuja\"\n                          }\n                          report={\"This is a report regarding GPI new branch.....\"}\n                        />\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-4\">\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title\">Recent Users</h5>\n                      <div className=\"card-info\">\n                        <a href=\"#\" className=\"btn btn-xs btn-text-dark\">\n                          <i className=\"material-icons\">refresh</i>\n                        </a>\n                      </div>\n                      <ul className=\"list-unstyled browser-list\">\n                        <RecentUsers location={\"Lagos\"} name={\"John Smart\"} />\n                        <RecentUsers location={\"Abuja\"} name={\"Elemson Ifeanyi\"} />\n                        <RecentUsers location={\"PH\"} name={\"Chisom Dike\"} />\n                      </ul>\n                      <a href=\"#\" className=\"btn btn-text-secondary float-right\">\n                        Details\n                      </a>\n                    </div>\n                  </div>\n                </div>\n            </div>\n          </div>\n      </div>\n  <Footer />\n            {/* <!-- Dashboard Header Section    --> */}\n          </div>\n        </div>\n        {/* CLOSE SIDE BAR */}\n      </div>\n    );\n  }\n}\n\nexport default dashboard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import PropTypes from \"prop-types\";\n\nclass contact extends React.Component {\n  componentDidMount() {\n    //add class to the body tag on page load\n    document.getElementById(\"page-body\").classList.add(\"signup-page\");\n  }\n  render() {\n    return (\n      <div className=\"fp-page\">\n        <div className=\"fp-box col-md-4 col-md-offset-4\">\n          <div className=\"logo\">\n            <Link to=\"#\">\n              <b>Glory Plus Admin</b>\n            </Link>\n            {/* <small>Admin BootStrap Based - Material Design</small> */}\n          </div>\n          <div className=\"card\">\n            <div className=\"body\">\n              <form id=\"forgot_password\" method=\"POST\">\n                <div className=\"msg\">\n                  Pease fill the details below .. we will get back to you as\n                  soon as possible.\n                </div>\n\n                <div className=\"input-group\">\n                  <span className=\"input-group-addon\">\n                    <i className=\"material-icons\">person</i>\n                  </span>\n                  <div className=\"form-line\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"name\"\n                      placeholder=\"Full Name\"\n                      required\n                      autofocus\n                    />\n                  </div>\n                </div>\n\n                <div className=\"input-group\">\n                  <span className=\"input-group-addon\">\n                    <i className=\"material-icons\">phone</i>\n                  </span>\n                  <div className=\"form-line\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"phone\"\n                      placeholder=\"Phone Number\"\n                      required\n                      autofocus\n                    />\n                  </div>\n                </div>\n\n                <div className=\"input-group\">\n                  <span className=\"input-group-addon\">\n                    <i className=\"material-icons\">email</i>\n                  </span>\n                  <div className=\"form-line\">\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      required\n                      autofocus\n                    />\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <div className=\"form-line\">\n                    <textarea\n                      rows=\"2\"\n                      className=\"form-control no-resize auto-growth\"\n                      placeholder=\"Please pen down your thoughts here...\"\n                    ></textarea>\n                  </div>\n                </div>\n\n                <button\n                  className=\"btn btn-block btn-lg btn-primary waves-effect\"\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n\n                <div className=\"row m-t-20 m-b--5 align-center\">\n                  <Link to=\"/\">Sign In!</Link>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// login.propTypes = {};\n\nexport default contact;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport \"./notfound.css\";\n// import { Link } from \"react-router-dom\";\nimport { Header, SideBar, PageHeaderTitle, Footer } from \"../../partials\";\n// import Content from \"../main\";\nconst Notfound = () => {\n  // componentDidMount() {\n  //   document.getElementById(\"home\").classList.add(\"active\");\n  // }\n\n  return (\n    <div className=\"page notfound\">\n      <Helmet>\n        <title>404</title>\n      </Helmet>\n      {/* HEADER PART */}\n      <Header />\n      {/* CLOSE HEADER PART */}\n\n      {/* SIDER BAR PART */}\n      <div className=\"page-content d-flex align-items-stretch\">\n        <SideBar />\n\n        <div className=\"content-inner\">\n          {/* <!-- Page Header--> */}\n          <PageHeaderTitle title=\"Dashboard\" currpg=\"404\" />\n\n          {/* <!-- Dashboard Counts Section--> */}\n          <section className=\"dashboard-counts no-padding-bottom \">\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <div className=\"error-template\">\n                    <h1>Oops!</h1>\n                    <h2>404 Not Found</h2>\n                    <div className=\"error-details\">\n                      Sorry, an error has occured, Requested page not found!\n                    </div>\n                    <div className=\"error-actions\">\n                      <a href=\"/dashboard\" className=\"btn btn-primary btn-lg\">\n                        <span className=\"fa fa-home\"></span> Take Me Home{\" \"}\n                      </a>\n                      {/* <a href=\"#!\" className=\"btn btn-default btn-lg\">\n                        <span className=\"fa fa-envelope\"></span> Contact Support{\" \"}\n                      </a> */}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n          <Footer />\n          {/* <!-- Dashboard Header Section    --> */}\n        </div>\n      </div>\n      {/* CLOSE SIDE BAR */}\n    </div>\n  );\n};\n\nexport default Notfound;\n","import React from \"react\";\n\nconst FormError = ({ touched, message }) => {\n  if (!touched) {\n    return <div className=\"is-valid valid-feedback\"></div>;\n  }\n  if (message) {\n    return <div className=\"is-invalid invalid-feedback\">{message}</div>;\n  }\n  return <div className=\"is-valid valid-feedback\">all good</div>;\n};\n\nexport default FormError;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Helmet } from \"react-helmet\";\nimport FormError from \"./formError\";\n// import Thumb from \"./thumb\";\nimport { Formik, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport uuid from \"react-uuid\";\nimport { Header, SideBar, PageHeaderTitle, Footer, firestore, ProgressBar, Thumb } from \"../../partials\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst FILE_SIZE = 160 * 1024;\nconst SUPPORTED_FORMATS = [\"image/jpg\", \"image/jpeg\", \"image/gif\", \"image/png\"];\nconst validationSchema = Yup.object().shape({\n  file: Yup.mixed().required(\"image upload is required\"),\n  coursetitle: Yup.string().required(\"course title is required\"),\n});\n\n\nconst CreateCourse = ({ match }) => {\n  const [url, setUrl] = useState(null);\n  const [file, setFile] = useState(null);\n\n  useEffect(() => {\n    document.getElementById(\"gpa\").classList.add(\"active\");\n  });\n\n\n  return (\n    <div className=\"page\">\n      <Helmet>\n        <title>Create Course</title>\n      </Helmet>\n      <Header />\n \n\n      {/* SIDER BAR PART */}\n      <div className=\"page-content d-flex align-items-stretch\">\n        <SideBar />\n\n        <div className=\"content-inner\">\n          {/* <!-- Page Header--> */}\n          <PageHeaderTitle title=\"GloryPlus International Academy\" currpg=\"GPA\" />\n\n          <section className=\"forms\">\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-lg-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header d-flex align-items-center\">\n                      <h3 className=\"h4\">Create Course</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <Formik\n                        initialValues={{ file: \"\", coursetitle: \"\" }}\n                        validationSchema={validationSchema}\n                        onSubmit={async (values, { setSubmitting, resetForm }) => {\n                          if(url === null){\n                            return;\n                          }\n                          try {\n                              setSubmitting(true);\n                              const courseObj = {\n                                id: uuidv4(),\n                                file: values.file.name,\n                                title: values.coursetitle,\n                                img: url,\n                                created: Date.now(),\n                              };\n                              await firestore.collection(\"courses\").add(courseObj);\n                              resetForm();\n                              setSubmitting(false);\n                              toast.success(\"course Successfully added\", {\n                                position: \"top-right\",\n                                autoClose: 5000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                                progress: undefined,\n                              });\n                            } catch(err) {\n                              toast.error(`${err}`, {\n                                position: \"top-right\",\n                                autoClose: 5000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                                progress: undefined,\n                              });\n                            };\n                        }}\n                      >\n                        {({\n                          values,\n                          handleSubmit,\n                          isSubmitting,\n                          setFieldValue,\n                          handleChange,\n                          touched,\n                          errors,\n                          handleBlur,\n                        }) => (\n                          <form\n                            onSubmit={handleSubmit}\n                            encType=\"multipart/form-data\"\n                          >\n                            <div className=\"form-group-material\">\n                              <Field\n                                className={\n                                  touched.coursetitle && errors.coursetitle\n                                    ? \"  input-material is-invalid\"\n                                    : \"input-material\"\n                                }\n                                name=\"coursetitle\"\n                                id=\"coursetitle\"\n                                onChange={handleChange}\n                                value={values.coursetitle}\n                                onBlur={handleBlur}\n                              />\n                              <label\n                                htmlFor=\"course name\"\n                                className=\"label-material\"\n                              >\n                                Course Name\n                              </label>\n                              <FormError\n                                touched={touched.coursetitle}\n                                message={errors.coursetitle}\n                              />\n                            </div>\n                            <div className=\"form-group\">\n                              <label className=\"form-control-label\">\n                                Course Image\n                              </label>\n                              <Field\n                                id=\"file\"\n                                name=\"file[]\"\n                                type=\"file\"\n                                onChange={(event) => {\n                                  setFieldValue(\n                                    \"file\",\n                                    event.currentTarget.files[0]\n                                  );\n                                }}\n                                className={\n                                  touched.file && errors.file\n                                    ? \"  form-control-file  is-invalid\"\n                                    : \"form-control-file\"\n                                }\n                                onBlur={handleBlur}\n                              />\n                              <Thumb file={values.file} />\n                              {values.file && <ProgressBar file={values.file} setFile={setFile} setUrl={setUrl} directory=\"images/gpa\" />}\n                              <FormError\n                                touched={touched.file}\n                                message={errors.file}\n                              />\n                            </div>\n                            <div className=\"form-group\">\n                              <Field\n                                type=\"submit\"\n                                value=\"Create Course\"\n                                className=\"btn btn-primary\"\n                                disabled={isSubmitting}\n                              />\n                            </div>\n                          </form>\n                        )}\n                      </Formik>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ToastContainer />\n            <Footer />\n          </section>\n        </div>\n      </div>\n      {/* CLOSE SIDE BAR */}\n    </div>\n  );\n};\n\nexport default CreateCourse;\n","import React from 'react'\n\nconst InfoCard = ({ info, error }) => {\n    return (\n\n        <div className=\"col-md-4\" style={{ margin: \"0 auto\" }}>\n            <div className={error ? \"card text-white bg-danger\" : \"card text-white bg-info\"}>\n                <div className=\"card-header card-header-transparent\">{error ? \"Error!\" : \"Notification\"}</div>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\"><i className={error ? \"fa fa-exclamation-triangle\" : \"fa fa-bell\"}></i> {error ? \"Error!\" : \"Notification\"}</h5>\n                    <p className=\"card-text\">{info ? info : error}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default InfoCard\n","import React from 'react'\n\nconst LoaderCard = () => {\n    return (\n        <div className=\"col-md-4\" style={{ margin: \"20px auto\" }}>\n            <div className=\"text-info\">\n                <div className=\"d-flex justify-content-center\">\n                    Loading..\n            <div className=\"sk-circle\">\n                        <div className=\"sk-circle1 sk-child\"></div>\n                        <div className=\"sk-circle2 sk-child\"></div>\n                        <div className=\"sk-circle3 sk-child\"></div>\n                        <div className=\"sk-circle4 sk-child\"></div>\n                        <div className=\"sk-circle5 sk-child\"></div>\n                        <div className=\"sk-circle6 sk-child\"></div>\n                        <div className=\"sk-circle7 sk-child\"></div>\n                        <div className=\"sk-circle8 sk-child\"></div>\n                        <div className=\"sk-circle9 sk-child\"></div>\n                        <div className=\"sk-circle10 sk-child\"></div>\n                        <div className=\"sk-circle11 sk-child\"></div>\n                        <div className=\"sk-circle12 sk-child\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LoaderCard\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n// import Helmet from \"react-helmet\";\nimport { Card } from \"../cards/lessonCard\";\nimport { connect } from \"react-redux\";\nimport { Header, SideBar } from \"../../../partials\";\n// import PuffLoader from \"react-spinners/PuffLoader\";\nimport uuid from \"react-uuid\";\n// ::::::::::::::::::::::::::::::::::::::::::::::::::::::\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Formik, Form } from \"formik\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport * as Yup from \"yup\";\nimport FormError from \"../formError\";\nimport { LoaderCard, InfoCard } from \"../../Helpers\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// ::::::::::::::::::::::::::::::::::::::::::::::::::::::\nconst API_URL = process.env.REACT_APP_BASEURL;\n\nconst CreateLesson = ({ match, lessonData }) => {\n  const [courseId, setCourseId] = useState(\"\");\n  const [courseTitle, setcourseTitle] = useState(\"\");\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  useEffect(() => {\n    setCourseId(match.params.id);\n    setcourseTitle(match.params.title);\n    // document.getElementById(\"gpa\").classList.add(\"active\");\n    // fetchLessonLists();\n  }, [ match.params.id, match.params.title]);\n\n  let history = useHistory();\n\n  //filter lesson out\n\n  const lessons = lessonData.lessonItems.filter(\n    (el) => el.courseid === courseId\n  );\n  return (\n    <React.Fragment>\n      <Header />\n      <SideBar />\n      <div class=\"page-content\">\n        <div class=\"container-fluid\">\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <h2 class=\"page-title\">Create Lesson</h2>\n            </div>\n            <div class=\"col-12\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <Button\n                    onClick={handleClickOpen}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={{ textDecoration: \"none\", color: \"white\" }}\n                  >\n                    Create Lesson\n                  </Button>{\" \"}\n                  <Button\n                    onClick={() => history.goBack()}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                  >\n                    Back\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* CREATE LESSON MODAL :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: */}\n          <div>\n            <ToastContainer />\n            <Dialog\n              disableBackdropClick\n              disableEscapeKeyDown\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"form-dialog-title\"\n            >\n              <DialogTitle id=\"form-dialog-title\">{courseTitle}</DialogTitle>\n\n              <Formik\n                initialValues={{\n                  lessonNum: \"\",\n                  title: \"\",\n                  file: \"\",\n                  instruction: \"\",\n                }}\n                onSubmit={(values, { setSubmitting, resetForm }) => {\n                  setSubmitting(true);\n                  // alert(\n                  //   JSON.stringify(\n                  //     {\n                  //       file: values.file.name,\n\n                  //     },\n                  //     null,\n                  //     2\n                  //   )\n                  // );\n                  axios({\n                    method: \"POST\",\n                    url: `${API_URL}/lesson`,\n                    data: {\n                      id: uuid(),\n                      lessonNumber: values.lessonNum,\n                      title: values.title,\n                      video: values.file.name,\n                      instruction: values.instruction,\n                      courseid: courseId,\n                      created: Date.now(),\n                    },\n                  })\n                    .then((response) => {\n                      toast.success(`Lesson Created`, {\n                        position: \"top-right\",\n                        autoClose: 15000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                      });\n\n                      resetForm();\n                      handleClose();\n                     // fetchLessonLists();\n                    })\n                    .catch((error) => {\n                      toast.error(`${error}`, {\n                        position: \"top-right\",\n                        autoClose: 15000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                      });\n                      resetForm();\n                    });\n                }}\n                validationSchema={Yup.object().shape({\n                  lessonNum: Yup.string().required(\"Required\"),\n                  title: Yup.string().required(\"Required\"),\n                  file: Yup.string().required(\"Required\"),\n                  instruction: Yup.string().nullable(),\n                })}\n              >\n                {(props) => {\n                  const {\n                    values,\n                    touched,\n                    errors,\n                    isSubmitting,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    setFieldValue,\n                  } = props;\n                  return (\n                    <Form onSubmit={handleSubmit}>\n                      <DialogContent>\n                        <DialogContentText>\n                          Please ensure all input values are cross checked\n                          before submitting the form\n                        </DialogContentText>\n                        <Grid>\n                          <Grid item xs={12} sm={12} md={12} lg={12}>\n                            <TextField\n                              fullWidth\n                              id=\"lessonNum\"\n                              name=\"lessonNum\"\n                              select\n                              label=\"Select Lesson\"\n                              margin=\"normal\"\n                              value={values.lessonNum}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              error={errors.lessonNum && touched.lessonNum}\n                              helperText={\n                                errors.lessonNum &&\n                                touched.lessonNum &&\n                                errors.lessonNum\n                              }\n                            >\n                              <MenuItem value=\"1\">Lesson 1</MenuItem>\n                              <MenuItem value=\"2\">Lesson 2</MenuItem>\n                              <MenuItem value=\"3\">Lesson 3</MenuItem>\n                              <MenuItem value=\"4\">Lesson 4</MenuItem>\n                              <MenuItem value=\"5\">Lesson 5</MenuItem>\n                              <MenuItem value=\"6\">Lesson 6</MenuItem>\n                              <MenuItem value=\"7\">Lesson 7</MenuItem>\n                              <MenuItem value=\"8\">Lesson 8</MenuItem>\n                              <MenuItem value=\"9\">Lesson 9</MenuItem>\n                              <MenuItem value=\"10\">Lesson 10</MenuItem>\n                              <MenuItem value=\"11\">Lesson 11</MenuItem>\n                              <MenuItem value=\"12\">Lesson 12</MenuItem>\n                              <MenuItem value=\"13\">Lesson 13</MenuItem>\n                              <MenuItem value=\"14\">Lesson 14</MenuItem>\n                              <MenuItem value=\"15\">Lesson 15</MenuItem>\n                              <MenuItem value=\"16\">Lesson 16</MenuItem>\n                              <MenuItem value=\"17\">Lesson 17</MenuItem>\n                              <MenuItem value=\"18\">Lesson 18</MenuItem>\n                              <MenuItem value=\"19\">Lesson 19</MenuItem>\n                              <MenuItem value=\"20\">Lesson 20</MenuItem>\n                            </TextField>\n                          </Grid>\n                          <Grid item xs={12} sm={12} md={12} lg={12}>\n                            <TextField\n                              fullWidth\n                              margin=\"dense\"\n                              id=\"LessonTitle\"\n                              name=\"title\"\n                              label=\"Lesson Title\"\n                              value={values.title}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              error={errors.title && touched.title}\n                              helperText={\n                                errors.title && touched.title && errors.title\n                              }\n                            />\n                          </Grid>\n                          <Grid item xs={12} sm={12} md={12} lg={12}>\n                            <div className=\"form-group\">\n                              <label className=\"form-control-label\">\n                                Event Image\n                              </label>\n                              <input\n                                id=\"file\"\n                                name=\"file\"\n                                type=\"file\"\n                                onChange={(event) => {\n                                  setFieldValue(\n                                    \"file\",\n                                    event.currentTarget.files[0]\n                                  );\n                                }}\n                                className={\n                                  touched.file && errors.file\n                                    ? \"  form-control-file  is-invalid\"\n                                    : \"form-control-file\"\n                                }\n                                onBlur={handleBlur}\n                              />\n                              <FormError\n                                touched={touched.file}\n                                message={errors.file}\n                              />\n                            </div>\n                          </Grid>\n                          <Grid item xs={12} sm={12} md={12} lg={12}>\n                            <TextField\n                              fullWidth\n                              multiline\n                              rowsMax=\"4\"\n                              margin=\"dense\"\n                              id=\"instruction\"\n                              label=\"Instruction optional\"\n                              name=\"instruction\"\n                              value={values.instruction}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                            />\n                          </Grid>\n                        </Grid>\n                      </DialogContent>\n                      <DialogActions>\n                        <Button\n                          type=\"reset\"\n                          onClick={handleClose}\n                          color=\"secondary\"\n                          variant=\"contained\"\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          type=\"submit\"\n                          color=\"primary\"\n                          variant=\"contained\"\n                          disabled={isSubmitting}\n                        >\n                          Submit\n                        </Button>\n                      </DialogActions>\n                    </Form>\n                  );\n                }}\n              </Formik>\n            </Dialog>{\" \"}\n          </div>\n          {/* CREATE LESSON MODAL :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: */}\n          <div class=\"row\">\n            {lessonData.loading ? (\n              <LoaderCard />\n            ) : lessonData.error ? (\n              <InfoCard error={lessonData.error} />\n            ) : (\n              <Fragment>\n                {lessons.length ? (\n                  lessons\n                    .filter((el) => el.courseid === courseId)\n                    .map((lessonCourse) => (\n                      <Card\n                        key={lessonCourse.id}\n                        title={lessonCourse.title}\n                        lessonId={lessonCourse.id}\n                        created={lessonCourse.created}\n                        id={lessonCourse.id}\n                      />\n                    ))\n                ) : (\n                  <InfoCard info=\"No Lesson available, please create new lesson\" />\n                )}\n              </Fragment>\n            )}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default CreateLesson;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useHistory } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Formik, Form } from \"formik\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport * as Yup from \"yup\";\nimport uuid from \"react-uuid\";\n// import { now } from \"moment\";\nconst API_URL = process.env.REACT_APP_BASEURL;\n\nconst CreateAssignmentDialog = ({ lessonID }) => {\n  let history = useHistory();\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <React.Fragment>\n      {/* CREATE LESSON MODAL :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: */}\n      <div>\n        <ToastContainer />\n        <Button onClick={handleClickOpen} variant=\"contained\" color=\"primary\">\n          Create Assignment\n        </Button>\n        <Dialog\n          fullWidth={true}\n          maxWidth={\"md\"}\n          disableBackdropClick\n          disableEscapeKeyDown\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Create Assignment</DialogTitle>\n\n          <Formik\n            initialValues={{\n              question: \"\",\n              optionA: \"\",\n              optionB: \"\",\n              optionC: \"\",\n              optionD: \"\",\n              answer: \"\",\n            }}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              setSubmitting(true);\n              // alert(\n              //   JSON.stringify(\n              //     {\n              //       file: values.file.name,\n\n              //     },\n              //     null,\n              //     2\n              //   )\n              // );\n              axios({\n                method: \"POST\",\n                url: `${API_URL}/assigments`,\n                data: {\n                  id: uuid(),\n                  lessonId: lessonID,\n                  question: values.question,\n                  optionA: values.optionA,\n                  optionB: values.optionB,\n                  optionC: values.optionC,\n                  optionD: values.optionD,\n                  answer: values.answer,\n                  created: Date.now(),\n                },\n              })\n                .then((response) => {\n                  toast.success(`Assigment Added!`, {\n                    position: \"top-right\",\n                    autoClose: 15000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n\n                  resetForm();\n                  handleClose();\n                //  fetchAssignments();\n                })\n                .catch((error) => {\n                  toast.error(`${error}`, {\n                    position: \"top-right\",\n                    autoClose: 15000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                  resetForm();\n                });\n            }}\n            validationSchema={Yup.object().shape({\n              question: Yup.string().required(\"required\"),\n              optionA: Yup.string().required(\"required\"),\n              optionB: Yup.string().required(\"required\"),\n              optionC: Yup.string().required(\"required\"),\n              optionD: Yup.string().required(\"required\"),\n              answer: Yup.string().required(\"required\"),\n            })}\n          >\n            {(props) => {\n              const {\n                values,\n                touched,\n                errors,\n                isSubmitting,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n              } = props;\n              return (\n                <Form onSubmit={handleSubmit}>\n                  <DialogContent>\n                    <DialogContentText>\n                      Please ensure all input values are cross checked before\n                      submitting the form\n                    </DialogContentText>\n                    <Grid container spacing={3}>\n                      <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <TextField\n                          fullWidth\n                          multiline\n                          id=\"question\"\n                          name=\"question\"\n                          label=\"Question\"\n                          margin=\"normal\"\n                          value={values.question}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          error={errors.question && touched.question}\n                          helperText={\n                            errors.question &&\n                            touched.question &&\n                            errors.question\n                          }\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={12} md={6} lg={6}>\n                        <TextField\n                          fullWidth\n                          multiline\n                          id=\"optionA\"\n                          name=\"optionA\"\n                          label=\"Option A\"\n                          margin=\"normal\"\n                          value={values.optionA}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          error={errors.optionA && touched.optionA}\n                          helperText={\n                            errors.optionA && touched.optionA && errors.optionA\n                          }\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={12} md={6} lg={6}>\n                        <TextField\n                          fullWidth\n                          multiline\n                          margin=\"dense\"\n                          id=\"optionB\"\n                          name=\"optionB\"\n                          label=\"Option B\"\n                          value={values.optionB}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          error={errors.optionB && touched.optionB}\n                          helperText={\n                            errors.optionB && touched.optionB && errors.optionB\n                          }\n                        />\n                      </Grid>\n\n                      <Grid item xs={12} sm={12} md={6} lg={6}>\n                        <TextField\n                          fullWidth\n                          multiline\n                          rowsMax=\"4\"\n                          margin=\"dense\"\n                          id=\"optionC\"\n                          label=\"Option C\"\n                          name=\"optionC\"\n                          value={values.optionC}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          error={errors.optionC && touched.optionC}\n                          helperText={\n                            errors.optionC && touched.optionC && errors.optionC\n                          }\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={12} md={6} lg={6}>\n                        <TextField\n                          fullWidth\n                          multiline\n                          rowsMax=\"4\"\n                          margin=\"dense\"\n                          id=\"optionD\"\n                          label=\"Option D\"\n                          name=\"optionD\"\n                          value={values.optionD}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          error={errors.optionD && touched.optionD}\n                          helperText={\n                            errors.optionD && touched.optionD && errors.optionD\n                          }\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <TextField\n                          fullWidth\n                          select\n                          rowsMax=\"4\"\n                          margin=\"dense\"\n                          id=\"answer\"\n                          label=\"Correct Answer \"\n                          name=\"answer\"\n                          value={values.answer}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          error={errors.answer && touched.answer}\n                          helperText={\n                            errors.answer && touched.C && errors.answer\n                          }\n                        >\n                          <MenuItem value=\"A\">A</MenuItem>\n                          <MenuItem value=\"B\">B</MenuItem>\n                          <MenuItem value=\"C\">C</MenuItem>\n                          <MenuItem value=\"D\">D</MenuItem>\n                        </TextField>\n                      </Grid>\n                    </Grid>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button\n                      type=\"reset\"\n                      onClick={handleClose}\n                      color=\"secondary\"\n                      variant=\"contained\"\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      type=\"submit\"\n                      color=\"primary\"\n                      variant=\"contained\"\n                      disabled={isSubmitting}\n                    >\n                      Submit\n                    </Button>\n                  </DialogActions>\n                </Form>\n              );\n            }}\n          </Formik>\n        </Dialog>{\" \"}\n        <Button\n          onClick={() => history.goBack()}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Back\n        </Button>\n      </div>\n      {/* CREATE LESSON MODAL :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: */}\n    </React.Fragment>\n  );\n};\n\nexport default CreateAssignmentDialog;\n","import React, { useState } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { Formik, Form } from \"formik\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport * as Yup from \"yup\";\n\n// import Thumb from \"../thumb\"\nconst API_URL = process.env.REACT_APP_BASEURL;\n\nconst EditCourse = ({ title, id }) => {\n    const [open, setOpen] = useState(false)\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    return (\n\n        <div>\n            <ToastContainer />\n            <Button onClick={handleClickOpen} size=\"small\" color=\"primary\">Edit Course</Button>\n            <Dialog\n                disableBackdropClick\n                disableEscapeKeyDown\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n\n                <Formik\n                    initialValues={{ lessonNum: \"\", title: \"\", file: \"\", instruction: \"\" }}\n                    onSubmit={(values, { setSubmitting, resetForm }) => {\n                        setSubmitting(true);\n                        axios({\n                            method: \"POST\",\n                            url: `${API_URL}/lesson`,\n                            data: {\n\n                                created: Date.now(),\n                            },\n                        })\n                            .then((response) => {\n                                toast.success(`Message Sent!`, {\n                                    position: \"top-right\",\n                                    autoClose: 15000,\n                                    hideProgressBar: false,\n                                    closeOnClick: true,\n                                    pauseOnHover: true,\n                                    draggable: true,\n                                    progress: undefined,\n                                });\n\n                                resetForm();\n                                handleClose()\n                               // fetchLessonLists()\n\n                            })\n                            .catch((error) => {\n                                toast.error(`${error}`, {\n                                    position: \"top-right\",\n                                    autoClose: 15000,\n                                    hideProgressBar: false,\n                                    closeOnClick: true,\n                                    pauseOnHover: true,\n                                    draggable: true,\n                                    progress: undefined,\n                                });\n                                resetForm();\n                            });\n                    }}\n\n                    validationSchema={Yup.object().shape({\n                        lessonNum: Yup.string().required('Required'),\n                        title: Yup.string().required('Required'),\n                        file: Yup.string().required('Required'),\n                        instruction: Yup.string().nullable(),\n\n                    })}>\n\n\n\n                    {(props) => {\n                        const {\n                            values,\n                            touched,\n                            errors,\n                            isSubmitting,\n                            handleChange,\n                            handleBlur,\n                            handleSubmit\n\n                        } = props;\n                        return (\n                            <Form onSubmit={handleSubmit}>\n                                <DialogContent>\n                                    <DialogContentText>\n                                        Please ensure all input values are cross checked before submitting the form\n            </DialogContentText>\n                                    <Grid >\n                                        <Grid item xs={12} sm={12} md={12} lg={12}>\n                                            <TextField\n                                                fullWidth\n                                                id=\"CourseName\"\n                                                label=\"Course Name\"\n                                                onChange={handleChange}\n                                                value={values.coursetitle}\n                                                onBlur={handleBlur}\n                                                margin=\"normal\"\n                                                name=\"coursetitle\"\n                                                defaultValue={title}\n                                                error={errors.coursetitle && touched.coursetitle}\n                                                helperText={(errors.coursetitle && touched.coursetitle) && errors.coursetitle}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12} sm={12} md={12} lg={12}>\n                                            <TextField\n                                                fullWidth\n                                                margin=\"dense\"\n                                                id=\"file\"\n                                                label=\"Course Image\"\n                                                type=\"file\"\n                                                name=\"file\"\n                                                value={values.file}\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                error={errors.file && touched.file}\n                                                helperText={(errors.file && touched.file) && errors.file}\n\n                                            />\n                                        </Grid>\n\n                                    </Grid>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button type=\"reset\" onClick={handleClose} color=\"secondary\" variant=\"contained\">\n                                        Cancel\n                                 </Button>\n                                    <Button type=\"submit\" color=\"primary\" variant=\"contained\" disabled={isSubmitting}>\n                                        Submit\n                                     </Button>\n\n                                </DialogActions>\n                            </Form>\n                        );\n                    }}\n                </Formik>\n\n            </Dialog>\n        </div>\n\n    );\n};\n\nexport default EditCourse;\n","import React, { useState } from 'react';\n// import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { withStyles } from '@material-ui/core/styles';\n// import DeleteForeverRoundedIcon from '@material-ui/icons/DeleteForeverRounded';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\n// import Icon from '@material-ui/core/Icon';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination\n} from '@material-ui/core';\n\n// import { getInitials } from 'helpers';\n\nconst styles = theme => ({\n  root: {\n    // border: \"2px solid red\",\n    marginBottom: \"20px\"\n  },\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n});\n\nconst CandidatesTable = ({ classes, candidates }) => {\n\n  const [selectedCandidates, setselectedCandidates] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleSelectAll = event => {\n    // const { candidates } = props;\n\n    let selectedCandidates;\n\n    if (event.target.checked) {\n      selectedCandidates = candidates.map(candidate => candidate.id);\n    } else {\n      selectedCandidates = [];\n    }\n\n    setselectedCandidates(selectedCandidates);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCandidates.indexOf(id);\n    let newselectedCandidates = [];\n\n    if (selectedIndex === -1) {\n      newselectedCandidates = newselectedCandidates.concat(selectedCandidates, id);\n    } else if (selectedIndex === 0) {\n      newselectedCandidates = newselectedCandidates.concat(selectedCandidates.slice(1));\n    } else if (selectedIndex === selectedCandidates.length - 1) {\n      newselectedCandidates = newselectedCandidates.concat(selectedCandidates.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newselectedCandidates = newselectedCandidates.concat(\n        selectedCandidates.slice(0, selectedIndex),\n        selectedCandidates.slice(selectedIndex + 1)\n      );\n    }\n\n    setselectedCandidates(newselectedCandidates);\n  };\n\n  const handlePageChange = (event, page) => {\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <Card\n      className={classes.root}\n    >\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedCandidates.length === candidates.length}\n                      color=\"primary\"\n                      indeterminate={\n                        selectedCandidates.length > 0 &&\n                        selectedCandidates.length < candidates.length\n                      }\n                      onChange={handleSelectAll}\n                    />\n                  </TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Email</TableCell>\n                  <TableCell>Location</TableCell>\n                  <TableCell>Phone</TableCell>\n                  <TableCell>Registration date</TableCell>\n                  <TableCell>Edit</TableCell>\n                  <TableCell>Delete</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n\n                {candidates.slice(0, rowsPerPage).map(candidate => (\n                  <TableRow\n                    className={classes.tableRow}\n                    hover\n                    key={candidate.id}\n                    selected={selectedCandidates.indexOf(candidate.id) !== -1}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={selectedCandidates.indexOf(candidate.id) !== -1}\n                        color=\"primary\"\n                        onChange={event => handleSelectOne(event, candidate.id)}\n                        value=\"true\"\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <div className={classes.nameContainer}>\n                        <Avatar\n                          className={classes.avatar}\n                          src={candidate.avatarUrl}\n                        >\n                          {/* {getInitials(candidate.name)} */}\n                        </Avatar>\n                        <Typography variant=\"body1\">{candidate.name}</Typography>\n                      </div>\n                    </TableCell>\n                    <TableCell>{candidate.email}</TableCell>\n                    <TableCell>\n                      {/* {candidate.address.city}, {candidate.address.state},{' '}\n                      {candidate.address.country} */}\n                    </TableCell>\n                    <TableCell>{candidate.phone}</TableCell>\n                    <TableCell>\n                      <Moment format=\"D MMM YYYY\" withTitle>\n                        {candidate.gpaDate}\n                      </Moment>\n                    </TableCell>\n                    <TableCell>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        startIcon={<EditTwoToneIcon />}\n\n                      >\n                        Edit\n                    </Button>\n                    </TableCell>\n                    <TableCell>\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}\n                        startIcon={<DeleteIcon />}\n                      >\n                        Delete\n                    </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <TablePagination\n          component=\"div\"\n          count={candidates.length}\n          onChangePage={handlePageChange}\n          onChangeRowsPerPage={handleRowsPerPageChange}\n          page={page}\n          rowsPerPage={rowsPerPage}\n          rowsPerPageOptions={[5, 10, 25]}\n        />\n      </CardActions>\n    </Card>\n  );\n};\n\nCandidatesTable.propTypes = {\n  className: PropTypes.string,\n  candidates: PropTypes.array.isRequired\n};\n\n\nexport default withStyles(styles)(CandidatesTable);\n","import React, { Fragment } from \"react\";\nimport Moment from \"react-moment\";\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport EditCourse from \"../modal/editCourse\";\nexport const Card = ({ title, created, id, image }) => {\n\n  return (\n    <Fragment>\n\n      <div className=\"col-md-6 col-lg-3 col-sm-12 col-xs-12\">\n        <div className=\"card\"><img src={image} alt=\"Card image cap\" className=\"card-img-top img-fluid\" />\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{title}</h5>\n            <p className=\"card-text\">\n\n              <ButtonGroup color=\"secondary\" variant=\"contained\" >\n                <Button href={`/dashboard/gpa/view/${id}`} size=\"small\" style={{ textDecoration: 'none', color: 'white' }}>Create Lesson</Button>\n                <EditCourse title={title} id={id} />\n              </ButtonGroup>\n            </p>\n            <p className=\"card-text\">\n              <small className=\"text-muted\"><Moment fromNow>{created}</Moment>\n                &nbsp; <a href=\"#!\">view more </a>\n                  &nbsp;{\" \"}\n                  <a href=\"#!\">\n                    <i\n                      className=\"fa fa-trash text-danger fa-lg\"\n                      aria-hidden=\"true\"\n                      onClick\n                    ></i>\n                  </a>\n              </small>\n            </p>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\n\n\n","import React, { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport moment from \"moment\";\n// import { Link } from \"react-router-dom\";\nimport serializeForm from \"form-serialize\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport { Header, SideBar, PageHeaderTitle, Footer, firestore  } from \"../../partials\";\nimport { TramRounded } from \"@material-ui/icons\";\n\nconst Livestream = () => {\n  useEffect(() => {\n    document.getElementById(\"livestream\").classList.add(\"active\");\n  });\n  //DECLARE USE STATE FOR OUR VARIABLES\n  const [playerSource, setplaysource] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const numbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30];\n  //   const [loading, setLoading] = useState(false);\n  //   const [infostate, setInfo] = useState(false);\n\n  // LIVE STREAM TOGGLE BUTTON ########\n  const toggle = (e) => {\n    e.preventDefault();\n    setChecked(!checked);\n    setDisabled(!disabled);\n  };\n  //HANDLE THE NEW STREAMING SCHEDULE ##########\n  const handleSchedule = async (e) => {\n    e.preventDefault();\n    const scheduleObj = serializeForm(e.target, { hash: true });\n    console.log('scheduleObj.check', scheduleObj);\n    try{\n      const streamData = {\n        programTitle: scheduleObj.programTitle,\n        scheduleMonth: scheduleObj.scheduleMonth, \n        scheduleDate: scheduleObj.scheduleDate, \n        scheduleTime: scheduleObj.time, \n        live: false\n      };\n       await firestore.collection(\"unleash-stream\").doc('LZn2Pjzk4W4Re5gCPb16').update(streamData);\n        toast.success(\"Next Livestream Scheduled successfully\", {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n              });\n      } catch (error) {\n        toast.error(`${error.message}`, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n  };\n\n  //HANDLE THE NEW STREAMING SCHEDULE ##########\n\n  const handleStreaming = async (e) => {\n    e.preventDefault();\n    const streamObj = serializeForm(e.target, { hash: true });\n    const url = `https://www.facebook.com/plugins/post.php?href=https%3A%2F%2Fweb.facebook.com%2Fgloryplusintl%2Fposts%2F${streamObj.streamid}&show_text=true`;\n\n    setplaysource(streamObj.streamid);\n\n    const streamData = {\n      programTitle: streamObj.programTitle,\n      live: true,\n      streamURL: url\n    };\n\n    try{\n     await firestore.collection(\"livestream\").doc('LZn2Pjzk4W4Re5gCPb16').update(streamData);\n      toast.success(\"LiveStream Successfully Updated and its LIVE!!!!\", {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n    } catch (error) {\n      toast.error(`${error.message}`, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n   \n  };\n\n \n  return (\n    <div className=\"page\">\n      <Helmet>\n        <title>Live Stream</title>\n      </Helmet>\n      {/* HEADER PART */}\n      <Header />\n      {/* CLOSE HEADER PART */}\n\n      {/* SIDER BAR PART */}\n      <div className=\"page-content d-flex align-items-stretch\">\n        <SideBar />\n\n        <div className=\"content-inner\">\n          {/* <!-- Page Header--> */}\n          <PageHeaderTitle title=\"Live Stream\" currpg=\"Live Stream\" />\n\n          {/* LIVE STREAM CONTENT ##################### */}\n          {/* <!-- Inline Form--> */}\n          <section className=\"forms\">\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-lg-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header d-flex align-items-center\">\n                      <h3 className=\"h4\">\n                        Status:{\" \"}\n                        {checked ? (\n                          <strong className=\"font-bold text-success\">ON</strong>\n                        ) : (\n                          <strong className=\"font-bold text-danger\">OFF</strong>\n                        )}\n                      </h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <form className=\"form-inline\" onClick={toggle}>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"checkbox\"\n                            data-toggle=\"toggle\"\n                            data-on=\"Ready\"\n                            data-off=\"Not Ready\"\n                            data-onstyle=\"success\"\n                            data-offstyle=\"danger\"\n                            onChange={(event) => {\n                              setChecked(event.target.checked);\n                            }}\n                            value={checked}\n                          />\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* LIVE STREAM CONTENT ----------------------------------*/}\n              {/* {checked ? null : changedCLick(checked)} */}\n              {checked ? (\n                <div className=\"row\">\n                  <div className=\"col-lg-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header d-flex align-items-center\">\n                        <h3 className=\"h4\">\n                          Status:{\" \"}\n                          {checked ? (\n                            <strong className=\"font-bold text-success\">\n                              Please scroll down to paste live stream ID\n                            </strong>\n                          ) : (\n                            <strong className=\"font-bold text-danger\">\n                              OFF\n                            </strong>\n                          )}\n                        </h3>\n                      </div>\n\n                      <div className=\"col-md-12 col-lg-12 col-xl-12 col-sm-12 col-xs-12 \">\n                        <div className=\"embed-responsive embed-responsive-16by9 card\">\n                          <iframe\n                            id=\"iframeid\"\n                            src={`https://www.facebook.com/plugins/post.php?href=https%3A%2F%2Fweb.facebook.com%2Fgloryplusintl%2Fposts%2F${playerSource}&show_text=true`}\n                            width=\"100%\"\n                            height=\"100%\"\n                            className=\"embed-responsive-item\"\n                            scrolling=\"no\"\n                            allowtransparency=\"true\"\n                            allow=\"encrypted-media\"\n                            allowFullScreen={true}\n                            title=\"live streaming\"\n                          ></iframe>\n                        </div>\n                        <form\n                          onSubmit={handleStreaming}\n                          className=\"form-validate\"\n                        >\n                           <div className=\"row\">\n                              <div className=\"col-sm-12 col-md-6 col-lg-6\">\n                                <div class=\"form-group-material\">\n                                  <input\n                                    type=\"text\"\n                                    placeholder=\"ENTER LIVE STREAM ID HERE ....\"\n                                    className=\"input-material\"\n                                    required\n                                    name=\"streamid\"\n                                  />\n                                </div>\n                              </div>\n                              <div className=\"col-sm-12 col-md-6 col-lg-6\">\n                                <div class=\"form-group-material\">\n                                  <input\n                                    required\n                                    className=\"input-material\"\n                                    type=\"text\"\n                                    name=\"programTitle\"\n                                    placeholder=\"Enter Program Title i.e Sunday Service\"\n                                  />\n                              \n                                </div>\n                              </div>\n                           </div>\n                            <input value={checked} name=\"check\" type=\"hidden\" />\n                          \n\n                          <div className=\"form-group\">\n                            <button className=\"btn btn-success\">Go Live</button>\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"row\">\n                  <div className=\"col-lg-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header d-flex align-items-center\"></div>\n                      <div className=\"col-md-4 col-lg-4 col-xl-4 col-sm-12 col-xs-12 mx-auto text-center\">\n                        <img\n                          src=\"images\\live-stream.png\"\n                          alt=\"live stream\"\n                          className=\"img-fluid\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n              {/* LIVE STREAM CONTENT ----------------------------------*/}\n              {/* <!-- Inline Form--> */}\n              <div className=\"col-md-12 col-lg-12 col-xl-12 col-sm-12 col-xs-12\">\n                <div className=\"card\">\n                  <div className=\"card-header d-flex align-items-center\">\n                    {\" \"}\n                    {checked ? (\n                      <h3 className=\"font-bold text-danger h4\">\n                        TO SCHEDULE FOR NEW STREAMING EVENT PLEASE TURN OFF LIVE\n                        STREAMING !\n                      </h3>\n                    ) : (\n                      <h3 className=\"h4\"> SCHEDULE STREAMING</h3>\n                    )}\n                  </div>\n                  <div className=\"card-body\">\n                    <form className=\"form-inline\" onSubmit={handleSchedule}>\n                      <div class=\"col-sm-12\">\n                      <div className=\"row\">\n                          <div className=\"col-sm-12 col-md-6 col-lg-6\">\n                            <div class=\"form-group-material\">\n                              <input\n                                required\n                                className=\"input-material\"\n                                type=\"text\"\n                                name=\"programTitle\"\n                                placeholder=\"Enter Program Title i.e Sunday Service\"\n                              />\n                          \n                            </div>\n                          </div>\n                          <div className=\"col-sm-12 col-md-6 col-lg-6\">\n                            <div class=\"form-group-material\">\n                            <select\n                              className= \"input-material select-text\"\n                              name=\"scheduleMonth\"\n                              // onChange={handleChange}\n                              // value={values.gender}\n                              // onBlur={handleBlur}\n                              required\n                            >             \n                              <option value=\"January\">January</option>\n                              <option value=\"Febuary\">Febuary</option>\n                              <option value=\"March\">March</option>\n                              <option value=\"April\">April</option>\n                              <option value=\"May\">May</option>\n                              <option value=\"June\">June</option>\n                              <option value=\"July\">July</option>\n                              <option value=\"August\">August</option>\n                              <option value=\"September\">September</option>\n                              <option value=\"October\">October</option>\n                              <option value=\"November\">November</option>\n                              <option value=\"December\">December</option>\n                            </select>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-sm-12 col-md-6 col-lg-6\">\n                            <div class=\"form-group-material\">\n                            <select\n                              className= \"input-material select-text\"\n                              name=\"scheduleDate\"\n                              required\n                            > \n                              {numbers.map((number)=>  <option value={number}>{number}</option>)}\n                            </select>\n                          \n                            </div>\n                          </div>\n                          <div className=\"col-sm-12 col-md-6 col-lg-6\">\n                            <div class=\"form-group-material\">\n                              <input\n                                className=\"input-material\"\n                                id=\"timepicker\"\n                                type=\"time\"\n                                placeholder=\"select time\"\n                                name=\"time\"\n                                required\n                              />\n                            </div>\n                          </div>\n                          <input value={checked} name=\"check\" type=\"hidden\" />\n                        </div>\n                        <div className=\"form-group row\">\n                          <div className=\"col-sm-12 \">\n                            <button type=\"reset\" className=\"btn btn-secondary\">\n                              Cancel\n                            </button>{\" \"}\n                            <button\n                              type=\"submit\"\n                              className=\"btn btn-primary\"\n                              disabled={disabled}\n                            >\n                              Schedule\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n              {/* <!-- Modal Form--> */}\n            </div>\n            <ToastContainer />\n            <Footer />\n          </section>\n\n          {/* LIVE STREAM CONTAINER ##################### */}\n        </div>\n      </div>\n      {/* CLOSE SIDE BAR */}\n    </div>\n  );\n};\n\nexport default Livestream;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n// import { Link } from \"react-router-dom\";\nimport { Header, SideBar, PageHeaderTitle, Footer, firestore } from \"../../partials\";\n// import Content from \"../main\";\nclass dashboard extends React.Component {\n  componentDidMount() {\n    document.getElementById(\"home\").classList.add(\"active\");\n  }\n  render() {\n    return (\n      <div className=\"page\">\n        <Helmet>\n          <title>profile</title>\n        </Helmet>\n        {/* HEADER PART */}\n        <Header />\n        {/* CLOSE HEADER PART */}\n\n        {/* SIDER BAR PART */}\n        <div className=\"page-content d-flex align-items-stretch\">\n          <SideBar />\n\n          <div className=\"content-inner\">\n            {/* <!-- Page Header--> */}\n            <PageHeaderTitle title=\"Profile\" currpg=\"profile\" />\n\n            {/* <!-- Dashboard Counts Section--> */}\n            <section className=\"dashboard-counts no-padding-bottom\">\n              <div className=\"container-fluid\">\n                <div className=\"container-fluid\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-4\">\n                      <div className=\"card card-profile\">\n                        <div\n                          style={{\n                            backgroundImage:\n                              \"url(img/photos/paul-morris-116514-unsplash.jpg)\",\n                          }}\n                          className=\"card-header\"\n                        ></div>\n                        <div className=\"card-body text-center\">\n                          <img\n                            src=\"img/avatar-7.jpg\"\n                            className=\"card-profile-img\"\n                            alt=\"s\"\n                          />\n                          <h3 className=\"mb-3\">Chisom Dike</h3>\n                          <p className=\"mb-4\">\n                            One morning, when Gregor Samsa woke from troubled{\" \"}\n                          </p>\n                          <button className=\"btn btn-outline-dark btn-sm\">\n                            <span className=\"fa fa-twitter\"></span> Follow\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-lg-8\">\n                      <form className=\"card\">\n                        <div className=\"card-body\">\n                          <h3 className=\"card-title\">Edit Profile</h3>\n                          <div className=\"row\">\n                            <div className=\"col-md-5\">\n                              <div className=\"form-group mb-4\">\n                                <label className=\"form-label\">Company</label>\n                                <input\n                                  type=\"text\"\n                                  placeholder=\"Company\"\n                                  value=\"Elemson &amp; Ifeanyi\"\n                                  className=\"form-control\"\n                                />\n                              </div>\n                            </div>\n                            <div className=\"col-sm-6 col-md-3\">\n                              <div className=\"form-group mb-4\">\n                                <label className=\"form-label\">Username</label>\n                                <input\n                                  type=\"text\"\n                                  placeholder=\"Username\"\n                                  value=\"ielemson\"\n                                  className=\"form-control\"\n                                />\n                              </div>\n                            </div>\n                            <div className=\"col-sm-6 col-md-4\">\n                              <div className=\"form-group mb-4\">\n                                <label className=\"form-label\">\n                                  Email address\n                                </label>\n                                <input\n                                  type=\"email\"\n                                  placeholder=\"Email\"\n                                  className=\"form-control\"\n                                  value=\"\"\n                                />\n                              </div>\n                            </div>\n                            <div className=\"col-sm-6 col-md-6\">\n                              <div className=\"form-group mb-4\">\n                                <label className=\"form-label\">First Name</label>\n                                <input\n                                  type=\"text\"\n                                  placeholder=\"First name\"\n                                  className=\"form-control\"\n                                  value=\"Ifeanyi\"\n                                />\n                              </div>\n                            </div>\n                            <div className=\"col-sm-6 col-md-6\">\n                              <div className=\"form-group mb-4\">\n                                <label className=\"form-label\">Last Name</label>\n                                <input\n                                  type=\"text\"\n                                  placeholder=\"Last Name\"\n                                  className=\"form-control\"\n                                  value=\"Elemson\"\n                                />\n                              </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                              <div className=\"form-group mb-4\">\n                                <label className=\"form-label\">Address</label>\n                                <input\n                                  type=\"text\"\n                                  placeholder=\"Home Address\"\n                                  className=\"form-control\"\n                                  value=\"Lagos Nigeria\"\n                                />\n                              </div>\n                            </div>\n                            <div className=\"col-sm-6 col-md-4\">\n                              <div className=\"form-group mb-4\">\n                                <label className=\"form-label\">City</label>\n                                <input\n                                  type=\"text\"\n                                  placeholder=\"City\"\n                                  className=\"form-control\"\n                                />\n                              </div>\n                            </div>\n                            <div className=\"col-sm-6 col-md-3\">\n                              <div className=\"form-group mb-4\">\n                                <label className=\"form-label\">ZIP</label>\n                                <input\n                                  type=\"number\"\n                                  placeholder=\"ZIP\"\n                                  className=\"form-control\"\n                                />\n                              </div>\n                            </div>\n                            <div className=\"col-md-5\">\n                              <div className=\"form-group mb-4\">\n                                <label className=\"form-label\">Country</label>\n                                <select className=\"form-control custom-select\">\n                                  <option value=\"\">UK</option>\n                                  <option value=\"\">US</option>\n                                </select>\n                              </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                              <div className=\"form-group mb-0\">\n                                <label className=\"form-label\">About Me</label>\n                                <textarea\n                                  rows=\"5\"\n                                  placeholder=\"Here can be your description\"\n                                  value=\"Mike\"\n                                  className=\"form-control\"\n                                >\n                                  The bedding was hardly able to cover it and\n                                  seemed ready to slide off any moment. His many\n                                  legs, pitifully thin compared with the size of\n                                  the rest of him, waved about helplessly as he\n                                  looked. &quot;What's happened to me?&quot; he\n                                  thought. It wasn't a dream.\n                                </textarea>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"card-footer text-right\">\n                          <button type=\"submit\" className=\"btn btn-primary\">\n                            Update Profile\n                          </button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n            <Footer />\n            {/* <!-- Dashboard Header Section    --> */}\n          </div>\n        </div>\n        {/* CLOSE SIDE BAR */}\n      </div>\n    );\n  }\n}\n\nexport default dashboard;\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { handleError } from \"../../util\";\nimport { Header, SideBar, PageHeaderTitle, Footer, firestore } from \"../../partials\";\nimport { CourseCard } from \"./courseCard\";\nimport { Card } from \"./cards/courseCard\";\nimport { LoaderCard, InfoCard } from \"../Helpers\";\n\n// import Content from \"../main\";\nconst ViewCourses = () => {\n  const [courses, setCourses] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    document.getElementById(\"gpa\").classList.add(\"active\");\n    fetchCourseLists();\n  },[]);\n\n   const fetchCourseLists = async () => {\n    console.log('fetch courses');\n    await firestore.collection('courses')\n    .onSnapshot((querySnapshot) => {\n      const results = [];\n      querySnapshot.forEach((doc) => {\n        results.push(doc.data());\n      });\n      console.log('results', results)\n      setCourses(results);\n      setLoading(false);\n    }, handleError);\n  }\n\n\n\n    return (\n      <div className=\"page\">\n        <Helmet>\n          <title>course list</title>\n        </Helmet>\n        {/* HEADER PART */}\n        <Header />\n        {/* CLOSE HEADER PART */}\n\n        {/* SIDER BAR PART */}\n        <div className=\"page-content d-flex align-items-stretch\">\n          <SideBar />\n\n          <div className=\"content-inner\">\n            {/* <!-- Page Header--> */}\n            <PageHeaderTitle title=\"GloryPlus International Academy\" currpg=\"Course List\" />\n            <div className=\"container-fluid\">\n              {/* <!-- end row--> */}\n              <section>\n                <div class=\"card\">\n                  <div class=\"card-header\">\n                    <h4>Course List</h4>\n                  </div>\n                </div>\n                <div className=\"row\">\n              {isLoading ? (\n                <LoaderCard />\n              ) : courses.error ? (\n                <InfoCard error={courses.error} />\n              ) : (\n                <Fragment>\n                  {courses.length ? (\n                    courses.map((course) => (\n                      <Card\n                        title={course.title}\n                        created={course.created}\n                        key={course.id}\n                        id={course.id}\n                        btnTitle=\"Lesson\"\n                        image={course.img}\n                      />\n                    ))\n                  ) : (\n                    <InfoCard info=\"No course available,please create a new course\" />\n                  )}\n                </Fragment>\n              )}\n            </div>\n              </section>\n\n              {/* <!-- end row--> */}\n            </div>\n            <Footer />\n          </div>\n        </div>\n        {/* CLOSE SIDE BAR */}\n      </div>\n    );\n  }\n\n\nexport default ViewCourses;\n","import React from \"react\";\n\nconst FormError = ({ touched, message }) => {\n  if (!touched) {\n    return <div className=\"is-valid valid-feedback\"></div>;\n  }\n  if (message) {\n    return <div className=\"is-invalid invalid-feedback\">{message}</div>;\n  }\n  return <div className=\"is-valid valid-feedback\">all good</div>;\n};\n\nexport default FormError;\n","import React, { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport FormError from \"./formError\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from 'axios';\nimport { Header, SideBar, PageHeaderTitle, Footer, firestore, Map, PlacesAutocomplete } from \"../../partials\";\nimport { fetchStates, fetchCities  } from '../../util';\nimport \"./form.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { handleError } from \"../../util\";\n\nconst validationSchema = Yup.object().shape({\n  surname: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"name is required\"),\n    firstname: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"name is required\"),\n  gender: Yup.string().required(\"gender is required\"),\n  address: Yup.string().required(\"address is required\"),\n  phone: Yup.number(\"must be a phone number\").required(\"phone is required\"),\n  bustop: Yup.string().required(\"Nearest bustop is required\"),\n  city: Yup.string().required(\"city is required \"),\n  state: Yup.string().required(\"state is required\"),\n  country: Yup.string().required(\"country is required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  age: Yup.string().required(\"Age is Required\"),\n  homecell: Yup.string().required(\"Cell is Required\"),\n});\n\nfunction FirstTimers() {\n  const dispatch = useDispatch();\n  const userStore = useSelector(state => state.user);\n  const Cellstore = useSelector(state => state.cell);\n\n  // const { locations } = Cellstore;\n  const { countries, states, cities } = userStore;\n  const [homecell, setCell] = useState('');\n  const [locations, setLocations] = useState([]);\n  const [currentLocation, setLocation] = useState({lat: 6.589953434977126, lng: 3.375679742065203 });\n\n  useEffect(() => {\n    document.getElementById(\"members\").classList.add(\"active\");\n    fetchCells();\n  },[]);\n\n  const fetchCells = async () => {\n    await firestore.collection('cells')\n    .onSnapshot((querySnapshot) => {\n      const results = [];\n      const restructured = [];\n      querySnapshot.forEach((doc) => {\n        results.push({id: doc.id, ...doc.data()});\n      });\n  \n      for(let cell of results) {\n        restructured.push({coordinator: cell.coordinator, address: cell.address, lng: cell.coordinates.lng, lat: cell.coordinates.lat, id: cell.id, phone: cell.phone });\n      }\n      setLocations(restructured);\n    }, handleError);\n  }\n\n  const setHomeCell = (id) => {\n    setCell(id);\n    toast.success(\"Cell has been successfully assigned to user.\", {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  }\n\n  const convertAddressToLatLng = async (address) => {\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?address=${address}&key=${process.env.REACT_APP_MAPKEY}`;\n    const { data } = await axios.get(url);\n    const coords = data.results[0].geometry.location;\n    setLocation(coords);\n  \n    // geocode.fromAddress(address).then(\n    //   response => {\n    //   const coordinates = response.results[0].geometry.location;\n    //   console.log('coords', coordinates);\n    //   },\n    //   error => {\n    //     console.error(error);\n    //   }\n    // );\n  };\n\n  const onselectCountry = ({ target }) => {\n     fetchStates(dispatch, target.value);\n  };\n  \n  const onselectState = ({ target }) => {\n      fetchCities(dispatch, target.value);\n  };\n  \n  \n  return (\n    <div className=\"page\">\n      <Helmet>\n        <title>First Timer</title>\n      </Helmet>\n      <Header />\n      <div className=\"page-content d-flex align-items-stretch\">\n        <SideBar />\n\n        <div className=\"content-inner\">\n          <PageHeaderTitle title=\"First Timer\" currpg=\"Add First Timer\" />\n          \n          <section className=\"forms\">\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-lg-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header d-flex align-items-center\">\n                      <h3 className=\"h4\">\n                        MVP - <small>Plan Cell for First Timer</small>\n                      </h3>\n                    </div>\n                    <div className=\"card-body\">\n                    <Map locations={locations} zoomLevel={11} currentLocation={currentLocation} setHomeCell={setHomeCell}/> \n          \n                      <Formik\n                        initialValues={{\n                          firstname: \"\",\n                          gender: \"\",\n                          email: \"\",\n                          phone: \"\",\n                          address: \"\",\n                          city: \"\",\n                          state: \"\",\n                          homecell: \"\",\n                          comment: \"\",\n                          surname: '',\n                          age: \"\",\n                          location: \"\",\n                        }}\n                        validationSchema={validationSchema}\n                        onSubmit={async (values, { setSubmitting, resetForm }) => {\n                          setSubmitting(true);\n                        \n                          try{\n                            const user =  {\n                              firstname: values.firstname,\n                              gender: values.gender,\n                              email: values.email,\n                              phone: values.phone,\n                              address: values.address,\n                              city: values.city,\n                              state: values.state,\n                              country: values.country,\n                              bustop: values.bustop,\n                              comment: values.comment,\n                              role: 'CellLeader',\n                              surname: values.surname,\n                              age: values.age,\n                              cell: values.homecell\n                              };\n                              console.log('user', user);\n                            \n                                await firestore.collection('users').add(user);\n                                resetForm();\n                                setSubmitting(false);\n                                toast.success(\"Cell Successfully added\", {\n                                    position: \"top-right\",\n                                    autoClose: 5000,\n                                    hideProgressBar: false,\n                                    closeOnClick: true,\n                                    pauseOnHover: true,\n                                    draggable: true,\n                                    progress: undefined,\n                                  });\n\n                        } catch (error) {\n                          console.log('error', error);\n                            toast.error(`${error}`, {\n                                position: \"top-right\",\n                                autoClose: 5000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                                progress: undefined,\n                              });\n                        }\n\n                        }}\n                      >\n                        {({\n                          values,\n                          handleSubmit,\n                          isSubmitting,\n                          handleChange,\n                          touched,\n                          errors,\n                          handleBlur,\n                        }) => (\n                          <Form onSubmit={handleSubmit}>\n                            <div className=\"line\"></div>\n\n                            <div className=\"row\">\n                \n                              <div className=\"col-sm-12 col-md-12 col-lg-12\">\n                                <div className=\"row\">\n\n                                <div className=\"col-md-4 col-sm-12 col-lg-4 col-xs-12\">\n                                    <div className=\"form-group-material\">\n                                      <Field\n                                        id=\"surname\"\n                                        type=\"text\"\n                                        name=\"surname\"\n                                        className={\n                                          touched.surname && errors.surname\n                                            ? \"input-material is-invalid\"\n                                            : \"input-material\"\n                                        }\n                                        onChange={handleChange}\n                                        value={values.surname}\n                                        onBlur={handleBlur}\n                                      />\n                                      <FormError\n                                        touched={touched.surname}\n                                        message={errors.surname}\n                                      />\n                                      <label\n                                        htmlFor=\"name\"\n                                        className=\"label-material\"\n                                      >\n                                        Surname\n                                      </label>\n                                    </div>\n                                  </div>\n\n\n                                  <div className=\"col-md-4 col-sm-12 col-lg-4 col-xs-8\">\n                                    <div className=\"form-group-material\">\n                                      <Field\n                                        id=\"firstname\"\n                                        type=\"text\"\n                                        name=\"firstname\"\n                                        className={\n                                          touched.firstname && errors.firstname\n                                            ? \"input-material is-invalid\"\n                                            : \"input-material\"\n                                        }\n                                        onChange={handleChange}\n                                        value={values.firstname}\n                                        onBlur={handleBlur}\n                                      />\n                                      <FormError\n                                        touched={touched.firstname}\n                                        message={errors.firstname}\n                                      />\n                                      <label\n                                        htmlFor=\"name\"\n                                        className=\"label-material\"\n                                      >\n                                        Firstname\n                                      </label>\n                                    </div>\n                                  </div>\n\n\n                              \n\n                                  <div className=\"col-md-12 col-sm-12 col-lg-4 col-xs-4\">\n                                    <div className=\"select input-material\">\n                                      <select\n                                        className={\n                                          touched.gender && errors.gender\n                                            ? \"input-material select-text is-invalid\"\n                                            : \"input-material select-text\"\n                                        }\n                                        name=\"gender\"\n                                        onChange={handleChange}\n                                        value={values.gender}\n                                        onBlur={handleBlur}\n                                      >\n                                        <option>Gender</option>\n                                        <option value=\"male\">Male</option>\n                                        <option value=\"female\">Female</option>\n                                      </select>\n                                      <span className=\"select-highlight\"></span>\n                                      <span className=\"select-bar\"></span>\n                                      <FormError\n                                        touched={touched.gender}\n                                        message={errors.gender}\n                                      />\n                                      {/* <label class=\"select-label\">Gender</label> */}\n                                    </div>\n                                  </div>\n\n                                  <div className=\"col-sm-12 col-md-4 col-lg-4\">\n                                    <div className=\"form-group-material\">\n                                      <Field\n                                        id=\"age\"\n                                        type=\"text\"\n                                        name=\"age\"\n                                        className={\n                                          touched.age && errors.age\n                                            ? \"input-material is-invalid\"\n                                            : \"input-material \"\n                                        }\n                                        onChange={handleChange}\n                                        value={values.age}\n                                        onBlur={handleBlur}\n                                      />\n                                      <FormError\n                                        touched={touched.age}\n                                        message={errors.age}\n                                      />\n                                      <label\n                                        htmlFor=\"email\"\n                                        className=\"label-material\"\n                                      >\n                                        Age\n                                      </label>\n                                    </div>\n                                  </div>\n\n\n                                  <div className=\"col-sm-12 col-md-4 col-lg-4\">\n                                    <div className=\"form-group-material\">\n                                      <Field\n                                        id=\"email\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        className={\n                                          touched.gender && errors.gender\n                                            ? \"input-material is-invalid\"\n                                            : \"input-material \"\n                                        }\n                                        onChange={handleChange}\n                                        value={values.email}\n                                        onBlur={handleBlur}\n                                      />\n                                      <FormError\n                                        touched={touched.email}\n                                        message={errors.email}\n                                      />\n                                      <label\n                                        htmlFor=\"email\"\n                                        className=\"label-material\"\n                                      >\n                                        Email\n                                      </label>\n                                    </div>\n                                  </div>\n\n\n                                  <div className=\"col-sm-12 col-md-3 col-lg-3\">\n                                    <div className=\"form-group-material\">\n                                      <Field\n                                        id=\"phone\"\n                                        type=\"text\"\n                                        name=\"phone\"\n                                        className={\n                                          touched.phone && errors.phone\n                                            ? \"input-material is-invalid\"\n                                            : \"input-material \"\n                                        }\n                                        onChange={handleChange}\n                                        value={values.phone}\n                                        onBlur={handleBlur}\n                                      />\n                                      <FormError\n                                        touched={touched.phone}\n                                        message={errors.phone}\n                                      />\n                                      <label\n                                        htmlFor=\"phone\"\n                                        className=\"label-material\"\n                                      >\n                                        Phone\n                                      </label>\n                                    </div>\n                                  </div>\n                                  <div className=\"col-md-6 col-sm-12 col-lg-7 col-xs-12\">\n                                    <div className=\"form-group-material\">\n                                      <Field\n                                        className={\n                                          touched.address && errors.address\n                                            ? \"input-material is-invalid\"\n                                            : \"input-material\"\n                                        }\n                                      \n                                        name=\"address\"\n                                        onChange={handleChange}\n                                        value={values.address}\n                                        onBlur={(value) => {\n                                          handleBlur(value)\n                                          convertAddressToLatLng(value.target.value)}}\n                                      />\n                                      <FormError\n                                        touched={touched.address}\n                                        message={errors.address}\n                                      />\n                                       <label\n                                        htmlFor=\"phone\"\n                                        className=\"label-material\"\n                                      >\n                                        Home Address\n                                      </label>\n                                    </div>\n                                  </div>\n                                  <div className=\"col-md-4 col-sm-11 col-lg-4 col-xs-12\">\n                                    <div className=\"select input-material\">\n                                      <select\n                                        className={\n                                          touched.country && errors.country\n                                            ? \"input-material select-text is-invalid\"\n                                            : \"input-material select-text\"\n                                        }\n                                        name=\"country\"\n                                        onChange={(value) => {\n                                          handleChange(value)\n                                          onselectCountry(value)\n                                      }}\n                                        value={values.country}\n                                        onBlur={handleBlur}\n                                      >\n                                        <option>Country</option>\n                                        {countries.map((country)=> ( <option value={country.id} key={country.id}>{country.name}</option> ))}\n                                        \n                                        \n                                      </select>\n                                      <span className=\"select-highlight\"></span>\n                                      <span className=\"select-bar\"></span>\n                                      <FormError\n                                        touched={touched.country}\n                                        message={errors.country}\n                                      />\n                                      {/* <label class=\"select-label\">state</label> */}\n                                    </div>\n                                  </div>\n                 \n\n                                  <div className=\"col-md-4 col-sm-11 col-lg-4 col-xs-6\">\n                                    <div className=\"select input-material\">\n                                      <select\n                                        className={\n                                          touched.state && errors.state\n                                            ? \"input-material select-text is-invalid\"\n                                            : \"input-material select-text\"\n                                        }\n                                        name=\"state\"\n                                        onChange={(value) => {\n                                          handleChange(value)\n                                          onselectState(value)\n                                      }}\n                                        value={values.state}\n                                        onBlur={handleBlur}\n                                      >\n                                        <option>State</option>\n                                        {states.map((state)=> ( <option value={state.id} key={state.id}>{state.name}</option> ))}\n                                      </select>\n                                      <span className=\"select-highlight\"></span>\n                                      <span className=\"select-bar\"></span>\n                                      <FormError\n                                        touched={touched.state}\n                                        message={errors.state}\n                                      />\n                                      {/* <label class=\"select-label\">state</label> */}\n                                    </div>\n                                  </div>\n\n\n                                  <div className=\"col-md-4 col-sm-12 col-lg-4 col-xs-6\">\n                                    <div className=\"select input-material\">\n                                      <select\n                                        className={\n                                          touched.city && errors.city\n                                            ? \"input-material select-text is-invalid\"\n                                            : \"input-material select-text\"\n                                        }\n                                        name=\"city\"\n                                        onChange={handleChange}\n                                        value={values.city}\n                                        onBlur={handleBlur}\n                                      >\n                                        <option>City</option>\n                                        {cities.map((city)=> ( <option value={city.id} key={city.id}>{city.name}</option> ))}\n                                      </select>\n                                      <span className=\"select-highlight\"></span>\n                                      <span className=\"select-bar\"></span>\n                                      <FormError\n                                        touched={touched.city}\n                                        message={errors.city}\n                                      />\n                                      {/* <label class=\"select-label\">city</label> */}\n                                    </div>\n                                  </div>\n\n                                  <div className=\"col-sm-12 col-md-4 col-lg-4\">\n                                    <div className=\"form-group-material\">\n                                      <Field\n                                        id=\"bustop\"\n                                        type=\"text\"\n                                        name=\"bustop\"\n                                        className={\n                                          touched.bustop && errors.bustop\n                                            ? \"input-material is-invalid\"\n                                            : \"input-material \"\n                                        }\n                                        onChange={handleChange}\n                                        value={values.bustop}\n                                        onBlur={handleBlur}\n                                      />\n                                      <FormError\n                                        touched={touched.bustop}\n                                        message={errors.bustop}\n                                      />\n                                      <label\n                                        htmlFor=\"bustop\"\n                                        className=\"label-material\"\n                                      >\n                                        Nearest bustop\n                                      </label>\n                                    </div>\n                                  </div>\n                                 \n                                  <div className=\"col-md-12 col-sm-12 col-lg-4 col-xs-4\">\n                                    <div className=\"select input-material\">\n                                      <select\n                                        className={\n                                          touched.homecell && errors.homecell\n                                            ? \"input-material select-text is-invalid\"\n                                            : \"input-material select-text\"\n                                        }\n                                        name=\"homecell\"\n                                        onChange={handleChange}\n                                        value={homecell}\n                                        onBlur={handleBlur}\n                                      >\n                                        <option>Cell</option>\n                                        {locations.map((location)=> ( <option value={location.id} key={location.id} selected=\"\">{location.coordinator}</option> ))}\n                                      </select>\n                                      <span className=\"select-highlight\"></span>\n                                      <span className=\"select-bar\"></span>\n                                      <FormError\n                                        touched={touched.homecell}\n                                        message={errors.homecell}\n                                      />\n                                    </div>\n                                  </div>\n\n                                  <div className=\"form-group row\">\n                                    <div className=\"col-sm-12 col-md-12 col-lg-12 offset-sm-3\">\n                                      <button\n                                        type=\"reset\"\n                                        className=\"btn btn-secondary\"\n                                      >\n                                        Cancel\n                                      </button>{\" \"}\n                                      <button\n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                      >\n                                        Save changes\n                                      </button>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </Form>\n                        )}\n                      </Formik>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n          <Footer />\n          {/* <!-- Page Footer--> */}\n          {/* FIRST TIMER CONTENT */}\n        </div>\n      </div>\n      {/* CLOSE SIDE BAR */}\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default FirstTimers;\n","import React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { v4 as uuidv4 } from 'uuid';\nimport FormError from \"./formError\";\nimport { Formik, Form, Field } from \"formik\";\nimport TextField from '@material-ui/core/TextField';\nimport { useHistory } from 'react-router-dom';\nimport * as Yup from \"yup\";\nimport _ from 'lodash';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Header, SideBar, PageHeaderTitle, Footer, firestore, auth } from \"../../partials\";\nimport { fetchStates, fetchCities } from \"../../util\";\nimport \"./form.css\";\n\n\nconst validationSchema = Yup.object().shape({\n  firstname: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"name is required\"),\n  surname: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"name is required\"),\n  gender: Yup.string().required(\"gender is required\"),\n  address: Yup.string().required(\"address is required\"),\n  phone: Yup.number(\"must be a phone number\").required(\"phone is required\"),\n  role: Yup.string().required(\"User Role is required\"),\n  city: Yup.string().required(\"city is required \"),\n  state: Yup.string().required(\"state is required\"),\n  country: Yup.string().required(\"country is required\"),\n  password: Yup.string().required(\"Password is required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n});\n\nfunction NewUser(props) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const userStore = useSelector(state => state.user);\n  const { countries, states, cities, roles} = userStore;\n\n  useEffect(() => {\n    document.getElementById(\"members\").classList.add(\"active\");\n  });\n\n  const validateEmail = e => {\n    // regex from http://stackoverflow.com/questions/46155/validate-email-address-in-javascript\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(e);\n  }\n\n  const onselectCountry = ({ target }) => {\n    fetchStates(dispatch, target.value);\n };\n \n const onselectState = ({ target }) => {\n     fetchCities(dispatch, target.value);\n };\n\n  const getStyle = () => {\n    return {\n      height: 600,\n      width: 350,\n      margin: 20,\n      textAlign: 'center',\n      display: 'inline-block',\n    }\n  }\n\n  return (\n    <div className=\"page\">\n      <Helmet>\n        <title>New User</title>\n      </Helmet>\n      <Header />\n      \n      <div className=\"page-content d-flex align-items-stretch\">\n        <SideBar />\n\n        <div className=\"content-inner\">\n          <PageHeaderTitle title=\"New User\" currpg=\"New User\" />\n    \n          <section className=\"forms\">\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-lg-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header d-flex align-items-center\">\n                      <h3 className=\"h4\">\n                        <small>New User</small>\n                      </h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <Formik\n                        initialValues={{\n                          firstname: \"\",\n                          surname: \"\",\n                          gender: \"\",\n                          email: \"\",\n                          phone: \"\",\n                          address: \"\",\n                          city: \"\",\n                          state: \"\",\n                          cell: \"\",\n                          role: \"\",\n                          country: \"\",\n                          password: \"\",\n                        }}\n                        validationSchema={validationSchema}\n                        onSubmit={async(values, { setSubmitting, resetForm }) => {\n                          setSubmitting(true);\n                            try{\n                             \n                              // pass through auth and get uid\n                              const reg = await auth.createUserWithEmailAndPassword(values.email, values.password);\n                              const uid = reg.user.uid;\n\n                                const user =  {\n                                    id: uid,\n                                    firstname: values.firstname,\n                                    surname: values.surname,\n                                    gender: values.gender,\n                                    email: values.email,\n                                    phone: values.phone,\n                                    address: values.address,\n                                    city: values.city,\n                                    state: values.state,\n                                    country: values.country,\n                                    cell: values.cell,\n                                    role: values.role,\n                                  };\n                                 \n                                    await firestore.collection('users').doc(uid).set(user);\n                                    resetForm();\n                                    setSubmitting(false);\n                                    toast.success(\"Your account has been Successfully added\", {\n                                        position: \"top-right\",\n                                        autoClose: 5000,\n                                        hideProgressBar: false,\n                                        closeOnClick: true,\n                                        pauseOnHover: true,\n                                        draggable: true,\n                                        progress: undefined,\n                                      });\n                                    history.push(\"/dashboard/members\");\n\n                            } catch (error) {\n                              console.log('error', error);\n                                toast.error(`${error}`, {\n                                    position: \"top-right\",\n                                    autoClose: 5000,\n                                    hideProgressBar: false,\n                                    closeOnClick: true,\n                                    pauseOnHover: true,\n                                    draggable: true,\n                                    progress: undefined,\n                                  });\n                            }\n                         \n                        }}\n                      >\n                        {({\n                          values,\n                          handleSubmit,\n                          isSubmitting,\n                          handleChange,\n                          touched,\n                          errors,\n                          handleBlur,\n                        }) => (\n                          <Form onSubmit={handleSubmit}>\n                            <div className=\"row\">\n                              <div className=\"col-sm-12 col-md-12 col-lg-12\">\n                                <div className=\"row\">\n                                  <div className=\"col-md-12 col-sm-12 col-lg-4 col-xs-4\">\n                                    <div className=\"form-group-material\">\n                                      <Field\n                                        id=\"surname\"\n                                        type=\"text\"\n                                        name=\"surname\"\n                                        className={\n                                          touched.surname && errors.surname\n                                            ? \"input-material is-invalid\"\n                                            : \"input-material\"\n                                        }\n                                        onChange={handleChange}\n                                        value={values.surname}\n                                        onBlur={handleBlur}\n                                      />\n                                      <FormError\n                                        touched={touched.surname}\n                                        message={errors.surname}\n                                      />\n                                      <label\n                                        htmlFor=\"name\"\n                                        className=\"label-material\"\n                                      >\n                                        Surname\n                                      </label>\n                                    </div>\n                                  </div>\n\n\n                                  <div className=\"col-md-12 col-sm-12 col-lg-4 col-xs-4\">\n                                    <div className=\"form-group-material\">\n                                      <Field\n                                        id=\"firstname\"\n                                        type=\"text\"\n                                        name=\"firstname\"\n                                        className={\n                                          touched.firstname && errors.firstname\n                                            ? \"input-material is-invalid\"\n                                            : \"input-material\"\n                                        }\n                                        onChange={handleChange}\n                                        value={values.firstname}\n                                        onBlur={handleBlur}\n                                      />\n                                      <FormError\n                                        touched={touched.firstname}\n                                        message={errors.firstname}\n                                      />\n                                      <label\n                                        htmlFor=\"name\"\n                                        className=\"label-material\"\n                                      >\n                                        Firstname \n                                      </label>\n                                    </div>\n                                  </div>\n\n                                  <div className=\"col-md-12 col-sm-12 col-lg-4 col-xs-4\">\n                                    <div class=\"select input-material\">\n                                      <select\n                                        className={\n                                          touched.gender && errors.gender\n                                            ? \"input-material select-text is-invalid\"\n                                            : \"input-material select-text\"\n                                        }\n                                        name=\"gender\"\n                                        onChange={handleChange}\n                                        value={values.gender}\n                                        onBlur={handleBlur}\n                                      >\n                                        <option>Gender</option>\n                                        <option value=\"male\">Male</option>\n                                        <option value=\"female\">Female</option>\n                                      </select>\n                                      <span class=\"select-highlight\"></span>\n                                      <span class=\"select-bar\"></span>\n                                      <FormError\n                                        touched={touched.gender}\n                                        message={errors.gender}\n                                      />\n                                    </div>\n                                  </div>\n\n                                  <div className=\"col-sm-12 col-md-6 col-lg-8\">\n                                    <div className=\"form-group-material\">\n                                      <Field\n                                        id=\"email\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        className={\n                                          touched.gender && errors.gender\n                                            ? \"input-material is-invalid\"\n                                            : \"input-material \"\n                                        }\n                                        onChange={handleChange}\n                                        value={values.email}\n                                        onBlur={handleBlur}\n                                      />\n                                      <FormError\n                                        touched={touched.email}\n                                        message={errors.email}\n                                      />\n                                      <label\n                                        htmlFor=\"email\"\n                                        className=\"label-material\"\n                                      >\n                                        Email\n                                      </label>\n                                    </div>\n                                  </div>\n\n\n                                  <div className=\"col-md-5 col-sm-11 col-lg-4 col-xs-12\">\n                                    <div class=\"select input-material\">\n                                      <select\n                                        className={\n                                          touched.role && errors.role\n                                            ? \"input-material select-text is-invalid\"\n                                            : \"input-material select-text\"\n                                        }\n                                        name=\"role\"\n                                        onChange={handleChange}\n                                        value={values.role}\n                                        onBlur={handleBlur}\n                                      >\n                                        <option>User Role</option>\n                                        {roles.map((role) => (  <option value={role.uid}> {role.name} </option> ))}\n                                       \n                                        \n                                      </select>\n                                      <span class=\"select-highlight\"></span>\n                                      <span class=\"select-bar\"></span>\n                                      <FormError\n                                        touched={touched.role}\n                                        message={errors.role}\n                                      />\n                                      {/* <label class=\"select-label\">state</label> */}\n                                    </div>\n                                  </div>\n\n\n                                  <div className=\"col-sm-12 col-md-8 col-lg-8 col-lg-6\">\n                                    <div className=\"form-group-material\">\n                                      <Field\n                                        id=\"phone\"\n                                        type=\"text\"\n                                        name=\"phone\"\n                                        className={\n                                          touched.phone && errors.phone\n                                            ? \"input-material is-invalid\"\n                                            : \"input-material \"\n                                        }\n                                        onChange={handleChange}\n                                        value={values.phone}\n                                        onBlur={handleBlur}\n                                      />\n                                      <FormError\n                                        touched={touched.phone}\n                                        message={errors.phone}\n                                      />\n                                      <label\n                                        htmlFor=\"phone\"\n                                        className=\"label-material\"\n                                      >\n                                        Phone\n                                      </label>\n                                    </div>\n                                  </div>\n\n\n                                  <div className=\"col-md-4 col-sm-11 col-lg-4 col-xs-12\">\n                                    <div class=\"select input-material\">\n                                      <select\n                                        className={\n                                          touched.country && errors.country\n                                            ? \"input-material select-text is-invalid\"\n                                            : \"input-material select-text\"\n                                        }\n                                        name=\"country\"\n                                        onChange={(value) => { \n                                          onselectCountry(value);\n                                          handleChange(value) \n                                        }}\n                                        value={values.country}\n                                        onBlur={handleBlur}\n                                      >\n                                        <option>Country</option>\n                                        {countries.map((country) => ( <option value={country.id} key={country.id}> {country.name} </option> ))}\n                                      </select>\n                                      <span class=\"select-highlight\"></span>\n                                      <span class=\"select-bar\"></span>\n                                      <FormError\n                                        touched={touched.country}\n                                        message={errors.country}\n                                      />\n                                    </div>\n                                  </div>\n\n\n                                  <div className=\"col-md-8 col-sm-12 col-lg-8 col-xs-12\">\n                                    <div className=\"form-group-material\">\n                                      <Field\n                                        className={\n                                          touched.address && errors.address\n                                            ?  \"input-material is-invalid\"\n                                            : \"input-material \"\n                                        }\n                                        \n                                        name=\"address\"\n                                        onChange={handleChange}\n                                        value={values.address}\n                                        onBlur={handleBlur}\n                                      />\n                                       <label\n                                        htmlFor=\"address\"\n                                        className=\"label-material\"\n                                      >\n                                        Address\n                                      </label>\n                                      <FormError\n                                        touched={touched.address}\n                                        message={errors.address}\n                                      />\n                                    </div>\n                                  </div>\n\n                                  <div className=\"col-md-4 col-sm-11 col-lg-4 col-xs-12\">\n                                    <div class=\"select input-material\">\n                                      <select\n                                        className={\n                                          touched.state && errors.state\n                                            ? \"input-material select-text is-invalid\"\n                                            : \"input-material select-text\"\n                                        }\n                                        name=\"state\"\n                                        onChange={(value) => {\n                                          onselectState(value)\n                                          handleChange(value)\n                                        }}\n                                        value={values.state}\n                                        onBlur={handleBlur}\n                                      >\n                                        <option>State</option> \n                                        {states.map((state) => ( <option value={state.id} key={state.id}> {state.name} </option> ))} \n                                      </select>\n                                      <span class=\"select-highlight\"></span>\n                                      <span class=\"select-bar\"></span>\n                                      <FormError\n                                        touched={touched.state}\n                                        message={errors.state}\n                                      />\n                                      {/* <label class=\"select-label\">state</label> */}\n                                    </div>\n                                  </div>\n\n                                  <div className=\"col-md-4 col-sm-12 col-lg-4 col-xs-12\">\n                                    <div class=\"select input-material\">\n                                      <select\n                                        className={\n                                          touched.state && errors.state\n                                            ? \"input-material select-text is-invalid\"\n                                            : \"input-material select-text\"\n                                        }\n                                        name=\"city\"\n                                        onChange={handleChange}\n                                        value={values.city}\n                                        onBlur={handleBlur}\n                                      >\n                                        <option>City</option>\n                                        {cities.map((city) => ( <option value={city.id} key={city.id}> {city.name} </option> ))}\n                                      </select>\n                                      <span class=\"select-highlight\"></span>\n                                      <span class=\"select-bar\"></span>\n                                      <FormError\n                                        touched={touched.city}\n                                        message={errors.city}\n                                      />\n                                      {/* <label class=\"select-label\">city</label> */}\n                                    </div>\n                                  </div>\n\n                                  <div className=\"col-md-12 col-sm-12 col-lg-4 col-xs-4\">\n                                    <div className=\"form-group-material\">\n                                      <Field\n                                        id=\"password\"\n                                        type=\"password\"\n                                        name=\"password\"\n                                        className={\n                                          touched.password && errors.password\n                                            ? \"input-material is-invalid\"\n                                            : \"input-material\"\n                                        }\n                                        onChange={handleChange}\n                                        value={values.password}\n                                        onBlur={handleBlur}\n                                      />\n                                      <FormError\n                                        touched={touched.password}\n                                        message={errors.password}\n                                      />\n                                      <label\n                                        htmlFor=\"name\"\n                                        className=\"label-material\"\n                                      >\n                                        Password \n                                      </label>\n                                    </div>\n                                  </div>\n                                 \n                                 <div className=\"col-sm-12 col-md-12 col-lg-12\">\n                                    <div className=\"form-group-material\">\n                                      \n                                      \n                                    </div>\n                                  </div>\n                                 \n                                  <div className=\"form-group row\">\n                                    <div className=\"col-sm-12 offset-sm-3\">\n                                      <button\n                                        type=\"reset\"\n                                        className=\"btn btn-secondary\"\n                                      >\n                                        Cancel\n                                      </button>{\" \"}\n                                      <button\n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                      >\n                                        Save changes\n                                      </button>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </Form>\n                        )}\n                      </Formik>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n          <Footer />\n          {/* <!-- Page Footer--> */}\n          {/* FIRST TIMER CONTENT */}\n        </div>\n      </div>\n      {/* CLOSE SIDE BAR */}\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default NewUser;\n","import React, { useState } from 'react';\n// import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { withStyles } from '@material-ui/core/styles';\n// import DeleteForeverRoundedIcon from '@material-ui/icons/DeleteForeverRounded';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\n// import Icon from '@material-ui/core/Icon';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination\n} from '@material-ui/core';\n\n// import { getInitials } from 'helpers';\n\nconst styles = theme => ({\n  root: {\n    // border: \"2px solid red\",\n    marginBottom: \"20px\"\n  },\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n});\n\nconst MVP_MemberLists = ({ classes, candidates = [{name:'ch'}] }) => {\n\n  const [selectedCandidates, setselectedCandidates] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleSelectAll = event => {\n\n    let selectedCandidates;\n\n    if (event.target.checked) {\n      selectedCandidates = candidates.map(candidate => candidate.id);\n    } else {\n      selectedCandidates = [];\n    }\n\n    setselectedCandidates(selectedCandidates);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCandidates.indexOf(id);\n    let newselectedCandidates = [];\n\n    if (selectedIndex === -1) {\n      newselectedCandidates = newselectedCandidates.concat(selectedCandidates, id);\n    } else if (selectedIndex === 0) {\n      newselectedCandidates = newselectedCandidates.concat(selectedCandidates.slice(1));\n    } else if (selectedIndex === selectedCandidates.length - 1) {\n      newselectedCandidates = newselectedCandidates.concat(selectedCandidates.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newselectedCandidates = newselectedCandidates.concat(\n        selectedCandidates.slice(0, selectedIndex),\n        selectedCandidates.slice(selectedIndex + 1)\n      );\n    }\n\n    setselectedCandidates(newselectedCandidates);\n  };\n\n  const handlePageChange = (event, page) => {\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <Card\n      className={classes.root}\n    >\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedCandidates.length === candidates.length}\n                      color=\"primary\"\n                      indeterminate={\n                        selectedCandidates.length > 0 &&\n                        selectedCandidates.length < candidates.length\n                      }\n                      onChange={handleSelectAll}\n                    />\n                  </TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Email</TableCell>\n                  <TableCell>Branch</TableCell>\n                  <TableCell>Phone</TableCell>\n                  <TableCell>Registration date</TableCell>\n                  <TableCell>Edit</TableCell>\n                  <TableCell>Delete</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                      \n                {candidates.slice(0, rowsPerPage).map(candidate => (\n                  <TableRow\n                    className={classes.tableRow}\n                    hover\n                    key={candidate.id}\n                    selected={selectedCandidates.indexOf(candidate.id) !== -1}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={selectedCandidates.indexOf(candidate.id) !== -1}\n                        color=\"primary\"\n                        onChange={event => handleSelectOne(event, candidate.id)}\n                        value=\"true\"\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <div className={classes.nameContainer}>\n                        {/* <Avatar\n                          className={classes.avatar}\n                          src={candidate.avatarUrl}\n                        >\n                        </Avatar> */}\n                        <Typography variant=\"body1\">{candidate.surname} {candidate.firstname}</Typography>\n                      </div>\n                    </TableCell>\n                    <TableCell>{candidate.email}</TableCell>\n                    <TableCell>\n                    </TableCell>\n                    <TableCell>{candidate.phone}</TableCell>\n                    <TableCell>\n                      <Moment format=\"D MMM YYYY\" withTitle>\n                        {candidate.gpaDate}\n                      </Moment>\n                    </TableCell>\n                    <TableCell>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        startIcon={<EditTwoToneIcon />}\n\n                      >\n                        Edit\n                    </Button>\n                    </TableCell>\n                    <TableCell>\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}\n                        startIcon={<DeleteIcon />}\n                      >\n                        Delete\n                    </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <TablePagination\n          component=\"div\"\n          count={candidates.length}\n          onChangePage={handlePageChange}\n          onChangeRowsPerPage={handleRowsPerPageChange}\n          page={page}\n          rowsPerPage={rowsPerPage}\n          rowsPerPageOptions={[5, 10, 25]}\n        />\n      </CardActions>\n    </Card>\n  );\n};\n\nMVP_MemberLists.propTypes = {\n  className: PropTypes.string,\n  candidates: PropTypes.array.isRequired\n};\n\n\nexport default withStyles(styles)(MVP_MemberLists);\n","import React, { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport uuid from \"react-uuid\";\nimport FormError from \"./formError\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Header, SideBar, PageHeaderTitle, Footer, firestore } from \"../../partials\";\nimport { handleError } from '../../util';\nimport \"./form.css\";\nimport \"./users.css\"\nimport MemberList from './MVP_MemberLists';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"name is required\"),\n  gender: Yup.string().required(\"gender is required\"),\n  address: Yup.string().required(\"address is required\"),\n  phone: Yup.number(\"must be a phone number\").required(\"phone is required\"),\n  cell: Yup.string().required(\"cell is required\"),\n  city: Yup.string().required(\"city is required \"),\n  state: Yup.string().required(\"state is required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n});\n\nfunction Members() {\n  const [members, setMember] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    document.getElementById(\"members\").classList.add(\"active\");\n    fetchUsers();\n  });\n\n  const fetchUsers = async () => {\n    await firestore.collection('users')\n    .onSnapshot((querySnapshot) => {\n      const results = [];\n      querySnapshot.forEach((doc) => {\n        results.push(doc.data());\n      });\n      console.log('members', results)\n      setMember(results);\n      // store in redux\n      setLoading(false);\n    }, handleError);\n  }\n\n  return (\n    <div className=\"page\">\n      <Helmet>\n        <title>Gloryplus members</title>\n      </Helmet>\n      {/* HEADER PART */}\n      <Header />\n      <div className=\"page-content d-flex align-items-stretch\">\n        <SideBar />\n        <div className=\"content-inner\">\n          <PageHeaderTitle title=\"Members\" currpg=\"Members\" />\n          <div className=\"container-fluid mt-3 mb-4\">\n            <MemberList candidates={members} />\n          </div>\n          <Footer />\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default Members;\n","import React from \"react\";\nimport { useField, useFormikContext } from \"formik\";\nimport DatePicker from \"react-datepicker\";\n\nexport const DatePickerField = ({ ...props }) => {\n  const { setFieldValue } = useFormikContext();\n  const [field] = useField(props);\n  return (\n    <DatePicker\n      {...field}\n      {...props}\n      selected={(field.value && new Date(field.value)) || null}\n      onChange={(val) => {\n        setFieldValue(field.name, val);\n      }}\n    />\n  );\n};\n\nexport default DatePickerField;\n","import React from \"react\";\n\nconst FormError = ({ touched, message }) => {\n  if (!touched) {\n    return <div className=\"is-valid valid-feedback\"></div>;\n  }\n  if (message) {\n    return <div className=\"is-invalid invalid-feedback\">{message}</div>;\n  }\n  return <div className=\"is-valid valid-feedback\">all good</div>;\n};\n\nexport default FormError;\n","import React from \"react\";\n\nclass Thumb extends React.Component {\n  state = {\n    loading: false,\n    thumb: undefined,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.file) {\n      return;\n    }\n\n    this.setState({ loading: true }, () => {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({ loading: false, thumb: reader.result });\n      };\n\n      reader.readAsDataURL(nextProps.file);\n    });\n  }\n\n  render() {\n    const { file } = this.props;\n    const { loading, thumb } = this.state;\n\n    if (!file) {\n      return null;\n    }\n\n    if (loading) {\n      return <p>loading...</p>;\n    }\n\n    return (\n      <img\n        src={thumb}\n        alt={file.name}\n        className=\"img-thumbnail mt-2\"\n        height={200}\n        width={200}\n      />\n    );\n  }\n}\n\nexport default Thumb;\n","import React, { useEffect, useState, use } from \"react\";\nimport moment from \"moment\";\nimport { Helmet } from \"react-helmet\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { v4 as uuidv4 } from 'uuid';\nimport DatePicker from \"../event/DatePicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./event.css\";\n// FILE\nimport FormError from \"./formError\";\nimport Thumb from \"./thumb\";\nimport { Header, SideBar, PageHeaderTitle, firestore, ProgressBar } from \"../../partials\";\n\n\nconst validationSchema = Yup.object().shape({\n  file: Yup.mixed().required(\"image upload is required\"),\n  title: Yup.string().required(\"event title is required\"),\n  location: Yup.string().required(\"event address is required\"),\n  date: Yup.string().required(\"event date is required\"),\n  details: Yup.string().required(\"event details is required\"),\n});\n\nconst CreateEvent = () => {\n  const [imageFile, setImage] = useState(null);\n  const [url, setUrl] = useState(null);\n  const types = ['image/png', 'image/jpeg'];\n\n  useEffect(() => {\n    document.getElementById(\"event\").classList.add(\"active\");\n  });\n\n  const storeImage = (e) => {\n    const selectedFile = e.target.files[0];\n    if(selectedFile && types.includes(selectedFile.type)){\n      setImage(selectedFile);\n    } else {\n      setImage(null);\n      toast.error(\"The file selected is not an image, Please an image\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }  \n  }\n\n\n  return (\n    <div className=\"page\">\n      <Helmet>\n        <title>Create Event</title>\n      </Helmet>\n      {/* HEADER PART */}\n      <Header />\n      {/* CLOSE HEADER PART */}\n\n      {/* SIDER BAR PART */}\n      <div className=\"page-content d-flex align-items-stretch\">\n        <SideBar />\n\n        <div className=\"content-inner\">\n          {/* <!-- Page Header--> */}\n          <PageHeaderTitle title=\"\" currpg=\"Event\" />\n\n          <section className=\"forms\">\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-lg-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header d-flex align-items-center\">\n                      <h3 className=\"h4\">Create Event</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <Formik\n                        initialValues={{\n                          file: \"\",\n                          location: \"\",\n                          date: \"\",\n                          details: \"\",\n                          title: \"\",\n                        }}\n                        validationSchema={validationSchema}\n                        onSubmit={async (values, { setSubmitting, resetForm }) => {\n                          setSubmitting(true);\n                          if(url == null){\n                            return;\n                          }\n                    \n                        const event = new Date(values.date);\n\n                          try {\n                            const data = {\n                                id: uuidv4(),\n                                img: url,\n                                title: values.title,\n                                date: values.date,\n                                month: moment(values.date).format('MMMM'),\n                                year: moment(values.date).format('yyyy'),\n                                time: event.toLocaleTimeString('it-IT'),\n                                details: values.details,\n                                address: values.location,\n                                created: Date.now(), \n                                status: \"active\",\n                                actualDate: event\n                              };\n                            \n                              await firestore.collection(\"events\").add(data);\n                          \n                              toast.success(\"Event Successfully added\", {\n                                position: \"top-right\",\n                                autoClose: 5000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                                progress: undefined,\n                              });\n                              resetForm();\n                              setSubmitting(false);\n                            } catch(err){\n                              console.log('error', err)\n                              toast.error(`${err}`, {\n                                position: \"top-right\",\n                                autoClose: 5000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                                progress: undefined,\n                              });\n                            }\n                        }}\n                      >\n                        {({\n                          values,\n                          handleSubmit,\n                          isSubmitting,\n                          setFieldValue,\n                          handleChange,\n                          touched,\n                          errors,\n                          handleBlur,\n                        }) => (\n                          <form\n                            onSubmit={handleSubmit}\n                            encType=\"multipart/form-data\"\n                          >\n                            <div className=\"form-group\">\n                              <input\n                                type=\"text\"\n                                placeholder=\"Enter Event Title\"\n                                className={\n                                  touched.title && errors.title\n                                    ? \"  input-material  is-invalid\"\n                                    : \"input-material\"\n                                }\n                                name=\"title\"\n                                id=\"title\"\n                                onChange={handleChange}\n                                value={values.title}\n                                onBlur={handleBlur}\n                              />\n                              <FormError\n                                touched={touched.title}\n                                message={errors.title}\n                              />\n                            </div>\n\n                            <div className=\"form-group \">\n                              <label className=\"form-control-label\">\n                                Event Date\n                              </label>\n\n                              <DatePicker\n                                className={\n                                  touched.date && errors.date\n                                    ? \"input-material  is-invalid date\"\n                                    : \"input-material date\"\n                                }\n                                name=\"date\"\n                                showTimeSelect\n                                dateFormat=\"Pp\"\n                              />\n                            </div>\n\n                            <div className=\"form-group col-12\">\n                              <label className=\"form-control-label\">\n                                Address where the Event will take place\n                              </label>\n                              <textarea\n                                className={\n                                  touched.location && errors.location\n                                    ? \"  form-control  is-invalid\"\n                                    : \"form-control\"\n                                }\n                                placeholder=\"location\"\n                                name=\"location\"\n                                onChange={handleChange}\n                                value={values.address}\n                                onBlur={handleBlur}\n                              ></textarea>\n                              <FormError\n                                touched={touched.location}\n                                message={errors.location}\n                              />\n                            </div>\n\n                            {/* EVENT DETAILS */}\n                            <div className=\"form-group\">\n                              <label className=\"form-control-label\">\n                                Event Details\n                              </label>\n                              <textarea\n                                className={\n                                  touched.details && errors.details\n                                    ? \"  form-control  is-invalid\"\n                                    : \"form-control\"\n                                }\n                                placeholder=\"description\"\n                                name=\"details\"\n                                onChange={handleChange}\n                                value={values.details}\n                                onBlur={handleBlur}\n                              ></textarea>\n                              <FormError\n                                touched={touched.details}\n                                message={errors.details}\n                              />\n                            </div>\n                            <div className=\"form-group\">\n                              <label className=\"form-control-label\">\n                                Course Image\n                              </label>\n                              <input\n                                id=\"file\"\n                                name=\"file\"\n                                type=\"file\"\n                                onChange={(event) => {\n                                  storeImage(event);\n                                  setFieldValue(\n                                    \"file\",\n                                    event.currentTarget.files[0]\n                                  );\n                                }}\n                                className={\n                                  touched.file && errors.file\n                                    ? \"  form-control-file  is-invalid\"\n                                    : \"form-control-file\"\n                                }\n                                onBlur={handleBlur}\n                              />\n                              <Thumb file={values.file} /> \n                              {values.file && <ProgressBar file={values.file} setFile={setImage} setUrl={setUrl} directory=\"images/events\" />}\n                              <FormError\n                                touched={touched.file}\n                                message={errors.file}\n                              />\n                            </div>\n                            <div className=\"form-group\">\n                             \n                              <input\n                                type=\"submit\"\n                                value=\"Create Event\"\n                                className=\"btn btn-primary\"\n                                disabled={isSubmitting || url === null}\n                              />\n                            </div>\n                          </form>\n                        )}\n                      </Formik>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ToastContainer />\n          </section>\n        </div>\n      </div>\n      {/* CLOSE SIDE BAR */}\n    </div>\n  );\n};\n\nexport default CreateEvent;\n","import React from \"react\";\nimport Moment from \"react-moment\";\n// const dateToFormat = new Date(\"\");\nexport const EventCard = ({ title, created, image }) => {\n  return (\n    <div className=\"col-md-3 col-xs-12 col-lg-3 col-sm-12\">\n      <div className=\"card-deck-wrapper\">\n        <div className=\"card-deck\">\n          <div className=\"card\">\n            <img\n              src={image}\n              alt=\"Card  cap\"\n              className=\"card-img-top img-fluid\"\n            />\n            <div className=\"card-body\">\n              <a href=\"#!\">\n                <h5 className=\"card-title\">{title}</h5>\n              </a>\n              {/* <p className=\"card-text\">\n                          This is a wider card with supporting text below as a\n                          natural lead-in to additional content. This card has\n                          even longer content than the first to show that\n                          equal height action.\n                        </p> */}\n              <p className=\"card-text\">\n                <small className=\"text-muted\">\n                  created: <Moment fromNow>{created}</Moment>\n                  &nbsp; <a href=\"#!\">view more</a>\n                  &nbsp;{\" \"}\n                  <a href=\"#!\">\n                    <i\n                      className=\"fa fa-trash text-danger fa-lg\"\n                      aria-hidden=\"true\"\n                    ></i>\n                  </a>\n                </small>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport moment from 'moment';\nimport { Header, SideBar, PageHeaderTitle, Footer, firestore } from \"../../partials\";\nimport { EventCard } from \"./eventCard\";\nimport { handleError } from \"../../util\";\n\n// import Content from \"../main\";\nconst ListEvents = () => {\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    document.getElementById(\"gpa\").classList.add(\"active\");\n    fetchEvents();\n  }, []);\n\n  const fetchEvents = async () => {\n    await firestore.collection('events')\n    .onSnapshot((querySnapshot) => {\n      const results = [];\n      querySnapshot.forEach((doc) => {\n        results.push(doc.data());\n      });\n      setEvents(results);\n    }, handleError);\n\n  }\n\n    return (\n      <div className=\"page\">\n        <Helmet>\n          <title>event list</title>\n        </Helmet>\n        <Header />\n        <div className=\"page-content d-flex align-items-stretch\">\n          <SideBar />\n\n          <div className=\"content-inner\">\n            <PageHeaderTitle title=\"GPA\" currpg=\"Event List\" />\n            <div className=\"container-fluid\">\n                <section>\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h4>Event List</h4>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    {events.map((event) => (\n                      <EventCard\n                        title={event.title}\n                        created={event.created}\n                        key={event.id}\n                        image={event.img}\n                      />\n                    ))}\n                  </div>\n                </section>\n            </div>\n            <Footer />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\nexport default ListEvents;\n","import React from \"react\";\n\nconst FormError = ({ touched, message }) => {\n  if (!touched) {\n    return <div className=\"is-valid valid-feedback\"></div>;\n  }\n  if (message) {\n    return <div className=\"is-invalid invalid-feedback\">{message}</div>;\n  }\n  return <div className=\"is-valid valid-feedback\">all good</div>;\n};\n\nexport default FormError;\n","import React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport FormError from \"./formError\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Header, SideBar, PageHeaderTitle, Footer, firestore } from \"../../partials\";\nimport { fetchStates, fetchCities } from '../../util';\nimport \"./form.css\";\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"name is required\"),\n  gender: Yup.string().required(\"gender is required\"),\n  address: Yup.string().required(\"address is required\"),\n  phone: Yup.number(\"must be a phone number\").required(\"phone is required\"),\n  country: Yup.string().required(\"country is required\"),\n  city: Yup.string().required(\"city is required \"),\n  state: Yup.string().required(\"state is required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n});\n\nfunction CreateBranch(props) {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const { countries, states, cities } = user;\n\n  useEffect(() => {\n    document.getElementById(\"branch\").classList.add(\"active\");\n  });\n\n  const onselectCountry = ({ target }) => {\n  //   console.log('target', target.uid);\n  //  const obj = JSON.parse(JSON.stringify(target.value));\n  // return console.log('object', Object.assign({}, obj));\n   fetchStates(dispatch, target.value);\n  };\n\n  const onselectState = ({ target }) => {\n    fetchCities(dispatch, target.value);\n   };\n\n  return (\n    <div className=\"page\">\n      <Helmet>\n        <title>Branches</title>\n      </Helmet>\n      <Header />\n\n\n      {/* SIDER BAR PART */}\n      <div className=\"page-content d-flex align-items-stretch\">\n        <SideBar />\n\n        <div className=\"content-inner\">\n          <PageHeaderTitle title=\"Church Branch\" currpg=\"branch\" />\n    \n          {/* <!-- Forms Section--> */}\n          <section className=\"forms\">\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-lg-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header d-flex align-items-center\">\n                      <h3 className=\"h4\">\n                        Church Branch - <small>New</small>\n                      </h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <Formik\n                        initialValues={{\n                          name: \"\",\n                          gender: \"\",\n                          email: \"\",\n                          phone: \"\",\n                          address: \"\",\n                          city: \"\",\n                          state: \"\",\n                          country: \"\",\n                        }}\n                        validationSchema={validationSchema}\n                        onSubmit={async (values, { setSubmitting, resetForm }) => {\n                          setSubmitting(true);\n                          try { \n                            await firestore.collection(\"branches\").add({...values, created: Date.now(), id: uuidv4() });\n                            toast.success(\"Church Branch Successfully added\", {\n                                    position: \"top-right\",\n                                    autoClose: 5000,\n                                    hideProgressBar: false,\n                                    closeOnClick: true,\n                                    pauseOnHover: true,\n                                    draggable: true,\n                                    progress: undefined,\n                                  });\n                                  props.navigation.navigate(\"/dashboard/branches\");\n                                } catch (error) {\n                                  toast.error(`${error.message}`, {\n                                    position: \"top-right\",\n                                    autoClose: 5000,\n                                    hideProgressBar: false,\n                                    closeOnClick: true,\n                                    pauseOnHover: true,\n                                    draggable: true,\n                                    progress: undefined,\n                                  });\n                                }\n                          setTimeout(() => {\n                            resetForm();\n                            setSubmitting(false);\n                          }, 500);\n\n                        }\n                      }\n                      >\n                        {({\n                          values,\n                          handleSubmit,\n                          isSubmitting,\n                          handleChange,\n                          touched,\n                          errors,\n                          handleBlur,\n                        }) => (\n                          <Form onSubmit={handleSubmit}>\n                            {/* <div className=\"line\"></div> */}\n\n                            <div className=\"row\">\n                              {/* <label className=\"col-sm-3 form-control-label\">\n   Material Inputs\n </label> */}\n                              <div className=\"col-sm-12 col-md-12 col-lg-12\">\n                                <div className=\"row\">\n                                  <div className=\"col-md-12 col-sm-12 col-lg-8 col-xs-8\">\n                                    <div className=\"form-group-material\">\n                                      <Field\n                                        id=\"name\"\n                                        type=\"text\"\n                                        name=\"name\"\n                                        className={\n                                          touched.name && errors.name\n                                            ? \"input-material is-invalid\"\n                                            : \"input-material\"\n                                        }\n                                        onChange={handleChange}\n                                        value={values.name}\n                                        onBlur={handleBlur}\n                                      />\n                                      <FormError\n                                        touched={touched.name}\n                                        message={errors.name}\n                                      />\n                                      <label\n                                        htmlFor=\"name\"\n                                        className=\"label-material\"\n                                      >\n                                       Resident Pastor's Name -<small>surname first</small>\n                                      </label>\n                                    </div>\n                                  </div>\n\n                                  <div className=\"col-md-12 col-sm-12 col-lg-4 col-xs-4\">\n                                    <div className=\"select input-material\">\n                                      <select\n                                        className={\n                                          touched.gender && errors.gender\n                                            ? \"input-material select-text is-invalid\"\n                                            : \"input-material select-text\"\n                                        }\n                                        name=\"gender\"\n                                        onChange={handleChange}\n                                        value={values.gender}\n                                        onBlur={handleBlur}\n                                      >\n                                        <option>Gender</option>\n                                        <option value=\"male\">Male</option>\n                                        <option value=\"female\">Female</option>\n                                      </select>\n                                      <span className=\"select-highlight\"></span>\n                                      <span className=\"select-bar\"></span>\n                                      <FormError\n                                        touched={touched.gender}\n                                        message={errors.gender}\n                                      />\n                                      {/* <label class=\"select-label\">Gender</label> */}\n                                    </div>\n                                  </div>\n\n                                  <div className=\"col-sm-12 col-md-6 col-lg-6\">\n                                    <div className=\"form-group-material\">\n                                      <Field\n                                        id=\"email\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        className={\n                                          touched.gender && errors.gender\n                                            ? \"input-material is-invalid\"\n                                            : \"input-material \"\n                                        }\n                                        onChange={handleChange}\n                                        value={values.email}\n                                        onBlur={handleBlur}\n                                      />\n                                      <FormError\n                                        touched={touched.email}\n                                        message={errors.email}\n                                      />\n                                      <label\n                                        htmlFor=\"email\"\n                                        className=\"label-material\"\n                                      >\n                                        Email\n                                      </label>\n                                    </div>\n                                  </div>\n                                  <div className=\"col-sm-12 col-md-3 col-lg-6\">\n                                    <div className=\"form-group-material\">\n                                      <Field\n                                        id=\"phone\"\n                                        type=\"text\"\n                                        name=\"phone\"\n                                        className={\n                                          touched.phone && errors.phone\n                                            ? \"input-material is-invalid\"\n                                            : \"input-material \"\n                                        }\n                                        onChange={handleChange}\n                                        value={values.phone}\n                                        onBlur={handleBlur}\n                                      />\n                                      <FormError\n                                        touched={touched.phone}\n                                        message={errors.phone}\n                                      />\n                                      <label\n                                        htmlFor=\"phone\"\n                                        className=\"label-material\"\n                                      >\n                                        Phone\n                                      </label>\n                                    </div>\n                                  </div>\n                                  <div className=\"col-md-8 col-sm-12 col-lg-8 col-xs-12\">\n                                    <div className=\"form-group-material\">\n                                      <Field\n                                        className={\n                                          touched.address && errors.address\n                                          ? \"input-material is-invalid\"\n                                          : \"input-material \"\n                                        }\n                                        placeholder=\" Branch address\"\n                                        rows=\"1\"\n                                        name=\"address\"\n                                        onChange={handleChange}\n                                        value={values.address}\n                                        onBlur={handleBlur}\n                                      />\n                                      <FormError\n                                        touched={touched.address}\n                                        message={errors.address}\n                                      />\n                                    </div>\n                                  </div>\n\n                                  <div className=\"col-md-3 col-sm-11 col-lg-3 col-xs-12\">\n                                    <div className=\"select input-material\">\n                                      <select\n                                        className={\n                                          touched.country && errors.country\n                                            ? \"input-material select-text is-invalid\"\n                                            : \"input-material select-text\"\n                                        }\n                                        name=\"country\"\n                                        onChange={(value) => { \n                                          onselectCountry(value);\n                                          handleChange(value) \n                                        }}\n                                        value={values.country}\n                                        onBlur={handleBlur}\n                                      >\n                                        <option>Country</option>\n                                        {countries.map((country)=>(\n                                           <option value={country.id} key={country.id} uid={country.id}>{country.name}</option>\n                                        ))} \n                                      </select>\n                                      <span className=\"select-highlight\"></span>\n                                      <span className=\"select-bar\"></span>\n                                      <FormError\n                                        touched={touched.country}\n                                        message={errors.country}\n                                      />\n                                    </div>\n                                  </div>\n\n                                  <div className=\"col-md-4 col-sm-11 col-lg-4 col-xs-6\">\n                                    <div className=\"select input-material\">\n                                      <select\n                                        className={\n                                          touched.state && errors.state\n                                            ? \"input-material select-text is-invalid\"\n                                            : \"input-material select-text\"\n                                        }\n                                        name=\"state\"\n                                        onChange={(value) => {\n                                          onselectState(value)\n                                          handleChange(value)\n                                        }}\n                                        value={values.state}\n                                        onBlur={handleBlur}\n                                      >\n                                        <option>State</option>\n                                        {states.map((state)=>(\n                                           <option value={state.id} key={state.id}>{state.name}</option>\n                                        ))} \n                                      </select>\n                                      <span className=\"select-highlight\"></span>\n                                      <span className=\"select-bar\"></span>\n                                      <FormError\n                                        touched={touched.state}\n                                        message={errors.state}\n                                      />\n                                      {/* <label class=\"select-label\">state</label> */}\n                                    </div>\n                                  </div>\n\n                                  <div className=\"col-md-6 col-sm-12 col-lg-6 col-xs-6\">\n                                    <div className=\"select input-material\">\n                                      <select\n                                        className={\n                                          touched.state && errors.state\n                                            ? \"input-material select-text is-invalid\"\n                                            : \"input-material select-text\"\n                                        }\n                                        name=\"city\"\n                                        onChange={handleChange}\n                                        value={values.city}\n                                        onBlur={handleBlur}\n                                      >\n                                        <option>City</option>\n                                        {cities.map((city)=>(\n                                           <option value={city} key={city.id}>{city.name}</option>\n                                        ))} \n\n                                      </select>\n                                      <span className=\"select-highlight\"></span>\n                                      <span className=\"select-bar\"></span>\n                                      <FormError\n                                        touched={touched.city}\n                                        message={errors.city}\n                                      />\n                                      {/* <label class=\"select-label\">city</label> */}\n                                    </div>\n                                  </div>\n                                  \n                            \n                                  <div className=\"row\" style={{ marginTop: '60px'}}>\n                                    <div className=\"col-lg-12\">\n                                      <button\n                                        type=\"reset\"\n                                        className=\"btn btn-secondary\"\n                                      >\n                                        Cancel\n                                      </button>{\" \"}\n                                      <button\n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                      >\n                                        Save changes\n                                      </button>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </Form>\n                        )}\n                      </Formik>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n          <Footer />\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default CreateBranch;\n","import React, { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Header, SideBar, PageHeaderTitle, Footer, firestore } from \"../../partials\";\nimport { handleError } from \"../../util\";\n\nimport './style.css';\n\nfunction ViewBranch() {\n    const [branches, setBranches] = useState([]);\n    useEffect(() => {\n      document.getElementById(\"branch\").classList.add(\"active\");\n    //  await subscribeCollection(\"branches\", subscription);\n    fetchBranches();\n    },[]);\n\n    const subscription = (data) => {\n        console.log('data',data);\n       setBranches(data);\n      };\n\n    const fetchBranches = async () => {\n        const ref = await firestore.collection('branches')\n        .onSnapshot((querySnapshot) => {\n          const results = [];\n          querySnapshot.forEach((doc) => {\n            results.push(doc.data());\n          });\n          setBranches(results);\n        }, handleError);\n    }\n\n    return (\n        \n        <div className=\"page\">\n            <Helmet>\n            <title>View Branches</title>\n            </Helmet>\n            <Header />\n    \n            {/* SIDER BAR PART */}\n            <div className=\"page-content d-flex align-items-stretch\">\n            <SideBar />\n    \n                <div className=\"content-inner \" style={{backgroundColor: 'white'}}>\n                    <PageHeaderTitle title=\"Church Branch\" currpg=\"branch\" />\n                   \n                    <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                            <div className=\"main-box clearfix \">\n                                <div className=\"table-responsive\">\n                                    <table className=\"table user-list\">\n                                        <thead>\n                                            <tr>\n                                                <th><span>Branch Pastor</span></th>\n                                                <th><span>Address</span></th>\n                                                <th><span>City</span></th>\n                                                <th className=\"text-center\"><span>State</span></th>\n                                                <th><span>Country</span></th>\n                                                <th>&nbsp;</th>\n                                            </tr>\n                                        </thead>\n                                        \n                                            <tbody>\n                                                {branches.map((branch, index) => ( \n                                                <tr key={index}>\n                                                   \n                                                <td>\n                                                    <img src=\"https://bootdey.com/img/Content/avatar/avatar4.png\" alt=\"\"/>\n                                                    <a href=\"#\" className=\"user-link\">{branch.name}</a>\n                                                </td>\n                                                <td>\n                                                    {branch.address}\n                                                </td>\n                                                <td>\n                                                {branch.city} \n                                                </td>\n                                                <td className=\"text-center\">\n                                                <span className=\"label label-warning\">{branch.state} </span>\n                                                </td>\n                                                <td>\n                                                    {branch.country}\n                                                </td>\n                                                <td style={{width: \"20%\" }}>\n                                                    <a href=\"#\" className=\"table-link\">\n                                                        <span className=\"fa-stack\">\n                                                            <i className=\"fa fa-square fa-stack-2x\"></i>\n                                                            <i className=\"fa fa-search-plus fa-stack-1x fa-inverse\"></i>\n                                                        </span>\n                                                    </a>\n                                                    <a href=\"#\" className=\"table-link\">\n                                                        <span className=\"fa-stack\">\n                                                            <i className=\"fa fa-square fa-stack-2x\"></i>\n                                                            <i className=\"fa fa-pencil fa-stack-1x fa-inverse\"></i>\n                                                        </span>\n                                                    </a>\n                                                    <a href=\"#\" className=\"table-link danger\">\n                                                        <span className=\"fa-stack\">\n                                                            <i className=\"fa fa-square fa-stack-2x\"></i>\n                                                            <i className=\"fa fa-trash-o fa-stack-1x fa-inverse\"></i>\n                                                        </span>\n                                                    </a>\n                                                </td>\n                                            </tr>\n                                            ))}\n\t\t\t\t\t                    </tbody>\n                                    </table>\n                                </div>\n                                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n                </div>\n            </div>\n            <ToastContainer />\n        </div>\n\n    )\n}  \n\nexport default ViewBranch;","import React from \"react\";\n\nconst FormError = ({ touched, message }) => {\n  if (!touched) {\n    return <div className=\"is-valid valid-feedback\"></div>;\n  }\n  if (message) {\n    return <div className=\"is-invalid invalid-feedback\">{message}</div>;\n  }\n  return <div className=\"is-valid valid-feedback\">all good</div>;\n};\n\nexport default FormError;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Helmet } from \"react-helmet\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Field, Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { v4 as uuidv4 } from 'uuid';\nimport DatePicker from \"../event/DatePicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n// CSS\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./event.css\";\n// FILE\nimport FormError from \"./formError\";\nimport { Header, SideBar, PageHeaderTitle, firestore, ProgressBar, Thumb } from \"../../partials\";\n\nconst validationSchema = Yup.object().shape({\n  file: Yup.mixed().required(\"image upload is required\"),\n  title: Yup.string().required(\"event title is required\"),\n  details: Yup.string().required(\"event details is required\"),\n});\n\nconst CreateGallery = () => {\n    const [url, setUrl] = useState(null);\n  useEffect(() => {\n    document.getElementById(\"gallery\").classList.add(\"active\");\n  });\n\n  return (\n    <div className=\"page\">\n      <Helmet>\n        <title>Create Gallery</title>\n      </Helmet>\n      <Header />\n      <div className=\"page-content d-flex align-items-stretch\">\n        <SideBar />\n\n        <div className=\"content-inner\">\n          <PageHeaderTitle title=\"Dashboard\" currpg=\"Gallery\" />\n\n          <section className=\"forms\">\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-lg-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header d-flex align-items-center\">\n                      <h3 className=\"h4\">Create Gallery</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <Formik\n                        initialValues={{\n                          file: \"\",\n                          address: \"\",\n                          date: \"\",\n                          details: \"\",\n                          title: \"\",\n                        }}\n                        validationSchema={validationSchema}\n                        onSubmit={async (values, { setSubmitting, resetForm }) => {\n                          if(url == null){\n                            return;\n                          }\n                          setSubmitting(true);\n                          try {\n                            const data = {\n                              id: uuidv4(),\n                              url: url,\n                              title: values.title,\n                              details: values.details,\n                              created: Date.now(),\n                              img: url,\n                            }\n                            await firestore.collection(\"galleries\").add(data);\n                            resetForm();\n                            setSubmitting(false);\n                            toast.success(`${values.title} Gallery has been Successfully created`, {\n                              position: \"top-right\",\n                              autoClose: 5000,\n                              hideProgressBar: false,\n                              closeOnClick: true,\n                              pauseOnHover: true,\n                              draggable: true,\n                              progress: undefined,\n                            });\n                          } catch (error) {\n                            toast.error(`${error}`, {\n                              position: \"top-right\",\n                              autoClose: 5000,\n                              hideProgressBar: false,\n                              closeOnClick: true,\n                              pauseOnHover: true,\n                              draggable: true,\n                              progress: undefined,\n                            });\n                          }\n                          \n                        }}\n                      >\n                        {({\n                          values,\n                          handleSubmit,\n                          isSubmitting,\n                          setFieldValue,\n                          handleChange,\n                          touched,\n                          errors,\n                          handleBlur,\n                        }) => (\n                          <form\n                            onSubmit={handleSubmit}\n                            encType=\"multipart/form-data\"\n                          >\n                            <div className=\"form-group-material\">\n                            \n                              <Field\n                                type=\"text\"\n                                className={\n                                  touched.title && errors.title\n                                    ? \"  input-material  is-invalid\"\n                                    : \"input-material\"\n                                }\n                                name=\"title\"\n                                id=\"title\"\n                                onChange={handleChange}\n                                value={values.title}\n                                onBlur={handleBlur}\n                              />\n                              <label \n                               htmlFor=\"title\"\n                               className=\"label-material\"\n                              >\n                                Enter Name of Gallery i.e Thanksgiving Service 2020\n                              </label>\n                              <FormError\n                                touched={touched.title}\n                                message={errors.title}\n                              />\n                            </div>\n\n                            {/* EVENT DETAILS */}\n                            <div className=\"form-group\">\n                              <textarea\n                                className={\n                                  touched.details && errors.details\n                                    ? \"  form-control  is-invalid\"\n                                    : \"form-control\"\n                                }\n                                placeholder=\"Event Details\"\n                                name=\"details\"\n                                onChange={handleChange}\n                                value={values.details}\n                                onBlur={handleBlur}\n                              ></textarea>\n                              <FormError\n                                touched={touched.details}\n                                message={errors.details}\n                              />\n                            </div>\n                            <div className=\"form-group\">\n                              <label className=\"form-control-label\">\n                                Course Image\n                              </label>\n                              <input\n                                id=\"file\"\n                                name=\"file\"\n                                type=\"file\"\n                                onChange={(event) => {\n                                  setFieldValue(\n                                    \"file\",\n                                    event.currentTarget.files[0]\n                                  );\n                                }}\n                                className={\n                                  touched.file && errors.file\n                                    ? \"  form-control-file  is-invalid\"\n                                    : \"form-control-file\"\n                                }\n                                onBlur={handleBlur}\n                              />\n                              <Thumb file={values.file} />\n                              {values.file && <ProgressBar file={values.file} setUrl={setUrl} directory=\"images/gallery\" />}\n                              <FormError\n                                touched={touched.file}\n                                message={errors.file}\n                              />\n                            </div>\n                            <div className=\"form-group\">\n                              <input\n                                type=\"submit\"\n                                value=\"Create Gallery\"\n                                className=\"btn btn-primary\"\n                                disabled={isSubmitting}\n                              />\n                            </div>\n                          </form>\n                        )}\n                      </Formik>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ToastContainer />\n          </section>\n        </div>\n      </div>\n      {/* CLOSE SIDE BAR */}\n    </div>\n  );\n};\n\nexport default CreateGallery;\n","import React from \"react\";\nimport Moment from \"react-moment\";\n// const dateToFormat = new Date(\"\");\nexport const EventCard = ({ title, created, image }) => {\n  return (\n    <div className=\"col-md-3 col-xs-12 col-lg-3 col-sm-12\">\n      <div className=\"card-deck-wrapper\">\n        <div className=\"card-deck\">\n          <div className=\"card\">\n            <img\n              src={image}\n              alt=\"Card  cap\"\n              className=\"card-img-top img-fluid\"\n            />\n            <div className=\"card-body\">\n              <a href=\"#!\">\n                <h5 className=\"card-title\">{title}</h5>\n              </a>\n              {/* <p className=\"card-text\">\n                          This is a wider card with supporting text below as a\n                          natural lead-in to additional content. This card has\n                          even longer content than the first to show that\n                          equal height action.\n                        </p> */}\n              <p className=\"card-text\">\n                <small className=\"text-muted\">\n                  created: <Moment fromNow>{created}</Moment>\n                  &nbsp; <a href=\"#!\">view more</a>\n                  &nbsp;{\" \"}\n                  <a href=\"#!\">\n                    <i\n                      className=\"fa fa-trash text-danger fa-lg\"\n                      aria-hidden=\"true\"\n                    ></i>\n                  </a>\n                </small>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState} from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { fetchEventList } from \"../../../redux/actions/eventAction\";\nimport { Header, SideBar, PageHeaderTitle, Footer, firestore } from \"../../partials\";\nimport { EventCard } from \"./eventCard\";\nimport { handleError } from \"../../util\";\n\nconst ListEvents = () =>  {\n  const [galleries, setGallery] = useState([]);\n    useEffect(()=>{\n      document.getElementById(\"gallery\").classList.add(\"active\");\n      fetchGallery();\n    },[])\n\n\n    const fetchGallery = async () => {\n      await firestore.collection('galleries')\n      .onSnapshot((querySnapshot) => {\n        const results = [];\n        querySnapshot.forEach((doc) => {\n          results.push(doc.data());\n        });\n        setGallery(results);\n      }, handleError);\n\n    }\n\n    return (\n      <div className=\"page\">\n        <Helmet>\n          <title>Gallery list</title>\n        </Helmet>\n        {/* HEADER PART */}\n        <Header />\n        {/* CLOSE HEADER PART */}\n\n        {/* SIDER BAR PART */}\n        <div className=\"page-content d-flex align-items-stretch\">\n          <SideBar />\n\n          <div className=\"content-inner\">\n            {/* <!-- Page Header--> */}\n            <PageHeaderTitle title=\"Gallery\" currpg=\"Gallery\" />\n            <div className=\"container-fluid\">\n              {/* <!-- end row--> */}\n              <section>\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h4> Gallery List</h4>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  {galleries.map((gallery) => (\n                    <EventCard\n                      title={gallery.title}\n                      created={gallery.created}\n                      key={gallery.id}\n                      image={gallery.img}\n\n                    />\n                  ))}\n                </div>\n              </section>\n\n              {/* <!-- end row--> */}\n            </div>\n            <Footer />\n          </div>\n        </div>\n        {/* CLOSE SIDE BAR */}\n      </div>\n    );\n  }\n\nexport default ListEvents;\n","import React from \"react\";\n\nconst FormError = ({ touched, message }) => {\n  if (!touched) {\n    return <div className=\"is-valid valid-feedback\"></div>;\n  }\n  if (message) {\n    return <div className=\"is-invalid invalid-feedback\">{message}</div>;\n  }\n  return <div className=\"is-valid valid-feedback\">all good</div>;\n};\n\nexport default FormError;\n","import React, { useEffect, useState } from \"react\";\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Header, SideBar, Breadcrumb, firestore } from \"../../partials\";\nimport Button from '@material-ui/core/Button';\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from 'react-router-dom';\nimport { fetchCities, fetchStates, geocode } from '../../util'\n\nimport FormError from \"./formError\";\n\nconst validationSchema = Yup.object().shape({\n    coordinator: Yup.string()\n      .min(2, \"Too Short!\")\n      .max(50, \"Too Long!\")\n      .required(\"name is required\"),\n    gender: Yup.string().required(\"gender is required\"),\n    address: Yup.string().required(\"address is required\"),\n    phone: Yup.number(\"must be a phone number\").required(\"phone is required\"),\n    country: Yup.string().required(\"country is required\"),\n    city: Yup.string().required(\"city is required \"),\n    state: Yup.string().required(\"state is required\"),\n   // email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  });\n\n\nconst CreateCell = (props) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [coordinates, setCoordinates] = useState(null);\n    const user = useSelector(state => state.user);\n    const { countries, states, cities } = user;\n\n    const onselectCountry = ({ target }) => {\n        //   console.log('target', target.uid);\n        //  const obj = JSON.parse(JSON.stringify(target.value));\n        // return console.log('object', Object.assign({}, obj));\n         fetchStates(dispatch, target.value);\n    };\n      \n    const onselectState = ({ target }) => {\n        fetchCities(dispatch, target.value);\n    };\n\n    const convertAddressToLatLng = async (address) => {\n        geocode.fromAddress(address).then(\n          response => {\n          const coordinates = response.results[0].geometry.location;\n          setCoordinates(coordinates);\n          },\n          error => {\n            console.error(error);\n          }\n        );\n      };\n      \n\n\n    useEffect(()=> {\n         document.getElementById(\"cell\").classList.add(\"active\");\n    },[]);\n\n        return (\n            <React.Fragment>\n                <Helmet><title>Create Cell</title></Helmet>\n                <Header />\n               \n\n                <div className=\"page-content d-flex align-items-stretch\">\n                    <SideBar />\n                    <div className=\"content-inner\">\n                           \n                            <div className=\"page-content\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <Breadcrumb crumbItem={'Home'} crumb={'Cell'} />\n                                        <div className=\"col-12\">\n                                            <div className=\"card\">\n                                                <div className=\"card-body\">\n                                                    <Button variant=\"contained\" href=\"dashboard/sermon/view\" color=\"primary\">\n                                                        View Home Cell\n                                                        </Button>\n                                                    {\" \"}\n                                                    <Button variant=\"contained\" color=\"secondary\">Back</Button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <div className=\"card\">\n                                                <div className=\"card-body\">\n                                                    <h5 className=\"card-title\">Create New HomeCell</h5>\n                                                    <Formik\n                                                        initialValues={{\n                                                        coordinator: \"\",\n                                                        gender: \"\",\n                                                        email: \"\",\n                                                        phone: \"\",\n                                                        address: \"\",\n                                                        city: \"\",\n                                                        state: \"\",\n                                                        country: \"\",\n                                                        }}\n                                                        validationSchema={validationSchema}\n                                                        onSubmit={async (values, { setSubmitting, resetForm }) => {\n                                                            if(coordinates == null){\n                                                                return;\n                                                            }\n                                                        setSubmitting(true);\n                                                        // get the coordinates of the homecell and also store it\n                                                        try { \n                                                            await firestore.collection(\"cells\").add({...values, coordinates });\n                                                            toast.success(\"Church Branch Successfully added\", {\n                                                                    position: \"top-right\",\n                                                                    autoClose: 5000,\n                                                                    hideProgressBar: false,\n                                                                    closeOnClick: true,\n                                                                    pauseOnHover: true,\n                                                                    draggable: true,\n                                                                    progress: undefined,\n                                                                });\n                                                                history.push(\"/dashboard/cells\");\n                                                                } catch (error) {\n                                                                toast.error(`${error.message}`, {\n                                                                    position: \"top-right\",\n                                                                    autoClose: 5000,\n                                                                    hideProgressBar: false,\n                                                                    closeOnClick: true,\n                                                                    pauseOnHover: true,\n                                                                    draggable: true,\n                                                                    progress: undefined,\n                                                                });\n                                                                }\n                                                        setTimeout(() => {\n\n                                                            resetForm();\n                                                            setSubmitting(false);\n                                                        }, 500);\n\n                                                        }\n                                                    }\n                                                    >\n                                                        {({\n                                                        values,\n                                                        handleSubmit,\n                                                        isSubmitting,\n                                                        handleChange,\n                                                        touched,\n                                                        errors,\n                                                        handleBlur,\n                                                        }) => (\n                                                    <Form onSubmit={handleSubmit}>\n                                                        <div className=\"row\">\n                                                            <div className=\"col-sm-12 col-md-12 col-lg-12\">\n                                                                <div className=\"row\">\n                                                                    <div className=\"col-md-12 col-sm-12 col-lg-8 col-xs-8\">\n                                                                        <div className=\"form-group-material\">\n                                                                        <Field\n                                                                            id=\"coordinator\"\n                                                                            type=\"text\"\n                                                                            name=\"coordinator\"\n                                                                            className={\n                                                                            touched.coordinator && errors.coordinator\n                                                                                ? \"input-material is-invalid\"\n                                                                                : \"input-material\"\n                                                                            }\n                                                                            onChange={handleChange}\n                                                                            value={values.coordinator}\n                                                                            onBlur={handleBlur}\n                                                                        />\n                                                                        <FormError\n                                                                            touched={touched.coordinator}\n                                                                            message={errors.coordinator}\n                                                                        />\n                                                                        <label\n                                                                            htmlFor=\"coordinator\"\n                                                                            className=\"label-material\"\n                                                                        >\n                                                                            Cell Coordinator\n                                                                        </label>\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div className=\"col-md-12 col-sm-12 col-lg-4 col-xs-4\">\n                                                                        <div class=\"select input-material\">\n                                                                        <select\n                                                                            className={\n                                                                            touched.gender && errors.gender\n                                                                                ? \"input-material select-text is-invalid\"\n                                                                                : \"input-material select-text\"\n                                                                            }\n                                                                            name=\"gender\"\n                                                                            onChange={handleChange}\n                                                                            value={values.gender}\n                                                                            onBlur={handleBlur}\n                                                                        >\n                                                                            <option>Gender</option>\n                                                                            <option value=\"male\">Male</option>\n                                                                            <option value=\"female\">Female</option>\n                                                                        </select>\n                                                                        <span class=\"select-highlight\"></span>\n                                                                        <span class=\"select-bar\"></span>\n                                                                        <FormError\n                                                                            touched={touched.gender}\n                                                                            message={errors.gender}\n                                                                        /> \n                                                                        <label class=\"select-label\">Gender</label>\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div className=\"col-sm-12 col-md-6 col-lg-6\">\n                                                                        <div className=\"form-group-material\">\n                                                                        <Field\n                                                                            id=\"email\"\n                                                                            type=\"email\"\n                                                                            name=\"email\"\n                                                                            className={\n                                                                            touched.gender && errors.gender\n                                                                                ? \"input-material is-invalid\"\n                                                                                : \"input-material \"\n                                                                            }\n                                                                            onChange={handleChange}\n                                                                            value={values.email}\n                                                                            onBlur={handleBlur}\n                                                                        />\n                                                                        <FormError\n                                                                            touched={touched.email}\n                                                                            message={errors.email}\n                                                                        />\n                                                                        <label\n                                                                            htmlFor=\"email\"\n                                                                            className=\"label-material\"\n                                                                        >\n                                                                            Email\n                                                                        </label>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"col-sm-12 col-md-3 col-lg-6\">\n                                                                        <div className=\"form-group-material\">\n                                                                        <Field\n                                                                            id=\"phone\"\n                                                                            type=\"text\"\n                                                                            name=\"phone\"\n                                                                            className={\n                                                                            touched.phone && errors.phone\n                                                                                ? \"input-material is-invalid\"\n                                                                                : \"input-material \"\n                                                                            }\n                                                                            onChange={handleChange}\n                                                                            value={values.phone}\n                                                                            onBlur={handleBlur}\n                                                                        />\n                                                                        <FormError\n                                                                            touched={touched.phone}\n                                                                            message={errors.phone}\n                                                                        />\n                                                                        <label\n                                                                            htmlFor=\"phone\"\n                                                                            className=\"label-material\"\n                                                                        >\n                                                                            Phone\n                                                                        </label>\n                                                                        </div>\n                                                                    </div>\n                                                                    \n                                                                    <div className=\"col-md-8 col-sm-12 col-lg-8 col-xs-12\">\n                                                                        <div className=\"form-group-material\">\n                                                                        <Field\n                                                                            className={\n                                                                            touched.address && errors.address\n                                                                            ? \"input-material is-invalid\"\n                                                                            : \"input-material \"\n                                                                            }\n                                                                            placeholder=\" Branch address\"\n                                                                            rows=\"1\"\n                                                                            name=\"address\"\n                                                                            onChange={handleChange}\n                                                                            value={values.address}\n                                                                            onBlur={(value) => {\n                                                                                handleBlur(value);\n                                                                                convertAddressToLatLng(value.target.value)\n                                                                            }}\n                                                                        />\n                                                                        <FormError\n                                                                            touched={touched.address}\n                                                                            message={errors.address}\n                                                                        />\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div className=\"col-md-3 col-sm-11 col-lg-3 col-xs-12\">\n                                                                        <div class=\"select input-material\">\n                                                                            <select\n                                                                                className={\n                                                                                touched.country && errors.country\n                                                                                    ? \"input-material select-text is-invalid\"\n                                                                                    : \"input-material select-text\"\n                                                                                }\n                                                                                name=\"country\"\n                                                                                onChange={(value) => {\n                                                                                    handleChange(value)\n                                                                                    onselectCountry(value)\n                                                                                }}\n                                                                                value={values.country}\n                                                                                onBlur={handleBlur}\n                                                                            >\n                                                                                <option>Country</option>\n                                                                                {countries.map((country)=>( <option value={country.id}>{country.name}</option> ))}    \n                                                                            </select>\n                                                                            <span class=\"select-highlight\"></span>\n                                                                            <span class=\"select-bar\"></span>\n                                                                            <FormError\n                                                                                touched={touched.country}\n                                                                                message={errors.country}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n\n\n                                                                    <div className=\"col-md-4 col-sm-11 col-lg-4 col-xs-6\">\n                                                                        <div class=\"select input-material\">\n                                                                        <select\n                                                                            className={\n                                                                            touched.state && errors.state\n                                                                                ? \"input-material select-text is-invalid\"\n                                                                                : \"input-material select-text\"\n                                                                            }\n                                                                            name=\"state\"\n                                                                            onChange={(value) => {\n                                                                                handleChange(value)\n                                                                                onselectState(value)\n                                                                            }}\n                                                                            value={values.state}\n                                                                            onBlur={handleBlur}\n                                                                        >\n                                                                            <option>State</option>\n\n                                                                            {states.map((state)=>( <option value={state.id}>{state.name}</option> ))}\n                                                                            \n                                                                        </select>\n                                                                        <span class=\"select-highlight\"></span>\n                                                                        <span class=\"select-bar\"></span>\n                                                                        <FormError\n                                                                            touched={touched.state}\n                                                                            message={errors.state}\n                                                                        />\n                                                                        {/* <label class=\"select-label\">state</label> */}\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div className=\"col-md-6 col-sm-12 col-lg-6 col-xs-6\">\n                                                                        <div class=\"select input-material\">\n                                                                        <select\n                                                                            className={\n                                                                            touched.state && errors.state\n                                                                                ? \"input-material select-text is-invalid\"\n                                                                                : \"input-material select-text\"\n                                                                            }\n                                                                            name=\"city\"\n                                                                            onChange={handleChange}\n                                                                            value={values.city}\n                                                                            onBlur={handleBlur}\n                                                                        >\n                                                                            {cities.map((city)=>( <option value={city.id}>{city.name}</option> ))}\n                                                                        </select>\n                                                                        <span class=\"select-highlight\"></span>\n                                                                        <span class=\"select-bar\"></span>\n                                                                        <FormError\n                                                                            touched={touched.city}\n                                                                            message={errors.city}\n                                                                        />\n                                                                        {/* <label class=\"select-label\">city</label> */}\n                                                                        </div>\n                                                                    </div>\n\n                                                                \n                                                                    <div className=\"col-sm-12 col-md-12 col-lg-12\">\n                                                                        <div className=\"form-group-material\">\n                                                                            <TextField\n                                                                                fullWidth\n                                                                                multiline\n                                                                                margin=\"normal\"\n                                                                                id=\"comment\"\n                                                                                label=\"Comment- optional\"\n                                                                                name=\"comment\"\n\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"form-group row\">\n                                                                        <div className=\"col-sm-12 offset-sm-3\">\n                                                                            <button\n                                                                                type=\"reset\"\n                                                                                className=\"btn btn-secondary\"\n                                                                            >\n                                                                                Cancel\n                                                                                                </button>{\" \"}\n                                                                            <button\n                                                                                type=\"submit\"\n                                                                                className=\"btn btn-primary\"\n                                                                            >\n                                                                                Save changes\n                                                                                            </button>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </Form>\n                                                 )}\n                                                 </Formik>\n                                                </div>\n                                            </div>\n\n\n\n\n\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                    </div>\n                    <ToastContainer />\n                </div>\n\n            </React.Fragment>\n        );\n\n}\n\n\nexport default CreateCell;\n","import React, { useEffect, useState } from \"react\";\nimport { Helmet } from 'react-helmet';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Header, SideBar, Breadcrumb, firestore } from \"../../partials\";\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { handleError } from \"../../util\";\n\n\nconst ViewCell = () => {\n    const [cells, setCells] = useState([]);\n\n    useEffect(()=> {\n         document.getElementById(\"cell\").classList.add(\"active\");\n         fetchCells();\n    },[]);\n\n    const fetchCells = async () => {\n        await firestore.collection('cells')\n        .onSnapshot((querySnapshot) => {\n          const results = [];\n          querySnapshot.forEach((doc) => {\n            results.push(doc.data());\n          });\n          // load this in redux\n          setCells(results);\n        }, handleError);\n    }\n\n        return (\n            <React.Fragment>\n                <Helmet><title>View Cell Locations</title></Helmet>\n                <Header />\n               \n\n                <div className=\"page-content d-flex align-items-stretch\">\n                    <SideBar />\n                    <div className=\"content-inner\">\n                           \n                            <div className=\"page-content\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <Breadcrumb crumbItem={'Home'} crumb={'Cell'} />\n                                        <div className=\"col-12\">\n                                            <div className=\"card\">\n                                                <div className=\"card-body\">\n                                                    \n                                                    <Button variant=\"contained\" color=\"secondary\">Back</Button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <div className=\"card\">\n                                                <div className=\"card-body\">\n                                                    <h5 className=\"card-title\">Home Cell</h5>\n                                    \n                                                        <div className=\"row\">  \n                                                            <div className=\"col-md-12\">\n                                                               \n                                                                <div className=\"table-responsive\">\n\n                                                                            \n                                                                        <table id=\"mytable\" className=\"table table-bordred table-striped\">\n                                                                            \n                                                                            <thead>\n                                                                            \n                                                                            <th><input type=\"checkbox\" id=\"checkall\" /></th>\n                                                                            <th>Coordinator</th>\n                                                                                <th>Address</th>\n                                                                                <th>Phone</th>\n                                                                                <th>Email</th>\n                                                                                <th>City</th>\n                                                                                <th>Edit</th>\n                                                                                \n                                                                                <th>Delete</th>\n                                                                            </thead>\n                                                                                <tbody>\n                                                                                {cells.map((cell)=> {\n                                                                                    return (\n                                                                                    <tr key={cell.id}> \n                                                                                        <td><input type=\"checkbox\" className=\"checkthis\" /></td>\n                                                                                        <td>{cell.coordinator}</td>\n                                                                                        <td>{cell.address}</td>\n                                                                                        <td> {cell.phone}</td>\n                                                                                        <td>{cell.email}</td>\n                                                                                        <td> {cell.state} </td>\n                                                                                        <td><p data-placement=\"top\" data-toggle=\"tooltip\" title=\"Edit\"><button className=\"btn btn-primary btn-xs\" data-title=\"Edit\" data-toggle=\"modal\" data-target=\"#edit\" ><span className=\"fa fa-pencil-alt\"></span></button></p></td>\n                                                                                        <td><p data-placement=\"top\" data-toggle=\"tooltip\" title=\"Delete\"><button className=\"btn btn-danger btn-xs\" data-title=\"Delete\" data-toggle=\"modal\" data-target=\"#delete\" ><span className=\"fa fa-trash\"></span></button></p></td>\n                                                                                    </tr>\n                                                                                    \n                                                                                    )\n                                                                                })}\n                                                                                  \n                                                                            </tbody>\n                                                                                    \n                                                                        </table>\n\n                                                                    <div className=\"clearfix\"></div>\n                                                                        {/* pagination */}\n                                                                        \n                                                                    </div>\n                                                                    \n                                                                </div>\n                                                            </div>\n                                                        </div>\n\n                                                   \n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                    <ToastContainer />\n                </div>\n\n\n                <div class=\"modal fade\" id=\"edit\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edit\" aria-hidden=\"true\">\n                    <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"><span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span></button>\n                        <h4 class=\"modal-title custom_align\" id=\"Heading\">Edit Your Detail</h4>\n                    </div>\n                        <div class=\"modal-body\">\n                        <div class=\"form-group\">\n                        <input class=\"form-control \" type=\"text\" placeholder=\"Mohsin\" />\n                        </div>\n                        <div class=\"form-group\">\n                        \n                        <input class=\"form-control \" type=\"text\" placeholder=\"Irshad\"/>\n                        </div>\n                        <div class=\"form-group\">\n                        <textarea rows=\"2\" class=\"form-control\" placeholder=\"CB 106/107 Street # 11 Wah Cantt Islamabad Pakistan\"></textarea>\n                    \n                        \n                        </div>\n                    </div>\n                        <div class=\"modal-footer \">\n                        <button type=\"button\" class=\"btn btn-warning btn-lg\" style={{width: '100%' }}><span class=\"glyphicon glyphicon-ok-sign\"></span> Update</button>\n                    </div>\n                        </div>\n\n                </div>\n                    \n                    </div>\n                    \n    \n    \n                <div class=\"modal fade\" id=\"delete\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edit\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n          <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"><span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span></button>\n        <h4 class=\"modal-title custom_align\" id=\"Heading\">Delete this entry</h4>\n      </div>\n          <div class=\"modal-body\">\n       \n       <div class=\"alert alert-danger\"><span class=\"glyphicon glyphicon-warning-sign\"></span> Are you sure you want to delete this Record?</div>\n       \n      </div>\n        <div class=\"modal-footer \">\n        <button type=\"button\" class=\"btn btn-success\" ><span class=\"glyphicon glyphicon-ok-sign\"></span> Yes</button>\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\"><span class=\"glyphicon glyphicon-remove\"></span> No</button>\n      </div>\n        </div>\n \n  </div>\n    </div>\n\n            </React.Fragment>\n        );\n\n}\n\n\nexport default ViewCell;\n","import React from \"react\";\n\nconst FormError = ({ touched, message }) => {\n  if (!touched) {\n    return <div className=\"is-valid valid-feedback\"></div>;\n  }\n  if (message) {\n    return <div className=\"is-invalid invalid-feedback\">{message}</div>;\n  }\n  return <div className=\"is-valid valid-feedback\">all good</div>;\n};\n\nexport default FormError;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n// import { Helmet } from \"react-helmet\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport uuid from \"react-uuid\";\nimport FormError from \"./formError\";\nimport { Header, SideBar, ProgressBar, Thumb, firestore } from \"../../partials\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { useHistory } from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginTop: '18px',\n    minWidth: \"100%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(1) * 2,\n  },\n}));\n\nconst CreateSermon = () => {\n  const [sermonUrl, setSermonUrl] = useState('');\n  const [sermonImage, setSermonImage] = useState('');\n  const [coverType, setCoverType] = useState('image');\n  const classes = useStyles();\n  useEffect(() => {\n    // document.getElementById(\"sermon\").classList.add(\"active\");\n  });\n  console.log('sermonImage', sermonImage)\n\n  let history = useHistory()\n\n  const IMAGE_SIZE = 160 * 1024;\n  const SUPPORTED_IMG_FORMATS = [\n    \"image/jpg\",\n    \"image/jpeg\",\n    \"image/gif\",\n    \"image/png\"\n  ];\n  const FILE_SIZE = 300000 * 1024;\n  const SUPPORTED_FILE_FORMATS = [\n    \"video/mp4\",\n    \"audio/mp3\",\n    \"audio/mpeg\",\n  ];\n\n  const validationSchema = Yup.object().shape({\n    coverimg: Yup\n      .mixed()\n      .required(\"cover image is required\"),\n      // .test(\n      //   \"fileSize\",\n      //   \"File too large\",\n      //   value => value && value.size <= IMAGE_SIZE\n      // )\n      // .test(\n      //   \"fileFormat\",\n      //   \"Unsupported Format\",\n      //   value => value && SUPPORTED_IMG_FORMATS.includes(value.type)\n      // ),\n    sermonfile: Yup\n      .mixed()\n      .required(\"sermon file is required\")\n      .test(\n        \"fileSize\",\n        \"File too large\",\n        value => value && value.size <= FILE_SIZE\n      )\n      .test(\n        \"fileFormat\",\n        \"Only mp3/mp4 files are supported\",\n        value => value && SUPPORTED_FILE_FORMATS.includes(value.type)\n      ),\n    title: Yup.string().required(\"sermon title is required\"),\n    sermonType: Yup.string().required(\"sermon type required\"),\n    sermonCoverType: Yup.string().required(\"sermon cover type required\"),\n    preacher: Yup.string().required(\"sermon preacher is required\"),\n    amount: Yup.number().required(\"cost of srmon is required\"),\n  });\n\n  const API_URL = process.env.REACT_APP_BASEURL;\n\n  return (\n    <React.Fragment>\n      <Header />\n      <div className=\"page-content d-flex align-items-stretch\">\n        <SideBar />\n\n            <div className=\"content-inner\">\n          <div className=\"page-content\">\n            <ToastContainer />\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <nav aria-label=\"breadcrumb\">\n                    <ol className=\"breadcrumb\">\n                      <li className=\"breadcrumb-item\"><a href=\"/dashboard/\">Dashboard</a></li>\n                      <li className=\"breadcrumb-item\"><a href=\"#\">Create Sermon</a></li>\n                    </ol>\n                  </nav>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      <Button variant=\"contained\" href=\"dashboard/sermon/view\" color=\"primary\">\n                        View Sermon\n              </Button>\n                      {\" \"}\n                      <Button onClick={() => history.goBack()} variant=\"contained\" color=\"secondary\">Back</Button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      <Formik\n                        initialValues={{\n                          coverimg: undefined,\n                          sermonfile: undefined,\n                          title: \"\",\n                          sermonType: \"\",\n                          preacher: \"\",\n                          amount: '',\n                          sermonCoverType: \"image\"\n                        }}\n                        validationSchema={validationSchema}\n                        onSubmit={async (values, { setSubmitting, resetForm, setFieldValue }) => {\n                          try { \n                            setSubmitting(true);\n                            if (sermonUrl === '') {\n                              return toast.error('Please upload sermon.', {\n                                position: \"top-right\",\n                                autoClose: 5000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                                progress: undefined,\n                              });\n                            } else if (sermonImage === ''){\n                              return toast.error('Please upload sermon cover Image.', {\n                                position: \"top-right\",\n                                autoClose: 5000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                                progress: undefined,\n                              });\n                            }\n                          \n                            const data = {\n                                title: values.title,\n                                sermonImg: sermonImage,\n                                type: values.sermonType,\n                                artist: values.preacher,\n                                preview: values.sermonfile.name,\n                                sermonfile: values.sermonfile.name,\n                                src: sermonUrl,\n                                amount: parseInt(values.amount),\n                                created: Date.now(),\n                                quantity: 1,\n                                sermonCoverType: values.sermonCoverType\n                            };\n\n                            await firestore.collection(\"sermons\").add(data);\n                            \n                            resetForm();\n                            setSubmitting(false);\n                            toast.success(\"Sermon Created Successfully\", {\n                              position: \"top-right\",\n                              autoClose: 5000,\n                              hideProgressBar: false,\n                              closeOnClick: true,\n                              pauseOnHover: true,\n                              draggable: true,\n                              progress: undefined,\n                            });\n                          \n                          } catch (err) {\n                            toast.error(`${err}`, {\n                              position: \"top-right\",\n                              autoClose: 5000,\n                              hideProgressBar: false,\n                              closeOnClick: true,\n                              pauseOnHover: true,\n                              draggable: true,\n                              progress: undefined,\n                            });\n                          }\n                          \n                        }}\n                      >\n                        {({\n                          values,\n                          handleSubmit,\n                          isSubmitting,\n                          setFieldValue,\n                          handleChange,\n                          touched,\n                          errors,\n                          handleBlur,\n                        }) => (\n                            <form\n                              onSubmit={handleSubmit}\n                              encType=\"multipart/form-data\"\n                            >\n\n                              <div className=\"row\">\n\n                                <div className=\"col-md-6 col-sm-12 col-lg-6 col-xs-12\">\n                                  <div className=\"form-group\">\n                                    <FormControl className={classes.formControl}>\n                                      <TextField\n                                        fullWidth\n                                        id=\"title\"\n                                        name=\"title\"\n                                        label=\"Sermon Title\"\n                                        margin=\"normal\"\n                                        value={values.title}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        error={errors.title && touched.title}\n                                        helperText={(errors.title && touched.title) && errors.title}\n                                      />\n                                    </FormControl>\n                                  </div>\n                                </div>\n                                <div className=\"col-md-4 col-sm-12 col-lg-4 col-xs-12\">\n                                  <div className=\"form-group\">\n                                    <FormControl className={classes.formControl}>\n                                      <TextField\n                                        fullWidth\n                                        id=\"amount\"\n                                        name=\"amount\"\n                                        label=\"Amount\"\n                                        margin=\"normal\"\n                                        value={values.amount}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        error={errors.amount && touched.amount}\n                                        helperText={(errors.amount && touched.amount) && errors.amount}\n                                      />\n                                    </FormControl>\n                                  </div>\n                                </div>\n                                <div className=\"col-md-6 col-sm-12 col-lg-6 col-xs-12\">\n                                  <div className=\"form-group \">\n                                    <FormControl className={classes.formControl}>\n                                      <InputLabel htmlFor=\"sermontype\">Sermon Type</InputLabel>\n                                      <Select\n                                        native\n                                        fullWidth\n                                        value={values.sermonType}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        name='sermonType'\n                                        id='sermontype'\n                                        error={errors.sermonType && touched.sermonType}>\n                                        <option value=\"\"></option>\n                                        <option value={\"audio\"}>Audio</option>\n                                        <option value={\"video\"}>Video</option>\n                                      </Select>\n                                    </FormControl>\n\n\n                                  </div>\n                                </div>\n                                <div className=\"col-md-4 col-sm-12 col-lg-4 col-xs-12\">\n                                  <div className=\"form-group \">\n                                    <FormControl className={classes.formControl}>\n                                      <InputLabel htmlFor=\"sermoncovertype\">Sermon Cover Type</InputLabel>\n                                      <Select\n                                        native\n                                        fullWidth\n                                        value={values.sermonCoverType}\n                                        onChange={(value) => {\n                                          handleChange(value)\n                                          console.log('value--', value.target.value);\n                                          setCoverType(value.target.value)\n                                      }}\n                                        onBlur={handleBlur}\n                                        name='sermonCoverType'\n                                        id='sermoncovertype'\n                                        error={errors.sermonCoverType && touched.sermonCoverType}>\n                                        <option value=\"\">Select Sermon Cover Type</option>\n                                        <option value={\"image\"}>Image Cover</option>\n                                        <option value={\"video\"}>Video Cover</option>\n                                      </Select>\n                                    </FormControl>\n\n\n                                  </div>\n                                </div>\n                                <div className=\"col-md-4 col-sm-12 col-lg-4 col-xs-12\">\n                                  <div className=\"form-group \">\n                                    <TextField\n                                      fullWidth\n                                      id=\"preacher\"\n                                      name=\"preacher\"\n                                      label=\"Sermon By\"\n                                      margin=\"normal\"\n                                      value={values.preacher}\n                                      onChange={handleChange}\n                                      onBlur={handleBlur}\n                                      error={errors.preacher && touched.preacher}\n                                      helperText={(errors.preacher && touched.preacher) && errors.preacher}\n                                    >\n\n                                    </TextField>\n                                  </div>\n                                </div>\n                              </div>\n                             \n                              <div className=\"form-group\" style={{display: values.sermonCoverType === 'image' ? 'block': 'none'}}>\n                                <label className=\"form-control-label\">\n                                  Sermon Cover Image\n                                    </label>\n                                <input\n                                  id=\"coverimg\"\n                                  name=\"coverimg\"\n                                  type=\"file\"\n                                  onChange={(event) => {\n                                    setFieldValue(\n                                      \"coverimg\",\n                                      event.currentTarget.files[0]\n                                    );\n                                  }}\n                                  className={\n                                    touched.coverimg && errors.coverimg\n                                      ? \"  form-control-file  is-invalid\"\n                                      : \"form-control-file\"\n                                  }\n                                  onBlur={handleBlur}\n                                />\n                            \n                                 <Thumb file={values.coverimg} />\n                                {values.coverimg && <ProgressBar file={values.coverimg} setUrl={setSermonImage} directory=\"images/messages\" />}\n                                <FormError\n                                  touched={touched.coverimg}\n                                  message={errors.coverimg}\n                                />\n                              </div>\n\n                              <div className=\"form-group\" style={{display: values.sermonCoverType === 'video' ? 'block': 'none'}}>\n                                <label className=\"form-control-label\">\n                                  Sermon Cover Video\n                                    </label>\n                                <input\n                                  id=\"coverimg\"\n                                  name=\"coverimg\"\n                                  type=\"file\"\n                                  onChange={(event) => {\n                                    setFieldValue(\n                                      \"coverimg\",\n                                      event.currentTarget.files[0]\n                                    );\n                                  }}\n                                  className={\n                                    touched.coverimg && errors.coverimg\n                                      ? \"  form-control-file  is-invalid\"\n                                      : \"form-control-file\"\n                                  }\n                                  onBlur={handleBlur}\n                                />\n                            \n                                 <Thumb file={values.coverimg} />\n                                {values.coverimg && <ProgressBar file={values.coverimg} setUrl={setSermonImage} directory=\"messages/cover\" />}\n                                <FormError\n                                  touched={touched.coverimg}\n                                  message={errors.coverimg}\n                                />\n                              </div>\n\n\n                              <div className=\"form-group\">\n                                <label className=\"form-control-label\">\n                                  {values.sermonType ? \"Choose\" + \" \" + values.sermonType + \" \" + \"File\" : \"Choose File\"}\n                                </label>\n                                <input\n                                  id=\"sermonfile\"\n                                  name=\"sermonfile\"\n                                  type=\"file\"\n                                  onChange={(event) => {\n                                    setFieldValue(\n                                      \"sermonfile\",\n                                      event.currentTarget.files[0]\n                                    );\n                                  }}\n                                  className={\n                                    touched.sermonfile && errors.sermonfile\n                                      ? \"  form-control-file  is-invalid\"\n                                      : \"form-control-file\"\n                                  }\n                                  onBlur={handleBlur}\n                                />\n                                \n\n                                <Thumb file={values.sermonfile} />\n                                {values.sermonfile && <ProgressBar file={values.sermonfile} setUrl={setSermonUrl} directory={`messages/${values.sermonType}`} />}\n                                <FormError\n                                  touched={touched.sermonfile}\n                                  message={errors.sermonfile}\n                                />\n                              </div>\n\n                              <div className=\"form-group\">\n                                <Button disabled={isSubmitting} color=\"primary\" type=\"submit\" variant=\"contained\">Add Sermon</Button>\n                              </div>\n                            </form>\n                          )}\n                      </Formik>\n                    </div>\n                  </div>\n\n\n\n\n\n\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default CreateSermon;\n\n\n\n\n\n\n\n\n\n","import React from \"react\";\nimport Moment from \"react-moment\";\n// import { Link } from \"react-router-dom\"\nimport Button from \"@material-ui/core/Button\";\n\nexport const SermonCard = ({\n  title,\n  created,\n  coverimg,\n  preview,\n  sermontype,\n}) => {\n  return (\n    <div className=\"col-md-4 col-sm-12 col-xs-12 col-lg-4\">\n      <div className=\"card\">\n        {/* <img src=\"img/mockup6.jpg\" alt=\"Card image cap\" className=\"card-img-top img-fluid\" /> */}\n        <div className=\"embed-responsive embed-responsive-4by3 card\">\n          {sermontype === \"video\" ? (\n            <video\n              controls\n              poster={`images/sermon/${coverimg}`}\n              className=\"embed-responsive-item \"\n            >\n              <source src={preview} type=\"video/mp4\" />\n              <source src={preview} type=\"video/ogg\" />\n              Your browser does not support the video tag.\n            </video>\n          ) : (\n            <audio\n              controls\n              poster={`images/sermon/${coverimg}`}\n              className=\"embed-responsive-item \"\n            >\n              <source src=\"horse.ogg\" type=\"audio/ogg\" />\n              <source src=\"horse.mp3\" type=\"audio/mpeg\" />\n              Your browser does not support the audio element.\n            </audio>\n          )}\n        </div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{title}</h5>\n          {/* <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p> */}\n          <Button color=\"primary\" variant=\"contained\">\n            edit\n          </Button>{\" \"}\n          <Button color=\"secondary\" variant=\"contained\">\n            delete\n          </Button>\n          <p className=\"card-text\">\n            <small className=\"text-muted\">\n              <Moment fromNow>{created}</Moment>\n            </small>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n// import { Helmet } from \"react-helmet\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport uuid from \"react-uuid\";\nimport FormError from \"../Sermon/formError\";\nimport { Header, SideBar, ProgressBar, Thumb, firestore } from \"../../partials\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { useHistory } from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginTop: '18px',\n    minWidth: \"100%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(1) * 2,\n  },\n}));\n\nconst CreateTithe = () => {\n  const [sermonUrl, setSermonUrl] = useState('');\n  const [sermonImage, setSermonImage] = useState('');\n  const [coverType, setCoverType] = useState('image');\n  const classes = useStyles();\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ];\n\n  const years = [\n    2019, 2020, 2021,2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040\n  ];\n\n  useEffect(() => {\n    // document.getElementById(\"sermon\").classList.add(\"active\");\n  });\n\n\n  let history = useHistory()\n\n\n  const validationSchema = Yup.object().shape({\n\n    firstname: Yup.string().required(\"Firstname is required\"),\n    lastname: Yup.string().required(\"Lastname is required\"),\n    phone: Yup.string().required(\"Phone number is required\"),\n    month: Yup.string().required(\"Month tithe was paid is required\"),\n    amount: Yup.number().required(\"Amount is required\"),\n    year: Yup.number().required(\"Year is required\"),\n  });\n\n  return (\n    <React.Fragment>\n      <Header />\n      <div className=\"page-content d-flex align-items-stretch\">\n        <SideBar />\n\n            <div className=\"content-inner\">\n          <div className=\"page-content\">\n            <ToastContainer />\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <nav aria-label=\"breadcrumb\">\n                    <ol className=\"breadcrumb\">\n                      <li className=\"breadcrumb-item\"><a href=\"/dashboard/\">Dashboard</a></li>\n                      <li className=\"breadcrumb-item\"><a href=\"#\">Upload Tithe Record</a></li>\n                    </ol>\n                  </nav>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      <Button variant=\"contained\" href=\"dashboard/tithes/view\" color=\"primary\">\n                        View Tithe Records\n              </Button>\n                      {\" \"}\n                      <Button onClick={() => history.goBack()} variant=\"contained\" color=\"secondary\">Back</Button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      <Formik\n                        initialValues={{\n                          firstname: \"\",\n                          lastname: \"\",\n                          othername: \"\",\n                          amount: '',\n                          month: \"\",\n                          year: \"\",\n                        }}\n                        validationSchema={validationSchema}\n                        onSubmit={async (values, { setSubmitting, resetForm, setFieldValue }) => {\n                          try { \n                            setSubmitting(true);\n                            \n                          \n                            const data = {\n                              firstname: values.firstname,\n                                lastname: values.lastname,\n                                othername: values.othername,\n                                amount: parseInt(values.amount),\n                                month: values.month,\n                                phone: values.phone,\n                                year: values.year\n                            };\n\n                            await firestore.collection(\"titherecords\").add(data);\n                            \n                            resetForm();\n                            setSubmitting(false);\n                            toast.success(\"Tithe Record Uploaded Successfully\", {\n                              position: \"top-right\",\n                              autoClose: 5000,\n                              hideProgressBar: false,\n                              closeOnClick: true,\n                              pauseOnHover: true,\n                              draggable: true,\n                              progress: undefined,\n                            });\n                          \n                          } catch (err) {\n                            toast.error(`${err}`, {\n                              position: \"top-right\",\n                              autoClose: 5000,\n                              hideProgressBar: false,\n                              closeOnClick: true,\n                              pauseOnHover: true,\n                              draggable: true,\n                              progress: undefined,\n                            });\n                          }\n                          \n                        }}\n                      >\n                        {({\n                          values,\n                          handleSubmit,\n                          isSubmitting,\n                          setFieldValue,\n                          handleChange,\n                          touched,\n                          errors,\n                          handleBlur,\n                        }) => (\n                            <form\n                              onSubmit={handleSubmit}\n                              encType=\"multipart/form-data\"\n                            >\n\n                              <div className=\"row\">\n\n                                <div className=\"col-md-4 col-sm-12 col-lg-4 col-xs-12\">\n                                  <div className=\"form-group\">\n                                    <FormControl className={classes.formControl}>\n                                      <TextField\n                                        fullWidth\n                                        id=\"firstname\"\n                                        name=\"firstname\"\n                                        label=\"Firstname\"\n                                        margin=\"normal\"\n                                        value={values.firstname}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        error={errors.firstname && touched.firstname}\n                                        helperText={(errors.firstname && touched.firstname) && errors.firstname}\n                                      />\n                                    </FormControl>\n                                  </div>\n                                </div>\n\n                                <div className=\"col-md-4 col-sm-12 col-lg-4 col-xs-12\">\n                                  <div className=\"form-group\">\n                                    <FormControl className={classes.formControl}>\n                                      <TextField\n                                        fullWidth\n                                        id=\"lastname\"\n                                        name=\"lastname\"\n                                        label=\"Lastname\"\n                                        margin=\"normal\"\n                                        value={values.lastname}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        error={errors.lastname && touched.lastname}\n                                        helperText={(errors.lastname && touched.lastname) && errors.lastname}\n                                      />\n                                    </FormControl>\n                                  </div>\n                                </div>\n                                <div className=\"col-md-4 col-sm-12 col-lg-4 col-xs-12\">\n                                  <div className=\"form-group\">\n                                    <FormControl className={classes.formControl}>\n                                      <TextField\n                                        fullWidth\n                                        id=\"othername\"\n                                        name=\"othername\"\n                                        label=\"Other Name\"\n                                        margin=\"normal\"\n                                        value={values.othername}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormControl>\n                                  </div>\n                                </div>\n                                <div className=\"col-md-4 col-sm-12 col-lg-4 col-xs-12\">\n                                  <div className=\"form-group\">\n                                    <FormControl className={classes.formControl}>\n                                      <TextField\n                                        fullWidth\n                                        id=\"amount\"\n                                        name=\"amount\"\n                                        label=\"Amount\"\n                                        margin=\"normal\"\n                                        value={values.amount}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        error={errors.amount && touched.amount}\n                                        helperText={(errors.amount && touched.amount) && errors.amount}\n                                      />\n                                    </FormControl>\n                                  </div>\n                                </div>\n\n                                <div className=\"col-md-4 col-sm-12 col-lg-4 col-xs-12\">\n                                  <div className=\"form-group\">\n                                    <FormControl className={classes.formControl}>\n                                      <TextField\n                                        fullWidth\n                                        id=\"phone\"\n                                        name=\"phone\"\n                                        label=\"Phone Number\"\n                                        margin=\"normal\"\n                                        value={values.phone}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        error={errors.phone && touched.phone}\n                                        helperText={(errors.phone && touched.phone) && errors.phone}\n                                      />\n                                    </FormControl>\n                                  </div>\n                                </div>\n\n                                <div className=\"col-md-4 col-sm-12 col-lg-4 col-xs-12\">\n                                  <div className=\"form-group \">\n                                    <FormControl className={classes.formControl}>\n                                      <InputLabel htmlFor=\"sermontype\">Month</InputLabel>\n                                      <Select\n                                        native\n                                        fullWidth\n                                        value={values.sermonType}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        name='month'\n                                        id='month'\n                                        error={errors.month && touched.month}\n                                        >\n                                        <option value=\"\"></option>\n                                        {months.map(m =>  <option value={m}>{m}</option>)}\n                          \n                                      </Select>\n                                    </FormControl>\n                                  </div>\n                                </div>\n\n                                <div className=\"col-md-4 col-sm-12 col-lg-4 col-xs-12\">\n                                  <div className=\"form-group \">\n                                    <FormControl className={classes.formControl}>\n                                      <InputLabel htmlFor=\"sermontype\">Year</InputLabel>\n                                      <Select\n                                        native\n                                        fullWidth\n                                        value={values.sermonType}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        name='year'\n                                        id='year'\n                                        error={errors.year && touched.year}\n                                        >\n                                        <option value=\"\"></option>\n                                        {years.map(yr =>  <option value={yr}>{yr}</option>)}\n                          \n                                      </Select>\n                                    </FormControl>\n                                  </div>\n                                </div>\n                              \n                              </div>\n                             \n\n                              <div className=\"form-group\">\n                                <Button color=\"primary\" type=\"submit\" variant=\"contained\">Add Tithe Record</Button>\n                              </div>\n                            </form>\n                          )}\n                      </Formik>\n                    </div>\n                  </div>\n\n\n\n\n\n\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default CreateTithe;\n\n\n\n\n\n\n\n\n\n","import React, { useEffect, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n// import { fetchSermonList } from \"../../../redux/actions\";\nimport Button from '@material-ui/core/Button';\nimport { Header, SideBar } from \"../../partials\";\nimport { SermonCard } from \"./sermonCard\";\nimport { LoaderCard, InfoCard } from \"../Helpers\"\n\n\nconst SermonList = ({ fetchSermonList, sermonData }) => {\n\n  useEffect(() => {\n    // document.getElementById(\"sermon\").classList.add(\"active\");\n    fetchSermonList();\n  }, [fetchSermonList]);\n\n\n  return (\n    <React.Fragment>\n      <Header />\n      <div className=\"page-content d-flex align-items-stretch\">\n        <SideBar />\n\n          <div className=\"content-inner\">\n            <div className=\"page-content\">\n\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <nav aria-label=\"breadcrumb\">\n                  <ol className=\"breadcrumb\">\n                    <li className=\"breadcrumb-item\"><a href=\"/dashboard/\">Dashboard</a></li>\n                    <li className=\"breadcrumb-item\"><a href=\"#\">Sermon List</a></li>\n                  </ol>\n                </nav>\n              </div>\n              <div className=\"col-12\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <Button variant=\"contained\" href=\"dashboard/sermon/create\" color=\"primary\">\n                      Create Sermon\n                </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              {sermonData.loading ? (\n                <LoaderCard />\n\n              ) : sermonData.error ? (\n                <InfoCard error={sermonData.error + \" \" + \"Please check your connection\"} />\n\n              ) : (\n                    <Fragment>\n                      {sermonData.sermonItems.length ? (\n                        sermonData.sermonItems.map(({ sermontitle, coverimg, preview, sermontype }) => (\n                          <SermonCard title={sermontitle} coverimg={coverimg} src={preview} sermontype={sermontype} />\n                        ))\n\n                      ) : <InfoCard info=\"No assignment to display, please create new assignment\" />}\n\n                    </Fragment>\n                  )}\n            </div>\n          </div>\n\n        </div>\n          </div>\n        </div>\n    </React.Fragment>\n  );\n\n}\n\nSermonList.propTypes = {\n  fetchSermonList: PropTypes.func.isRequired,\n  sermonData: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  sermonData: state.sermon\n});\nexport default connect(mapStateToProps, {  })(SermonList);\n","import React, { useState } from 'react';\n// import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { withStyles } from '@material-ui/core/styles';\nimport { firestore } from \"../../partials\";\nimport { handleError } from '../../util';\n// import DeleteForeverRoundedIcon from '@material-ui/icons/DeleteForeverRounded';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\n// import Icon from '@material-ui/core/Icon';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination\n} from '@material-ui/core';\n\n// import { getInitials } from 'helpers';\n\nconst styles = theme => ({\n  root: {\n    // border: \"2px solid red\",\n    marginBottom: \"20px\"\n  },\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: 40\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n});\n\nconst ViewTithes = () => {\n  const classes = styles();\n  const [candidates, SetCandidates] = useState([]);\n  const [selectedCandidates, setselectedCandidates] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n\nReact.useEffect(()=> {\n  fetchTithers();\n},[]);\n\n  const handleSelectAll = event => {\n\n    let selectedCandidates;\n\n    if (event.target.checked) {\n      selectedCandidates = candidates.map(candidate => candidate.id);\n    } else {\n      selectedCandidates = [];\n    }\n\n    setselectedCandidates(selectedCandidates);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCandidates.indexOf(id);\n    let newselectedCandidates = [];\n\n    if (selectedIndex === -1) {\n      newselectedCandidates = newselectedCandidates.concat(selectedCandidates, id);\n    } else if (selectedIndex === 0) {\n      newselectedCandidates = newselectedCandidates.concat(selectedCandidates.slice(1));\n    } else if (selectedIndex === selectedCandidates.length - 1) {\n      newselectedCandidates = newselectedCandidates.concat(selectedCandidates.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newselectedCandidates = newselectedCandidates.concat(\n        selectedCandidates.slice(0, selectedIndex),\n        selectedCandidates.slice(selectedIndex + 1)\n      );\n    }\n\n    setselectedCandidates(newselectedCandidates);\n  };\n\n  const handlePageChange = (event, page) => {\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const fetchTithers = async () => {\n    await firestore.collection('titherecords')\n    .onSnapshot((querySnapshot) => {\n      const results = [];\n      querySnapshot.forEach((doc) => {\n        results.push(doc.data());\n      });\n      console.log('tithers', results)\n      SetCandidates(results);\n    \n    }, handleError);\n  }\n\n\n  return (\n    <Card\n      className={classes.root}\n    >\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedCandidates.length === candidates.length}\n                      color=\"primary\"\n                      indeterminate={\n                        selectedCandidates.length > 0 &&\n                        selectedCandidates.length < candidates.length\n                      }\n                      onChange={handleSelectAll}\n                    />\n                  </TableCell>\n                  <TableCell>Firstname</TableCell>\n                  <TableCell>Lastname</TableCell>\n                  <TableCell>Phone</TableCell>\n                  <TableCell>Month</TableCell>\n                  <TableCell>Year</TableCell>\n                  {/* <TableCell>Edit</TableCell>\n                  <TableCell>Delete</TableCell> */}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                      \n                {candidates.slice(0, rowsPerPage).map(candidate => (\n                  <TableRow\n                    className={classes.tableRow}\n                    hover\n                    key={candidate.id}\n                    selected={selectedCandidates.indexOf(candidate.id) !== -1}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={selectedCandidates.indexOf(candidate.id) !== -1}\n                        color=\"primary\"\n                        onChange={event => handleSelectOne(event, candidate.id)}\n                        value=\"true\"\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <div className={classes.nameContainer}>\n                        {/* <Avatar\n                          className={classes.avatar}\n                          src={candidate.avatarUrl}\n                        >\n                        </Avatar> */}\n                        <Typography variant=\"body1\">{candidate.firstname}</Typography>\n                      </div>\n                    </TableCell>\n                    <TableCell>{candidate.lastname}</TableCell>\n                    <TableCell>\n                    </TableCell>\n                    <TableCell>{candidate.phone}</TableCell>\n                    <TableCell>{candidate.month}</TableCell>\n                    <TableCell>{candidate.year}</TableCell>\n                    {/* <TableCell>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        startIcon={<EditTwoToneIcon />}\n\n                      >\n                        Edit\n                    </Button>\n                    </TableCell>\n                    <TableCell>\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}\n                        startIcon={<DeleteIcon />}\n                      >\n                        Delete\n                    </Button>\n                    </TableCell> */}\n                  </TableRow>\n                ))}\n\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <TablePagination\n          component=\"div\"\n          count={candidates.length}\n          onChangePage={handlePageChange}\n          onChangeRowsPerPage={handleRowsPerPageChange}\n          page={page}\n          rowsPerPage={rowsPerPage}\n          rowsPerPageOptions={[5, 10, 25]}\n        />\n      </CardActions>\n    </Card>\n  );\n};\n\n\nexport default withStyles(styles)(ViewTithes);\n","import React, { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport uuid from \"react-uuid\";\nimport FormError from \"../members/formError\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Header, SideBar, PageHeaderTitle, Footer, firestore } from \"../../partials\";\nimport { handleError } from '../../util';\nimport \"../members/form.css\";\nimport \"../members/users.css\"\nimport MemberList from './TithersList';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"name is required\"),\n  gender: Yup.string().required(\"gender is required\"),\n  address: Yup.string().required(\"address is required\"),\n  phone: Yup.number(\"must be a phone number\").required(\"phone is required\"),\n  cell: Yup.string().required(\"cell is required\"),\n  city: Yup.string().required(\"city is required \"),\n  state: Yup.string().required(\"state is required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n});\n\nfunction ViewTithes() {\n  const [members, setMember] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n   // document.getElementById(\"members\").classList.add(\"active\");\n  });\n\n  \n  return (\n    <div className=\"page\">\n      <Helmet>\n        <title>Gloryplus Tithers Records</title>\n      </Helmet>\n      {/* HEADER PART */}\n      <Header />\n      <div className=\"page-content d-flex align-items-stretch\">\n        <SideBar />\n        <div className=\"content-inner\">\n          <PageHeaderTitle title=\"Members\" currpg=\"Members\" />\n          <div className=\"container-fluid mt-3 mb-4\">\n            <MemberList />\n          </div>\n          <Footer />\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default ViewTithes;\n","import React, { Fragment } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Helmet from \"react-helmet\";\nimport {\n  Login,\n  Dasboard,\n  ContactUs,\n  Error404Page,\n  CreateCourse,\n  LiveStream,\n  Profile,\n  ListCourse,\n  FirstTimers,\n  // SecondTimers,\n  CreateEvent,\n  ListEvent,\n  CreateBranch,\n  CreateGallery,\n  ViewGallery,\n  NewUser,\n  Users,\n  CreateCell,\n  ViewCell,\n  Mvp,\n  ViewBranch,\n  CreateSermon,\n  CreateTithe,\n  ViewTithes,\n} from \"./components/pages\";\n\n\nconst Routes = () => {\n  return (\n    <Fragment>\n      <Switch>\n        {/* GENERAL ROUTE - NONE PROTECTED #########################################*/}\n\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => (\n            <Fragment>\n              <Helmet>\n                <title>Glory Plus Admin</title>\n              </Helmet>\n              <Login />\n            </Fragment>\n          )}\n        />\n\n        <Route path=\"/contactus\">\n          <ContactUs />\n        </Route>\n\n        {/* GENERAL ROUTE - NONE PROTECTED ############################################*/}\n\n        {/* PROTECTED ROUTES START HERE #############################################*/}\n        <Route exact path=\"/dashboard\">\n          <Dasboard />\n        </Route>\n\n        <Route path=\"/dashboard/first-timers\">\n          <FirstTimers />\n        </Route>\n\n        <Route path=\"/dashboard/media/sermon/create\">\n          <CreateSermon />\n        </Route>\n       \n        <Route path=\"/dashboard/member/newuser\">\n          <NewUser />\n        </Route>\n\n        <Route path=\"/dashboard/gpa/create\">\n          <CreateCourse />\n        </Route>\n\n        <Route path=\"/dashboard/gpa/view\">\n          <ListCourse />\n        </Route>\n\n        <Route path=\"/dashboard/event/create\">\n          <CreateEvent />\n        </Route>\n\n        <Route path=\"/dashboard/event/view\">\n          <ListEvent />\n        </Route>\n\n        <Route path=\"/dashboard/livestream\">\n          <LiveStream />\n        </Route>\n        <Route path=\"/dashboard/profile\">\n          <Profile />\n        </Route>\n\n        <Route path=\"/dashboard/branch/create\">\n          <CreateBranch />\n        </Route>\n\n        <Route path=\"/dashboard/branches\">\n          <ViewBranch />\n        </Route>\n\n        <Route path=\"/dashboard/gallery/create\">\n          <CreateGallery />\n        </Route>\n\n        <Route path=\"/dashboard/gallery/view\">\n          <ViewGallery />\n        </Route>\n\n        <Route path=\"/dashboard/members\">\n          <Users />\n        </Route>\n\n        <Route path=\"/dashboard/cell/create\">\n          <CreateCell />\n        </Route>\n\n        <Route path=\"/dashboard/cells\" component={ViewCell} />\n        \n        <Route path=\"/dashboard/mvp\">\n          <Mvp />\n        </Route>\n\n        <Route path=\"/dashboard/tithe/create\">\n          <CreateTithe />\n        </Route>\n\n        <Route path=\"/dashboard/tithes/view\">\n          <ViewTithes />\n        </Route>\n\n         {/* GPA :::::::::::::::::::::::::::::::::::::::::::::::::::::: */}\n         {/* <PrivateRoute\n          exact\n          path=\"/dashboard/member/create\"\n          component={CreateMember}\n          roles={[Role.ADMIN, Role.SA]}\n        />\n\n        <PrivateRoute\n          exact\n          path=\"/dashboard/gpa/create\"\n          component={CreateCourse}\n          // roles={[Role.SA, Role.ADMIN]}\n        />\n\n        <PrivateRoute\n          exact\n          path=\"/dashboard/gpa/view\"\n          component={CourseLists}\n          // roles={[Role.SA, Role.ADMIN]}\n        />\n\n        <PrivateRoute\n          exact\n          path=\"/dashboard/gpa/view/:title/:id\"\n          component={CreateLesson}\n          // roles={[Role.SA, Role.ADMIN]}\n        />\n\n        <PrivateRoute\n          exact\n          path=\"/dashboard/gpa/lesson/create/:id\"\n          component={CreateLesson}\n          // roles={[Role.SA, Role.ADMIN]}\n        />\n\n        <PrivateRoute\n          exact\n          path=\"/dashboard/gpa/assignment/:id\"\n          component={CreateAssignment}\n          // roles={[Role.SA, Role.ADMIN]}\n        />\n\n        <PrivateRoute\n          exact\n          path=\"/dashboard/gpa/candidates\"\n          component={CandidateLists}\n          // roles={[Role.SA, Role.ADMIN]}\n        /> */}\n\n        {/* GPA :::::::::::::::::::::::::::::::::::::::::::::::::::::: */}\n\n\n        {/* PROTECTED ROUTES START HERE #############################################*/}\n\n        {/* 404 ERROR ROUTE ########################################################*/}\n        <Route path=\"*\">\n          <Error404Page />\n        </Route>\n        {/* 404 ERROR ROUTE #######################################################*/}\n      </Switch>\n    </Fragment>\n  );\n};\n\nexport default Routes;\n","import { FETCH_COURSES } from \"../actions/types\";\n//here the reducer is going to evaluate any action that has been committed such as fetching and creating posts\n\nconst initialState = {\n  coursesItems: [],\n  courseItem: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_COURSES:\n      return {\n        ...state,\n        coursesItems: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { FETCH_EVENTS } from \"../actions/types\";\n//here the reducer is going to evaluate any action that has been committed such as fetching and creating posts\n\nconst initialState = {\n  eventItems: [],\n  eventItem: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_EVENTS:\n      return {\n        ...state,\n        eventItems: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { FETCH_CITIES, FETCH_COUNTRIES, FETCH_STATES, USER_LOGGED_IN } from \"../actions/types\";\n//here the reducer is going to evaluate any action that has been committed such as fetching and creating posts\n\nconst initialState = {\n  roles: [{ uid: 'FT', name: \"First Timer\"}, { uid: 'mem', name: \"Member\"}, { uid: 'ST', name: \"Second Timer\"},  { uid: 'AD', name: \"Admin\"}, { uid: \"SA\", name: \"Super Admin\"}, { uid: 'HFL', name: \"House FellowShip Leader\"},{ uid: \"map\", name: \"MVP\" }, { uid: 'media', name: \"MEDIA\" } ],\n  states: [],\n  cities: [],\n  countries: [],\n  user:{},\n  isAuthenticated: false,\n  \n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_COUNTRIES:\n      return {\n        ...state,\n        countries: [...action.countries],\n      };\n      case FETCH_STATES:\n      return {\n        ...state,\n        states: action.states,\n      };\n      case FETCH_CITIES:\n      return {\n        ...state,\n        cities: action.cities,\n      };\n      case USER_LOGGED_IN:\n        return {\n          ...state,\n          user: action.user,\n          isAuthenticated: true,\n        };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport viewCourseReducer from \"./viewCourseReducer\";\nimport viewEventReducers from \"./viewEventReducer\";\nimport userReducer from './user';\nconst rootReducer = combineReducers({\n  user: userReducer,\n  courses: viewCourseReducer,\n  events: viewEventReducers,\n});\nexport default rootReducer;\n","export const FETCH_COURSES = \"FETCH_COURSES\";\nexport const FETCH_EVENTS = \"FETCH_EVENTS\";\nexport const FETCH_COUNTRIES = 'FETCH_COUNTRIES';\nexport const FETCH_CITIES = 'FETCH_CITIES';\nexport const FETCH_STATES = 'FETCH_STATES';\nexport const SET_CELLS = 'SET_CELLS';\nexport const USER_LOGGED_IN = 'USER_LOGGED_IN';\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from \"./reducers/rootReducer\";\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['user'],\n};\nconst middlewares = [thunk];\nconst enhancers = applyMiddleware(...middlewares);\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(persistedReducer, compose(enhancers));\nconst persistor = persistStore(store);\n\nexport {\n  store,\n  persistor,\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Routes from \"./routes\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor }  from \"./redux/store\";\n// import App from \"./components/App\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor} />\n      <BrowserRouter forceRefresh={true}>\n        <Routes />\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}